language: d
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isLower(c))\n     \
    \       c = toupper(c);\n        else if(isUpper(c))\n            c = tolower(c);\n\
    \        else if(c == 'a')\n            c = 'c';\n        else if(c == 'e')\n\
    \            c = 'g';\n        else if(c == 'i')\n            c = 'k';\n     \
    \   else if(c == 'o')\n            c = 'q';\n        else if(c == 'u')\n     \
    \       c = 'y';\n        else if(c == 'A')\n            c = 'C';\n        else\
    \ if(c == 'E')\n            c = 'G';\n        else if(c == 'I')\n            c\
    \ = 'K';\n        else if(c == 'O')\n            c = 'Q';\n        else if(c ==\
    \ 'U')\n            c = 'Y';\n        encoded ~= c;\n    }\n    return encoded;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_r8q3q9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (c - 'a' + 'A');\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 'a');\n   \
    \     }\n        else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n        {\n            result ~= (c + 2);\n        }\n        else if(c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n       \
    \     result ~= (c + 2);\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkfslwtsw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                c = toLower(c);\n\
    \            } \n            else \n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hoi0tvt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            result ~= c - 'A' + 'a';\n        }\n \
    \       else if(c == 'a')\n        {\n            result ~= 'c';\n        }\n\
    \        else if(c == 'e')\n        {\n            result ~= 'g';\n        }\n\
    \        else if(c == 'i')\n        {\n            result ~= 'k';\n        }\n\
    \        else if(c == 'o')\n        {\n            result ~= 'q';\n        }\n\
    \        else if(c == 'u')\n        {\n            result ~= 'w';\n        }\n\
    \        else if(c == 'A')\n        {\n            result ~= 'C';\n        }\n\
    \        else if(c == 'E')\n        {\n            result ~= 'G';\n        }\n\
    \        else if(c == 'I')\n        {\n            result ~= 'K';\n        }\n\
    \        else if(c == 'O')\n        {\n            result ~= 'Q';\n        }\n\
    \        else if(c == 'U')\n        {\n            result ~= 'W';\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3uth7ynf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (c - 'a' + 'A');\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 'a');\n   \
    \     }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps1tgo40f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encodedMessage\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        encodedMessage ~= c;\n    }\n    return encodedMessage;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlal4d2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw5x9kv4w.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpw5x9kv4w.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5x9kv4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n    char[] result = new char[message.length];\n\
    \    foreach(i, c; message)\n    {\n        if(isUpper(c))\n        {\n      \
    \      result[i] = toLower(c);\n        }\n        else if(isLower(c))\n     \
    \   {\n            result[i] = toUpper(c);\n        }\n        else\n        {\n\
    \            result[i] = c;\n        }\n        foreach(v; vowels)\n        {\n\
    \            if(result[i] == v)\n            {\n                result[i] = v\
    \ + 2;\n            }\n        }\n    }\n    return result.idup;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppz5s_b9f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isLower(c)) \n            {\n                c = toUpper(c);\n\
    \            }\n            else \n            {\n                c = toLower(c);\n\
    \            }\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U') \n            {\n                c = c + 2;\n            }\n     \
    \       else if(c == 'Y') \n            {\n                c = 'A';\n        \
    \    }\n            else if(c == 'Z') \n            {\n                c = 'B';\n\
    \            }\n        }\n        result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptdm8h61y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvtss0k3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \       result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7e1xodqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                result ~= tolower(c);\n\
    \            }\n            else\n            {\n                result ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxx99zmhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isUpper(c))\n            {\n                result ~= toLower(c);\n\
    \            }\n            else\n            {\n                result ~= toUpper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmzgx774.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 's':\n                    c = 'u';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 't':\n                    c = 'v';\n                   \
    \ break;\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp313czvjj.d(105): Error: found \''unittest\'' instead of statement\n/tmp/tmp313czvjj.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp313czvjj.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp313czvjj.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp313czvjj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            result ~= c + ('A' - 'a');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z') \n        {\n            result ~= c + ('a' - 'A');\n\
    \        }\n        else \n        {\n            result ~= c;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n  \
    \  assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmj937cww.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c.isUpper)\n        {\n\
    \            result ~= c.toLower;\n        }\n        else if(c.isLower)\n   \
    \     {\n            result ~= c.toUpper;\n        }\n        else\n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xlzt__d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(isAlpha(c))\n        {\n    \
    \        if(isLower(c))\n            {\n                result ~= toUpper(c);\n\
    \            }\n            else\n            {\n                result ~= toLower(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxt5pmb5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvtss0k3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                if(c == 'Z')\n\
    \                {\n                    result ~= 'b';\n                }\n  \
    \              else if(c == 'Y')\n                {\n                    result\
    \ ~= 'a';\n                }\n                else\n                {\n      \
    \              result ~= tolower(c) + 2;\n                }\n            }\n \
    \           else\n            {\n                if(c == 'z')\n              \
    \  {\n                    result ~= 'B';\n                }\n                else\
    \ if(c == 'y')\n                {\n                    result ~= 'A';\n      \
    \          }\n                else\n                {\n                    result\
    \ ~= toupper(c) + 2;\n                }\n            }\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8x97_vhu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if (c >= 'a' && c <=\
    \ 'z') \n        {\n            result ~= (char)('A' + (c - 'a'));\n        }\
    \ \n        else if (c >= 'A' && c <= 'Z') \n        {\n            result ~=\
    \ (char)('a' + (c - 'A'));\n        } \n        else if (c == 'a') \n        {\n\
    \            result ~= 'c';\n        } \n        else if (c == 'e') \n       \
    \ {\n            result ~= 'g';\n        } \n        else if (c == 'i') \n   \
    \     {\n            result ~= 'k';\n        } \n        else if (c == 'o') \n\
    \        {\n            result ~= 'q';\n        } \n        else if (c == 'u')\
    \ \n        {\n            result ~= 'w';\n        } \n        else if (c == 'A')\
    \ \n        {\n            result ~= 'C';\n        } \n        else if (c == 'E')\
    \ \n        {\n            result ~= 'G';\n        } \n        else if (c == 'I')\
    \ \n        {\n            result ~= 'K';\n        } \n        else if (c == 'O')\
    \ \n        {\n            result ~= 'Q';\n        } \n        else if (c == 'U')\
    \ \n        {\n            result ~= 'W';\n        } \n        else \n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplom5v_pa.d(20): Error: C style cast illegal, use cast(char)(\''A\''
    + (c - \''a\''))\n/tmp/tmplom5v_pa.d(24): Error: C style cast illegal, use cast(char)(\''a\''
    + (c - \''A\''))\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplom5v_pa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'a':\n                    c = 'c';\n          \
    \          break;\n                case 'e':\n                    c = 'g';\n \
    \                   break;\n                case 'i':\n                    c =\
    \ 'k';\n                    break;\n                case 'o':\n              \
    \      c = 'q';\n                    break;\n                case 'u':\n     \
    \               c = 'y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpms074jx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if (isAlpha(c)) \n  \
    \      {\n            if (isUpper(c)) \n            {\n                c = toLower(c);\n\
    \            }\n            else \n            {\n                c = toUpper(c);\n\
    \            }\n        }\n        switch(c) \n        {\n            case 'a':\n\
    \                c = 'c';\n                break;\n            case 'e':\n   \
    \             c = 'g';\n                break;\n            case 'i':\n      \
    \          c = 'k';\n                break;\n            case 'o':\n         \
    \       c = 'q';\n                break;\n            case 'u':\n            \
    \    c = 'y';\n                break;\n        }\n        result ~= c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxgszj2wu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqtu0j12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw5x9kv4w.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpw5x9kv4w.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5x9kv4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(isAlpha(c))\n        {\n\
    \            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'Y':\n                    c = 'A';\n          \
    \          break;\n                case 'B':\n                    c = 'D';\n \
    \                   break;\n                case 'F':\n                    c =\
    \ 'H';\n                    break;\n                case 'J':\n              \
    \      c = 'L';\n                    break;\n                case 'P':\n     \
    \               c = 'R';\n                    break;\n                case 'V':\n\
    \                    c = 'Z';\n                    break;\n                case\
    \ 'Z':\n                    c = 'B';\n                    break;\n           \
    \     case 'C':\n                    c = 'E';\n                    break;\n  \
    \              case 'G':\n                    c = 'I';\n                    break;\n\
    \                case 'K':\n                    c = 'M';\n                   \
    \ break;\n                case 'Q':\n                    c = 'S';\n          \
    \          break;\n                case 'W':\n                    c = 'A';\n \
    \                   break;\n                case 'D':\n                    c =\
    \ 'F';\n                    break;\n                case 'H':\n              \
    \      c = 'J';\n                    break;\n                case 'L':\n     \
    \               c = 'N';\n                    break;\n                case 'R':\n\
    \                    c = 'T';\n                    break;\n                case\
    \ 'X':\n                    c = 'B';\n                    break;\n           \
    \     case 'M':\n                    c = 'O';\n                    break;\n  \
    \              case 'N':\n                    c = 'P';\n                    break;\n\
    \                case 'S':\n                    c = 'U';\n                   \
    \ break;\n               \nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6x1q8i0.d(106): Error: found \''unittest\'' instead of statement\n/tmp/tmpe6x1q8i0.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpe6x1q8i0.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpe6x1q8i0.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6x1q8i0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                result ~= tolower(c);\n\
    \            }\n            else\n            {\n                result ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxx99zmhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isUpper(c)) \n   \
    \     {\n            c = toLower(c);\n        }\n        else if(isLower(c)) \n\
    \        {\n            c = toUpper(c);\n        }\n        switch(c) \n     \
    \   {\n            case 'a':\n                c = 'c';\n                break;\n\
    \            case 'e':\n                c = 'g';\n                break;\n   \
    \         case 'i':\n                c = 'k';\n                break;\n      \
    \      case 'o':\n                c = 'q';\n                break;\n         \
    \   case 'u':\n                c = 'y';\n                break;\n        }\n \
    \       result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpap9iuod_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvtss0k3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= char(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= char(c - 'A' + 'a');\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n   \
    \ assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\")\
    \ == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6haxfbur.d(20): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmp6haxfbur.d(20): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmp6haxfbur.d(24): Error: found \''(\'' when expecting
    \''.\'' following char\n/tmp/tmp6haxfbur.d(24): Error: found \'')\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6haxfbur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                result ~=\
    \ toLower(c);\n            } \n            else \n            {\n            \
    \    result ~= toUpper(c);\n            }\n        } \n        else \n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97g78v44.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                result ~= tolower(c);\n\
    \            }\n            else\n            {\n                result ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxx99zmhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= toUpper(c);\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n    \
    \    else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp324y3hv7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isLower(c)) \n            {\n                c = toUpper(c);\n\
    \            } \n            else \n            {\n                c = toLower(c);\n\
    \            }\n            switch(c) \n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'Y':\n                    c = 'A';\n          \
    \          break;\n                case 'C':\n                    c = 'E';\n \
    \                   break;\n                case 'G':\n                    c =\
    \ 'I';\n                    break;\n                case 'K':\n              \
    \      c = 'O';\n                    break;\n                case 'Q':\n     \
    \               c = 'U';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57_d2cgv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqtu0j12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= toUpper(c);\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n    \
    \    else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp324y3hv7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                if(c == 'Z')\
    \ \n                {\n                    result ~= 'B';\n                }\n\
    \                else if(c == 'Y') \n                {\n                    result\
    \ ~= 'A';\n                }\n                else \n                {\n     \
    \               result ~= toLower(c) + 2;\n                }\n            }\n\
    \            else \n            {\n                if(c == 'z') \n           \
    \     {\n                    result ~= 'b';\n                }\n             \
    \   else if(c == 'y') \n                {\n                    result ~= 'a';\n\
    \                }\n                else \n                {\n               \
    \     result ~= c + 2;\n                }\n            }\n        }\n        else\
    \ \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp218im9ms.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message) \n    {\n        if(c >= 'a' && c <= 'z') \n\
    \        {\n            result ~= to!string(c - 'a' + 'A');\n        }\n     \
    \   else if(c >= 'A' && c <= 'Z') \n        {\n            result ~= to!string(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result ~= to!string(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpns31_wl_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if (isUpper(c))\n    \
    \        result ~= toLower(c);\n        else if (isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyalcstm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c == 'a')\n       \
    \     result ~= 'c';\n        else if(c == 'e')\n            result ~= 'g';\n\
    \        else if(c == 'i')\n            result ~= 'k';\n        else if(c == 'o')\n\
    \            result ~= 'q';\n        else if(c == 'u')\n            result ~=\
    \ 'y';\n        else if(c == 'A')\n            result ~= 'C';\n        else if(c\
    \ == 'E')\n            result ~= 'G';\n        else if(c == 'I')\n           \
    \ result ~= 'K';\n        else if(c == 'O')\n            result ~= 'Q';\n    \
    \    else if(c == 'U')\n            result ~= 'Y';\n        else if(c >= 'a' &&\
    \ c <= 'z')\n            result ~= (char)(c - 32);\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n            result ~= (char)(c + 32);\n        else\n           \
    \ result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwg8frovd.d(39): Error: C style cast illegal, use cast(char)(c
    - 32)\n/tmp/tmpwg8frovd.d(41): Error: C style cast illegal, use cast(char)(c +
    32)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwg8frovd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n        else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n  \
    \          c = c + 2;\n        }\n        else if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u')\n        {\n            c = c + 2;\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpogmdb9b6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                result ~=\
    \ toLower(c);\n            }\n            else \n            {\n             \
    \   result ~= toUpper(c);\n            }\n        }\n        else \n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpywt3giq9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                c = toLower(c);\n\
    \            }\n            else \n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgg_nnxbg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    for (int i = 0; i < message.length; i++) \n    {\n        char\
    \ c = message[i];\n        if (c >= 'a' && c <= 'z') \n        {\n           \
    \ c = toupper(c);\n        }\n        else if (c >= 'A' && c <= 'Z') \n      \
    \  {\n            c = tolower(c);\n        }\n        else \n        {\n     \
    \       result += c;\n            continue;\n        }\n        switch (c) \n\
    \        {\n            case 'A':\n                c = 'C';\n                break;\n\
    \            case 'E':\n                c = 'G';\n                break;\n   \
    \         case 'I':\n                c = 'K';\n                break;\n      \
    \      case 'O':\n                c = 'Q';\n                break;\n         \
    \   case 'U':\n                c = 'Y';\n                break;\n            case\
    \ 'a':\n                c = 'c';\n                break;\n            case 'e':\n\
    \                c = 'g';\n                break;\n            case 'i':\n   \
    \             c = 'k';\n                break;\n            case 'o':\n      \
    \          c = 'q';\n                break;\n            case 'u':\n         \
    \       c = 'y';\n                break;\n        }\n        result += c;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n  \
    \  assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0avq4lst.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= to!string(c - 'a' + 'A');\n        }\n     \
    \   else if(c >= 'A' && c <= 'Z')\n        {\n            result ~= to!string(c\
    \ - 'A' + 'a');\n        }\n        else\n        {\n            result ~= to!string(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6gbxgtiz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                c = toLower(c);\n\
    \            }\n            else \n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgg_nnxbg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujipp1wr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \   {\n            encoded ~= toLower(c);\n        }\n        else if(isLower(c))\n\
    \        {\n            encoded ~= toUpper(c);\n        }\n        else\n    \
    \    {\n            encoded ~= c;\n        }\n    }\n    return encoded;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbqi0kr62.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'a':\n                    c = 'c';\n          \
    \          break;\n                case 'e':\n                    c = 'g';\n \
    \                   break;\n                case 'i':\n                    c =\
    \ 'k';\n                    break;\n                case 'o':\n              \
    \      c = 'q';\n                    break;\n                case 'u':\n     \
    \               c = 'y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpms074jx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujipp1wr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isUpper(c))\n            {\n                result ~= toLower(c);\n\
    \            }\n            else\n            {\n                result ~= toUpper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmzgx774.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \       result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7e1xodqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                result ~= toUpper(c);\n\
    \            }\n            else\n            {\n                result ~= toLower(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz125zh41.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n            if(c == 'a')\n            {\n                c = 'c';\n\
    \            }\n            else if(c == 'e')\n            {\n               \
    \ c = 'g';\n            }\n            else if(c == 'i')\n            {\n    \
    \            c = 'k';\n            }\n            else if(c == 'o')\n        \
    \    {\n                c = 'q';\n            }\n            else if(c == 'u')\n\
    \            {\n                c = 'w';\n            }\n        }\n        result\
    \ ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6wyv5i7c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgl_vkvp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(isAlpha(c))\n        {\n    \
    \        if(isUpper(c))\n            {\n                result ~= toLower(c);\n\
    \            }\n            else\n            {\n                result ~= toUpper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy6yyueuy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = 'a' + (c - 'a' + 2) % 5;\n        }\n        else if(c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            c =\
    \ 'A' + (c - 'A' + 2) % 5;\n        }\n        result ~= c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpobotdyeh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                c = toLower(c);\n\
    \            } \n            else \n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hoi0tvt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            result ~= (char)(c - 'a' + 'A');\n        } \n    \
    \    else if(c >= 'A' && c <= 'Z') \n        {\n            result ~= (char)(c\
    \ - 'A' + 'a');\n        } \n        else \n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0wgwh1n8.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmp0wgwh1n8.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wgwh1n8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'a':\n                    c = 'c';\n          \
    \          break;\n                case 'e':\n                    c = 'g';\n \
    \                   break;\n                case 'i':\n                    c =\
    \ 'k';\n                    break;\n                case 'o':\n              \
    \      c = 'q';\n                    break;\n                case 'u':\n     \
    \               c = 'y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpms074jx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw5x9kv4w.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpw5x9kv4w.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5x9kv4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isLower(c)) \n            {\n                result ~=\
    \ toUpper(c);\n            } \n            else \n            {\n            \
    \    result ~= toLower(c);\n            }\n        } \n        else \n       \
    \ {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqdydp2e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(isAlpha(c))\n        {\n\
    \            if(isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n        }\n        switch(c)\n        {\n            case 'a':\n\
    \                c = 'c';\n                break;\n            case 'e':\n   \
    \             c = 'g';\n                break;\n            case 'i':\n      \
    \          c = 'k';\n                break;\n            case 'o':\n         \
    \       c = 'q';\n                break;\n            case 'u':\n            \
    \    c = 'y';\n                break;\n        }\n        result ~= c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbjb5kxx3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n        else\
    \ if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n  \
    \          c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpovivpark.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= char(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= char(c - 'A' + 'a');\n\
    \        }\n        else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            result ~= char(c + 2);\n        }\n        else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n  \
    \          result ~= char(c + 2);\n        }\n        else\n        {\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwc8lve0v.d(20): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmpwc8lve0v.d(20): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpwc8lve0v.d(24): Error: found \''(\'' when expecting
    \''.\'' following char\n/tmp/tmpwc8lve0v.d(24): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmpwc8lve0v.d(28): Error: found \''(\'' when
    expecting \''.\'' following char\n/tmp/tmpwc8lve0v.d(28): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmpwc8lve0v.d(32): Error: found
    \''(\'' when expecting \''.\'' following char\n/tmp/tmpwc8lve0v.d(32): Error:
    found \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpwc8lve0v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        switch(c)\n\
    \        {\n            case 'A':\n                c = 'C';\n                break;\n\
    \            case 'E':\n                c = 'G';\n                break;\n   \
    \         case 'I':\n                c = 'K';\n                break;\n      \
    \      case 'O':\n                c = 'Q';\n                break;\n         \
    \   case 'U':\n                c = 'Y';\n                break;\n            case\
    \ 'a':\n                c = 'c';\n                break;\n            case 'e':\n\
    \                c = 'g';\n                break;\n            case 'i':\n   \
    \             c = 'k';\n                break;\n            case 'o':\n      \
    \          c = 'q';\n                break;\n            case 'u':\n         \
    \       c = 'y';\n                break;\n        }\n        result ~= c;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n  \
    \  assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnyyb854z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else\n\
    \        {\n            c = c;\n        }\n        encoded ~= c;\n    }\n    return\
    \ encoded;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujiipdad.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujipp1wr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw5x9kv4w.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpw5x9kv4w.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5x9kv4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqtu0j12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            encoded ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            encoded ~= toLower(c);\n        }\n\
    \        else\n        {\n            encoded ~= c;\n        }\n    }\n    return\
    \ encoded;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2vc7nxq9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            result ~= c - 'a' + 'A';\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z') \n        {\n            result ~= c - 'A' + 'a';\n    \
    \    }\n        else \n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg3_qt42d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (c - 'a' + 'A');\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 'a');\n   \
    \     }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4izjqob6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= char(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= char(c - 'A' + 'a');\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n   \
    \ assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\")\
    \ == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6haxfbur.d(20): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmp6haxfbur.d(20): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmp6haxfbur.d(24): Error: found \''(\'' when expecting
    \''.\'' following char\n/tmp/tmp6haxfbur.d(24): Error: found \'')\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6haxfbur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \       result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7e1xodqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(c; message)\n    {\n        if(isAlpha(c))\n        {\n         \
    \   if(isLower(c))\n            {\n                c = toUpper(c);\n         \
    \   }\n            else\n            {\n                c = toLower(c);\n    \
    \        }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'a':\n                    c = 'c';\n          \
    \          break;\n                case 'e':\n                    c = 'g';\n \
    \                   break;\n                case 'i':\n                    c =\
    \ 'k';\n                    break;\n                case 'o':\n              \
    \      c = 'q';\n                    break;\n                case 'u':\n     \
    \               c = 'y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wjdwt4g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                result ~= toUpper(c);\n\
    \            }\n            else\n            {\n                result ~= toLower(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz125zh41.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (c - 'a' + 2) % 26 + 'a';\n        }\n     \
    \   else if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' +\
    \ 2) % 26 + 'A';\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcf3wpmum.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isalpha(c)) \n   \
    \     {\n            if(isupper(c)) \n            {\n                c = tolower(c);\n\
    \            }\n            else \n            {\n                c = toupper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_wjr1dnp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isUpper(c)) \n            {\n                c = toLower(c);\n\
    \            }\n            else \n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgg_nnxbg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c.isUpper)\n            result\
    \ ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxg890scd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n        }\n        switch(c)\n        {\n            case 'a':\n\
    \                c = 'c';\n                break;\n            case 'e':\n   \
    \             c = 'g';\n                break;\n            case 'i':\n      \
    \          c = 'k';\n                break;\n            case 'o':\n         \
    \       c = 'q';\n                break;\n            case 'u':\n            \
    \    c = 'y';\n                break;\n            default:\n                break;\n\
    \        }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpahybdejz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(isAlpha(c))\n        {\n    \
    \        if(isLower(c))\n            {\n                result ~= toUpper(c);\n\
    \            }\n            else\n            {\n                result ~= toLower(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxt5pmb5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            encoded ~= (char)(c - 'a' + 'A');\n        }\n       \
    \ else if(c >= 'A' && c <= 'Z')\n        {\n            encoded ~= (char)(c -\
    \ 'A' + 'a');\n        }\n        else\n        {\n            encoded ~= c;\n\
    \        }\n    }\n    return encoded;\n}\nunittest\n{\n    alias candidate =\
    \ encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeznzz5zm.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpeznzz5zm.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeznzz5zm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvtss0k3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgl_vkvp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw5x9kv4w.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpw5x9kv4w.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5x9kv4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isalpha(c)) \n   \
    \     {\n            if(isupper(c)) \n            {\n                c = tolower(c);\n\
    \            } \n            else \n            {\n                c = toupper(c);\n\
    \            }\n        }\n        switch(c) \n        {\n            case 'a':\n\
    \                c = 'c';\n                break;\n            case 'e':\n   \
    \             c = 'g';\n                break;\n            case 'i':\n      \
    \          c = 'k';\n                break;\n            case 'o':\n         \
    \       c = 'q';\n                break;\n            case 'u':\n            \
    \    c = 'y';\n                break;\n        }\n        result ~= c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgm52l2wd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcxx6ty60.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    // Write\
    \ your code here\n    string result = \"\";\n    foreach(c; message)\n    {\n\
    \        if(c >= 'a' && c <= 'z')\n        {\n            result ~= toupper(c);\n\
    \        }\n        else if(c >= 'A' && c <= 'Z')\n        {\n            result\
    \ ~= tolower(c);\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprwx5_3i3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= c.toUpper;\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9hhzx_7m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1io7ps5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result ~= (char)(c + 2);\n        }\n \
    \       else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n  \
    \      {\n            result ~= (char)(c + 2);\n        }\n        else\n    \
    \    {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptmv1zd_h.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmptmv1zd_h.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\n/tmp/tmptmv1zd_h.d(28): Error: C style cast
    illegal, use cast(char)(c + 2)\n/tmp/tmptmv1zd_h.d(32): Error: C style cast illegal,
    use cast(char)(c + 2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptmv1zd_h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isUpper(c))\n            {\n                encoded ~= toLower(c);\n\
    \            }\n            else\n            {\n                encoded ~= toUpper(c);\n\
    \            }\n        }\n        else\n        {\n            encoded ~= c;\n\
    \        }\n    }\n    return encoded;\n}\nunittest\n{\n    alias candidate =\
    \ encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfs1qpjm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U')\n            {\n                c = c + 2;\n            }\n      \
    \      else if(c == 'Y')\n            {\n                c = 'A';\n          \
    \  }\n            else if(c == 'Z')\n            {\n                c = 'B';\n\
    \            }\n        }\n        encoded ~= c;\n    }\n    return encoded;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpri53w7qk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(isalpha(c))\n        {\n    \
    \        if(isupper(c))\n            {\n                c = tolower(c);\n    \
    \        }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'A':\n                    c = 'C';\n \
    \                   break;\n                case 'E':\n                    c =\
    \ 'G';\n                    break;\n                case 'I':\n              \
    \      c = 'K';\n                    break;\n                case 'O':\n     \
    \               c = 'Q';\n                    break;\n                case 'U':\n\
    \                    c = 'Y';\n                    break;\n                case\
    \ 'Y':\n                    c = 'A';\n                    break;\n           \
    \ }\n        }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrn48np9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= char(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= char(c - 'A' + 'a');\n\
    \        }\n        else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            result ~= char(c + 2);\n        }\n        else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n  \
    \          result ~= char(c + 2);\n        }\n        else\n        {\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6prfg_0o.d(20): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmp6prfg_0o.d(20): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmp6prfg_0o.d(24): Error: found \''(\'' when expecting
    \''.\'' following char\n/tmp/tmp6prfg_0o.d(24): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmp6prfg_0o.d(28): Error: found \''(\'' when
    expecting \''.\'' following char\n/tmp/tmp6prfg_0o.d(28): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmp6prfg_0o.d(32): Error: found
    \''(\'' when expecting \''.\'' following char\n/tmp/tmp6prfg_0o.d(32): Error:
    found \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp6prfg_0o.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                result ~= tolower(c);\n\
    \            }\n            else\n            {\n                result ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxx99zmhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= c.toUpper;\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9hhzx_7m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcxx6ty60.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isLower(c)) \n            {\n                result ~=\
    \ toUpper(c);\n            }\n            else \n            {\n             \
    \   result ~= toLower(c);\n            }\n        }\n        else \n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjwwvae9a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'a':\n                    c = 'c';\n          \
    \          break;\n                case 'e':\n                    c = 'g';\n \
    \                   break;\n                case 'i':\n                    c =\
    \ 'k';\n                    break;\n                case 'o':\n              \
    \      c = 'q';\n                    break;\n                case 'u':\n     \
    \               c = 'y';\n                    break;\n            }\n        }\n\
    \        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70ntestl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                result ~= tolower(c);\n\
    \            }\n            else\n            {\n                result ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxx99zmhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                result ~= tolower(c);\n\
    \            }\n            else\n            {\n                result ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxx99zmhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            encoded ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            encoded ~= tolower(c);\n        }\n\
    \        else\n        {\n            encoded ~= c;\n        }\n    }\n    return\
    \ encoded;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwe3scu56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1io7ps5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n        else\
    \ if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n  \
    \          c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpovivpark.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 'm':\n                    c = 'o';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 's':\n                    c = 'u';\n                   \
    \ break;\n               \nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8olbq6h5.d(106): Error: found \''unittest\'' instead of statement\n/tmp/tmp8olbq6h5.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp8olbq6h5.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp8olbq6h5.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8olbq6h5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujipp1wr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            result ~= c - 'A' + 'a';\n        }\n \
    \       else if(c == 'a')\n        {\n            result ~= 'c';\n        }\n\
    \        else if(c == 'e')\n        {\n            result ~= 'g';\n        }\n\
    \        else if(c == 'i')\n        {\n            result ~= 'k';\n        }\n\
    \        else if(c == 'o')\n        {\n            result ~= 'q';\n        }\n\
    \        else if(c == 'u')\n        {\n            result ~= 'w';\n        }\n\
    \        else if(c == 'A')\n        {\n            result ~= 'C';\n        }\n\
    \        else if(c == 'E')\n        {\n            result ~= 'G';\n        }\n\
    \        else if(c == 'I')\n        {\n            result ~= 'K';\n        }\n\
    \        else if(c == 'O')\n        {\n            result ~= 'Q';\n        }\n\
    \        else if(c == 'U')\n        {\n            result ~= 'W';\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3uth7ynf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= char(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= char(c - 'A' + 'a');\n\
    \        }\n        else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            result ~= char(c + 2);\n        }\n        else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n  \
    \          result ~= char(c + 2);\n        }\n        else\n        {\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6prfg_0o.d(20): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmp6prfg_0o.d(20): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmp6prfg_0o.d(24): Error: found \''(\'' when expecting
    \''.\'' following char\n/tmp/tmp6prfg_0o.d(24): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmp6prfg_0o.d(28): Error: found \''(\'' when
    expecting \''.\'' following char\n/tmp/tmp6prfg_0o.d(28): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmp6prfg_0o.d(32): Error: found
    \''(\'' when expecting \''.\'' following char\n/tmp/tmp6prfg_0o.d(32): Error:
    found \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp6prfg_0o.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c == 'a')\n            result\
    \ ~= 'c';\n        else if(c == 'e')\n            result ~= 'g';\n        else\
    \ if(c == 'i')\n            result ~= 'k';\n        else if(c == 'o')\n      \
    \      result ~= 'q';\n        else if(c == 'u')\n            result ~= 'w';\n\
    \        else if(c == 'A')\n            result ~= 'C';\n        else if(c == 'E')\n\
    \            result ~= 'G';\n        else if(c == 'I')\n            result ~=\
    \ 'K';\n        else if(c == 'O')\n            result ~= 'Q';\n        else if(c\
    \ == 'U')\n            result ~= 'W';\n        else if(c >= 'a' && c <= 'z')\n\
    \            result ~= c.toUpper;\n        else if(c >= 'A' && c <= 'Z')\n   \
    \         result ~= c.toLower;\n        else\n            result ~= c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp58bm84i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isalpha(c)) \n   \
    \     {\n            if(isupper(c)) \n            {\n                c = tolower(c);\n\
    \            }\n            else \n            {\n                c = toupper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 'm':\n                    c = 'o';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 's':\n                    c = 'u';\n\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprziko3f.d(105): Error: found \''unittest\'' instead of statement\n/tmp/tmpprziko3f.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpprziko3f.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpprziko3f.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprziko3f.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if (c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n       \
    \ {\n            c = c + 2;\n        }\n        else if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n  \
    \      }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp46nzqu78.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                encoded ~= tolower(c);\n\
    \            }\n            else\n            {\n                encoded ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            encoded ~= c;\n\
    \        }\n    }\n    return encoded;\n}\nunittest\n{\n    alias candidate =\
    \ encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2a1mhnbb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c == 'a')\n       \
    \     result ~= 'c';\n        else if(c == 'A')\n            result ~= 'C';\n\
    \        else if(c == 'e')\n            result ~= 'g';\n        else if(c == 'E')\n\
    \            result ~= 'G';\n        else if(c == 'i')\n            result ~=\
    \ 'k';\n        else if(c == 'I')\n            result ~= 'K';\n        else if(c\
    \ == 'o')\n            result ~= 'q';\n        else if(c == 'O')\n           \
    \ result ~= 'Q';\n        else if(c == 'u')\n            result ~= 'w';\n    \
    \    else if(c == 'U')\n            result ~= 'W';\n        else if(c == 'y')\n\
    \            result ~= 'a';\n        else if(c == 'Y')\n            result ~=\
    \ 'A';\n        else if(c == 'z')\n            result ~= 'b';\n        else if(c\
    \ == 'Z')\n            result ~= 'B';\n        else if(c >= 'a' && c <= 'z')\n\
    \            result ~= (char)(c + 2);\n        else if(c >= 'A' && c <= 'Z')\n\
    \            result ~= (char)(c + 2);\n        else\n            result ~= c;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n\
    \    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv0zc7nae.d(47): Error: C style cast illegal, use cast(char)(c
    + 2)\n/tmp/tmpv0zc7nae.d(49): Error: C style cast illegal, use cast(char)(c +
    2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0zc7nae.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw5x9kv4w.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpw5x9kv4w.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5x9kv4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            result ~= c.toUpper;\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z') \n        {\n            result ~= c.toLower;\n        }\n\
    \        else \n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu52k13v3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            encoded ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            encoded ~= tolower(c);\n        }\n\
    \        else if(c == 'a')\n        {\n            encoded ~= 'c';\n        }\n\
    \        else if(c == 'e')\n        {\n            encoded ~= 'g';\n        }\n\
    \        else if(c == 'i')\n        {\n            encoded ~= 'k';\n        }\n\
    \        else if(c == 'o')\n        {\n            encoded ~= 'q';\n        }\n\
    \        else if(c == 'u')\n        {\n            encoded ~= 'w';\n        }\n\
    \        else if(c == 'A')\n        {\n            encoded ~= 'C';\n        }\n\
    \        else if(c == 'E')\n        {\n            encoded ~= 'G';\n        }\n\
    \        else if(c == 'I')\n        {\n            encoded ~= 'K';\n        }\n\
    \        else if(c == 'O')\n        {\n            encoded ~= 'Q';\n        }\n\
    \        else if(c == 'U')\n        {\n            encoded ~= 'W';\n        }\n\
    \        else\n        {\n            encoded ~= c;\n        }\n    }\n    return\
    \ encoded;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptrw48of6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgl_vkvp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isalpha(c)) \n   \
    \     {\n            if(isupper(c)) \n            {\n                c = tolower(c);\n\
    \            }\n            else \n            {\n                c = toupper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 'm':\n                    c = 'o';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 's':\n                    c = 'u';\n\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprziko3f.d(105): Error: found \''unittest\'' instead of statement\n/tmp/tmpprziko3f.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpprziko3f.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpprziko3f.d(115):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprziko3f.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(isAlpha(c))\n        {\n\
    \            if(isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                default:\n                    c = c + 2;\n\
    \                    break;\n            }\n        }\n        result ~= c;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n\
    \    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8n1p36st.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n        {\n\
    \            result ~= (c - 'a' + 2) % 26 + 'A';\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 2) % 26 + 'a';\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n   \
    \ assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\")\
    \ == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz85c9fgj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujipp1wr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(isalpha(c))\n        {\n    \
    \        if(isupper(c))\n            {\n                c = tolower(c);\n    \
    \        }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplehprx3w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n        {\n\
    \            result ~= (c - 'a' + 2) % 26 + 'A';\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 2) % 26 + 'a';\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n   \
    \ assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\")\
    \ == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz85c9fgj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'Y':\n                    c = 'A';\n          \
    \          break;\n                case 'C':\n                    c = 'E';\n \
    \                   break;\n                case 'G':\n                    c =\
    \ 'I';\n                    break;\n                case 'K':\n              \
    \      c = 'O';\n                    break;\n                case 'Q':\n     \
    \               c = 'U';\n                    break;\n                case 'W':\n\
    \                    c = 'Y';\n                    break;\n                case\
    \ 'B':\n                    c = 'D';\n                    break;\n           \
    \     case 'F':\n                    c = 'H';\n                    break;\n  \
    \              case 'J':\n                    c = 'L';\n                    break;\n\
    \                case 'N':\n                    c = 'P';\n                   \
    \ break;\n                case 'R':\n                    c = 'T';\n          \
    \          break;\n                case 'V':\n                    c = 'X';\n \
    \                   break;\n                case 'Z':\n                    c =\
    \ 'B';\n                    break;\n                case 'D':\n              \
    \      c = 'F';\n                    break;\n                case 'H':\n     \
    \               c = 'J';\n                    break;\n                case 'L':\n\
    \                    c = 'N';\n                    break;\n                case\
    \ 'P':\n                    c = 'R';\n                    break;\n           \
    \     case 'T':\n                    c = 'V';\n                    break;\n  \
    \              case 'X':\n                    c = 'Z';\n                    break;\n\
    \            }\n        }\n        result ~= c;\n    }\n   \nunittest\n{\n   \
    \ alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpchvqi6d7.d(107): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpchvqi6d7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'A':\n                    c = 'C';\n \
    \                   break;\n                case 'E':\n                    c =\
    \ 'G';\n                    break;\n                case 'I':\n              \
    \      c = 'K';\n                    break;\n                case 'O':\n     \
    \               c = 'Q';\n                    break;\n                case 'U':\n\
    \                    c = 'Y';\n                    break;\n                case\
    \ 'Y':\n                    c = 'A';\n                    break;\n           \
    \ }\n        }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb1cco_9m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(ch; message)\n    {\n        if(isAlpha(ch))\n        {\n\
    \            if(isUpper(ch))\n            {\n                ch = toLower(ch);\n\
    \            }\n            else\n            {\n                ch = toUpper(ch);\n\
    \            }\n            if(ch == 'a')\n            {\n                ch =\
    \ 'c';\n            }\n            else if(ch == 'e')\n            {\n       \
    \         ch = 'g';\n            }\n            else if(ch == 'i')\n         \
    \   {\n                ch = 'k';\n            }\n            else if(ch == 'o')\n\
    \            {\n                ch = 'q';\n            }\n            else if(ch\
    \ == 'u')\n            {\n                ch = 'y';\n            }\n        }\n\
    \        result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpom79ldcg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c == 'a')\n       \
    \     result ~= 'c';\n        else if(c == 'e')\n            result ~= 'g';\n\
    \        else if(c == 'i')\n            result ~= 'k';\n        else if(c == 'o')\n\
    \            result ~= 'q';\n        else if(c == 'u')\n            result ~=\
    \ 'y';\n        else if(c == 'A')\n            result ~= 'C';\n        else if(c\
    \ == 'E')\n            result ~= 'G';\n        else if(c == 'I')\n           \
    \ result ~= 'K';\n        else if(c == 'O')\n            result ~= 'Q';\n    \
    \    else if(c == 'U')\n            result ~= 'Y';\n        else if(c >= 'a' &&\
    \ c <= 'z')\n            result ~= toUpper(c);\n        else if(c >= 'A' && c\
    \ <= 'Z')\n            result ~= toLower(c);\n        else\n            result\
    \ ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6iocs6j8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \       result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7e1xodqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (c - 'a' + 'A');\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 'a');\n   \
    \     }\n        else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n        {\n            result ~= (c + 2);\n        }\n        else if(c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n       \
    \     result ~= (c + 2);\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkfslwtsw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encodedMessage\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            encodedMessage ~= toupper(c);\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            encodedMessage ~= tolower(c);\n\
    \        }\n        else\n        {\n            encodedMessage ~= c;\n      \
    \  }\n    }\n    return encodedMessage;\n}\nunittest\n{\n    alias candidate =\
    \ encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdf4ibvpl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcxx6ty60.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= c.toUpper;\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= c.toLower;\n        }\n \
    \       else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv03u2iw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(isalpha(c))\n        {\n\
    \            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 'm':\n                    c = 'o';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 's':\n                    c = 'u';\n                   \
    \ break;\n                case\nunittest\n{\n    alias candidate = encode;\n\n\
    \    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9zsoqt0y.d(106): Error: expression expected, not \''unittest\''\n/tmp/tmp9zsoqt0y.d(107):
    Error: found \''{\'' when expecting \'':\''\n/tmp/tmp9zsoqt0y.d(116): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp9zsoqt0y.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp9zsoqt0y.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9zsoqt0y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n        else\
    \ if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n  \
    \          c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpovivpark.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (char)('A' + (c - 'a'));\n        }\n      \
    \  else if (c >= 'A' && c <= 'Z')\n        {\n            result ~= (char)('a'\
    \ + (c - 'A'));\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpea2ef02_.d(20): Error: C style cast illegal, use cast(char)(\''A\''
    + (c - \''a\''))\n/tmp/tmpea2ef02_.d(24): Error: C style cast illegal, use cast(char)(\''a\''
    + (c - \''A\''))\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpea2ef02_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message) \n    {\n        if(isAlpha(c)) \n        {\n\
    \            if(isUpper(c)) \n            {\n                result ~= toLower(c);\n\
    \            } \n            else \n            {\n                result ~= toUpper(c);\n\
    \            }\n        } \n        else \n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjyege2oo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'a':\n                    c = 'c';\n          \
    \          break;\n                case 'e':\n                    c = 'g';\n \
    \                   break;\n                case 'i':\n                    c =\
    \ 'k';\n                    break;\n                case 'o':\n              \
    \      c = 'q';\n                    break;\n                case 'u':\n     \
    \               c = 'y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpms074jx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'Y':\n                    c = 'A';\n          \
    \          break;\n                case 'C':\n                    c = 'E';\n \
    \                   break;\n                case 'G':\n                    c =\
    \ 'I';\n                    break;\n                case 'K':\n              \
    \      c = 'O';\n                    break;\n                case 'Q':\n     \
    \               c = 'U';\n                    break;\n                case 'W':\n\
    \                    c = 'Y';\n                    break;\n                case\
    \ 'B':\n                    c = 'D';\n                    break;\n           \
    \     case 'F':\n                    c = 'H';\n                    break;\n  \
    \              case 'J':\n                    c = 'L';\n                    break;\n\
    \                case 'N':\n                    c = 'P';\n                   \
    \ break;\n                case 'R':\n                    c = 'T';\n          \
    \          break;\n                case 'V':\n                    c = 'X';\n \
    \                   break;\n                case 'Z':\n                    c =\
    \ 'B';\n                    break;\n                case 'D':\n              \
    \      c = 'F';\n                    break;\n                case 'H':\n     \
    \               c = 'J';\n                    break;\n                case 'L':\n\
    \                    c = 'N';\n                    break;\n                case\
    \ 'P':\n                    c = 'R';\n                    break;\n           \
    \     case 'T':\n                    c = 'V';\n                    break;\n  \
    \              case 'X':\n                    c = 'Z';\n                    break;\n\
    \            }\n        }\n        encoded ~= c;\n    }\n   \nunittest\n{\n  \
    \  alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpytf5a345.d(107): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytf5a345.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message) \n    {\n        if(c >= 'a' && c <= 'z') \n\
    \        {\n            result ~= to!string(c - 'a' + 'A');\n        }\n     \
    \   else if(c >= 'A' && c <= 'Z') \n        {\n            result ~= to!string(c\
    \ - 'A' + 'a');\n        }\n        else if(c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') \n        {\n            result ~= to!string(c + 2);\n\
    \        }\n        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') \n        {\n            result ~= to!string(c + 2);\n        }\n  \
    \      else \n        {\n            result ~= to!string(c);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptpc9qdnw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 'm':\n                    c = 'o';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 's':\n                    c = 'u';\n                   \
    \ break;\n               \nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8olbq6h5.d(106): Error: found \''unittest\'' instead of statement\n/tmp/tmp8olbq6h5.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp8olbq6h5.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp8olbq6h5.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8olbq6h5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            result ~= (char)(c - 'a' + 'A');\n        }\n     \
    \   else if(c >= 'A' && c <= 'Z') \n        {\n            result ~= (char)(c\
    \ - 'A' + 'a');\n        }\n        else if(c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') \n        {\n            result ~= (char)(c + 2);\n  \
    \      }\n        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U') \n        {\n            result ~= (char)(c + 2);\n        }\n        else\
    \ \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf57dqzr7.d(20): Error: C style cast illegal, use cast(char)(c
    - \''a\'' + \''A\'')\n/tmp/tmpf57dqzr7.d(24): Error: C style cast illegal, use
    cast(char)(c - \''A\'' + \''a\'')\n/tmp/tmpf57dqzr7.d(28): Error: C style cast
    illegal, use cast(char)(c + 2)\n/tmp/tmpf57dqzr7.d(32): Error: C style cast illegal,
    use cast(char)(c + 2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf57dqzr7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9a5kd2xp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isUpper(c)) \n   \
    \     {\n            result ~= toLower(c);\n        } \n        else if(isLower(c))\
    \ \n        {\n            result ~= toUpper(c);\n        } \n        else \n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lhub4d3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqtu0j12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \       result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7e1xodqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(isAlpha(c))\n        {\n\
    \            if(isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplrpedwck.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1io7ps5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= (c - 'a' + 'A');\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result ~= (c - 'A' + 'a');\n   \
    \     }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4izjqob6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z') \n   \
    \     {\n            result ~= toupper(c);\n        } \n        else if(c >= 'A'\
    \ && c <= 'Z') \n        {\n            result ~= tolower(c);\n        } \n  \
    \      else if(c == 'a') \n        {\n            result ~= 'c';\n        } \n\
    \        else if(c == 'e') \n        {\n            result ~= 'g';\n        }\
    \ \n        else if(c == 'i') \n        {\n            result ~= 'k';\n      \
    \  } \n        else if(c == 'o') \n        {\n            result ~= 'q';\n   \
    \     } \n        else if(c == 'u') \n        {\n            result ~= 'w';\n\
    \        } \n        else if(c == 'A') \n        {\n            result ~= 'C';\n\
    \        } \n        else if(c == 'E') \n        {\n            result ~= 'G';\n\
    \        } \n        else if(c == 'I') \n        {\n            result ~= 'K';\n\
    \        } \n        else if(c == 'O') \n        {\n            result ~= 'Q';\n\
    \        } \n        else if(c == 'U') \n        {\n            result ~= 'W';\n\
    \        } \n        else \n        {\n            result ~= c;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n \
    \   assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_r8nnbf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            c = c - 'A' + 'a';\n        }\n       \
    \ else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n\
    \            c = c + 2;\n        }\n        else if(c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            c = c + 2;\n       \
    \ }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5he4p8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'b':\n                    c = 'd';\n          \
    \          break;\n                case 'f':\n                    c = 'h';\n \
    \                   break;\n                case 'j':\n                    c =\
    \ 'l';\n                    break;\n                case 'p':\n              \
    \      c = 'r';\n                    break;\n                case 'v':\n     \
    \               c = 'z';\n                    break;\n                case 'c':\n\
    \                    c = 'e';\n                    break;\n                case\
    \ 'g':\n                    c = 'i';\n                    break;\n           \
    \     case 'k':\n                    c = 'm';\n                    break;\n  \
    \              case 'q':\n                    c = 's';\n                    break;\n\
    \                case 'w':\n                    c = 'a';\n                   \
    \ break;\n                case 'd':\n                    c = 'f';\n          \
    \          break;\n                case 'h':\n                    c = 'j';\n \
    \                   break;\n                case 'l':\n                    c =\
    \ 'n';\n                    break;\n                case 'r':\n              \
    \      c = 't';\n                    break;\n                case 'x':\n     \
    \               c = 'b';\n                    break;\n                case 'y':\n\
    \                    c = 'd';\n                    break;\n                case\
    \ 'z':\n                    c = 'f';\n                    break;\n           \
    \ }\n        }\n        result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\"\
    );\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45g9niw6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= toupper(c);\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n    \
    \    else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1k9ms3z3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvtss0k3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            c = toupper(c);\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            c = tolower(c);\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'c';\n        }\n        else if(c == 'e')\n\
    \        {\n            c = 'g';\n        }\n        else if(c == 'i')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'o')\n        {\n\
    \            c = 'q';\n        }\n        else if(c == 'u')\n        {\n     \
    \       c = 'w';\n        }\n        else if(c == 'A')\n        {\n          \
    \  c = 'C';\n        }\n        else if(c == 'E')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'I')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'O')\n        {\n            c = 'Q';\n     \
    \   }\n        else if(c == 'U')\n        {\n            c = 'W';\n        }\n\
    \        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n    alias\
    \ candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1io7ps5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(isalpha(c))\n        {\n    \
    \        if(isupper(c))\n            {\n                c = tolower(c);\n    \
    \        }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'y':\n                    c = 'a';\n          \
    \          break;\n                case 'b':\n                    c = 'd';\n \
    \                   break;\n                case 'f':\n                    c =\
    \ 'h';\n                    break;\n                case 'j':\n              \
    \      c = 'l';\n                    break;\n                case 'p':\n     \
    \               c = 'r';\n                    break;\n                case 'v':\n\
    \                    c = 'z';\n                    break;\n                case\
    \ 'z':\n                    c = 'b';\n                    break;\n           \
    \     case 'c':\n                    c = 'e';\n                    break;\n  \
    \              case 'g':\n                    c = 'i';\n                    break;\n\
    \                case 'k':\n                    c = 'm';\n                   \
    \ break;\n                case 'q':\n                    c = 's';\n          \
    \          break;\n                case 'w':\n                    c = 'a';\n \
    \                   break;\n                case 'd':\n                    c =\
    \ 'f';\n                    break;\n                case 'h':\n              \
    \      c = 'j';\n                    break;\n                case 'l':\n     \
    \               c = 'n';\n                    break;\n                case 'r':\n\
    \                    c = 't';\n                    break;\n                case\
    \ 'x':\n                    c = 'c';\n                    break;\n           \
    \     case 's':\n                    c = 'u';\n                    break;\n  \
    \              case 'n':\n                    c = 'p';\n                    break;\n\
    \                case 't':\n                    c = 'v';\n                   \
    \ break;\n                case '\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwlaiev5w.d(105): Error: unterminated character constant\n/tmp/tmpwlaiev5w.d(106):
    Error: found \''unittest\'' when expecting \'':\''\n/tmp/tmpwlaiev5w.d(116): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpwlaiev5w.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpwlaiev5w.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpwlaiev5w.d(116):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlaiev5w.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isalpha(c)) \n   \
    \     {\n            if(isupper(c)) \n            {\n                c = tolower(c);\n\
    \            } \n            else \n            {\n                c = toupper(c);\n\
    \            }\n            switch(c) \n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpdpj2c8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(isAlpha(c)) \n   \
    \     {\n            if(isLower(c)) \n            {\n                c = toUpper(c);\n\
    \            } \n            else \n            {\n                c = toLower(c);\n\
    \            }\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U') \n            {\n                c = c + 2;\n            }\n     \
    \       else if(c == 'Y') \n            {\n                c = 'A';\n        \
    \    }\n            else if(c == 'Z') \n            {\n                c = 'B';\n\
    \            }\n        }\n        result ~= c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") ==\
    \ \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4in6080.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result;\n\
    \    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n     \
    \   {\n            result ~= toupper(c);\n        }\n        else if(c >= 'A'\
    \ && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n    \
    \    else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\"\
    ) == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"\
    YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS\
    \ C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1k9ms3z3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                encoded ~= tolower(c);\n\
    \            }\n            else\n            {\n                encoded ~= toupper(c);\n\
    \            }\n        }\n        else\n        {\n            encoded ~= c;\n\
    \        }\n    }\n    return encoded;\n}\nunittest\n{\n    alias candidate =\
    \ encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2a1mhnbb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            result ~= 'A' + (c - 'a');\n        } \n        else\
    \ if(c >= 'A' && c <= 'Z') \n        {\n            result ~= 'a' + (c - 'A');\n\
    \        } \n        else \n        {\n            result ~= c;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n \
    \   assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg83j4526.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toUpper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= toLower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvtss0k3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isAlpha(c))\n     \
    \   {\n            if(isLower(c))\n            {\n                c = toUpper(c);\n\
    \            }\n            else\n            {\n                c = toLower(c);\n\
    \            }\n            switch(c)\n            {\n                case 'A':\n\
    \                    c = 'C';\n                    break;\n                case\
    \ 'E':\n                    c = 'G';\n                    break;\n           \
    \     case 'I':\n                    c = 'K';\n                    break;\n  \
    \              case 'O':\n                    c = 'Q';\n                    break;\n\
    \                case 'U':\n                    c = 'Y';\n                   \
    \ break;\n                case 'C':\n                    c = 'E';\n          \
    \          break;\n                case 'G':\n                    c = 'I';\n \
    \                   break;\n                case 'K':\n                    c =\
    \ 'M';\n                    break;\n                case 'Q':\n              \
    \      c = 'S';\n                    break;\n                case 'Y':\n     \
    \               c = 'A';\n                    break;\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'c':\n                    c = 'e';\n          \
    \          break;\n                case 'g':\n                    c = 'i';\n \
    \                   break;\n                case 'k':\n                    c =\
    \ 'm';\n                    break;\n                case 'q':\n              \
    \      c = 's';\n                    break;\n                case 'y':\n     \
    \               c = 'a';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmt5apugk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isalpha(c))\n     \
    \   {\n            if(isupper(c))\n            {\n                c = tolower(c);\n\
    \            }\n            else\n            {\n                c = toupper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9a5kd2xp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= char(c - 'a' + 'A');\n        }\n        else\
    \ if(c >= 'A' && c <= 'Z')\n        {\n            result ~= char(c - 'A' + 'a');\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\n   \
    \ assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\")\
    \ == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6haxfbur.d(20): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmp6haxfbur.d(20): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmp6haxfbur.d(24): Error: found \''(\'' when expecting
    \''.\'' following char\n/tmp/tmp6haxfbur.d(24): Error: found \'')\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6haxfbur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if (isAlpha(c))\n    \
    \    {\n            if (isUpper(c))\n            {\n                c = toLower(c);\n\
    \            }\n            else\n            {\n                c = toUpper(c);\n\
    \            }\n            switch(c)\n            {\n                case 'a':\n\
    \                    c = 'c';\n                    break;\n                case\
    \ 'e':\n                    c = 'g';\n                    break;\n           \
    \     case 'i':\n                    c = 'k';\n                    break;\n  \
    \              case 'o':\n                    c = 'q';\n                    break;\n\
    \                case 'u':\n                    c = 'y';\n                   \
    \ break;\n                case 'A':\n                    c = 'C';\n          \
    \          break;\n                case 'E':\n                    c = 'G';\n \
    \                   break;\n                case 'I':\n                    c =\
    \ 'K';\n                    break;\n                case 'O':\n              \
    \      c = 'Q';\n                    break;\n                case 'U':\n     \
    \               c = 'Y';\n                    break;\n            }\n        }\n\
    \        result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"\
    Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfm9ur9jq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            result ~= toupper(c);\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z')\n        {\n            result ~= tolower(c);\n        }\n\
    \        else\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"\
    TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n  \
    \  assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17qjy_qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string result\
    \ = \"\";\n    foreach(char c; message)\n    {\n        if(isUpper(c))\n     \
    \       result ~= toLower(c);\n        else if(isLower(c))\n            result\
    \ ~= toUpper(c);\n        else\n            result ~= c;\n        \n        switch(c)\n\
    \        {\n            case 'a':\n                result ~= 'c';\n          \
    \      break;\n            case 'e':\n                result ~= 'g';\n       \
    \         break;\n            case 'i':\n                result ~= 'k';\n    \
    \            break;\n            case 'o':\n                result ~= 'q';\n \
    \               break;\n            case 'u':\n                result ~= 'y';\n\
    \                break;\n            case 'A':\n                result ~= 'C';\n\
    \                break;\n            case 'E':\n                result ~= 'G';\n\
    \                break;\n            case 'I':\n                result ~= 'K';\n\
    \                break;\n            case 'O':\n                result ~= 'Q';\n\
    \                break;\n            case 'U':\n                result ~= 'Y';\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = encode;\n\
    \n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt\
    \ KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfuh019oy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018
- exit_code: 1
  program: "import std.math;\n/*\n\n    Write a function that takes a message, and\
    \ encodes in such a \n    way that it swaps case of all letters, replaces all\
    \ vowels in \n    the message with the letter that appears 2 places ahead of that\
    \ \n    vowel in the english alphabet. \n    Assume only letters. \n    \n   \
    \ Examples:\n            \n*/\nstring encode(string message) \n{\n    string encoded\
    \ = \"\";\n    foreach(char c; message) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            c = c - 'a' + 'A';\n        }\n        else if(c >=\
    \ 'A' && c <= 'Z') \n        {\n            c = c - 'A' + 'a';\n        }\n  \
    \      else if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') \n  \
    \      {\n            c = c + 2;\n        }\n        else if(c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U') \n        {\n            c = c + 2;\n\
    \        }\n        encoded ~= c;\n    }\n    return encoded;\n}\nunittest\n{\n\
    \    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n\
    \    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\"\
    ) == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    );\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT\
    \ Tq wRkTg\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18r6x0ja.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978018

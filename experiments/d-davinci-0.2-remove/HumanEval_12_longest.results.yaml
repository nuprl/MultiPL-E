language: d
name: HumanEval_12_longest
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(str.length > longest.length)\
    \ \n        {\n            longest = str;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj4vp6xsq.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554a1]

    ??:? void tmpj4vp6xsq.__unittest_L20_C1() [0x44142b]

    ??:? void tmpj4vp6xsq.__modtest() [0x452fb0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e317]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ace]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cc1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d50]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454aa5]

    ??:? runModuleUnitTests [0x45e0ed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45642c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest is null\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp37b9zklh.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp37b9zklh.__unittest_L20_C1() [0x44143b]

    ??:? void tmp37b9zklh.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if (longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpamkf0r9x.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpamkf0r9x.__unittest_L20_C1() [0x441437]

    ??:? void tmpamkf0r9x.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(longest.isNull\
    \ || longest.get.length < str.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest;\n\
    \    foreach(string s; strings)\n    {\n        if(longest.isNull || s.length\
    \ > longest.get.length)\n            longest = s;\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ longest.get.length < s.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt8c8y_1n.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpt8c8y_1n.__unittest_L20_C1() [0x441437]

    ??:? void tmpt8c8y_1n.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string str; strings)\n    {\n        if(longest.isNull\
    \ || str.length > longest.get.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeehvz9ao.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpeehvz9ao.__unittest_L20_C1() [0x441437]

    ??:? void tmpeehvz9ao.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    auto longest = strings[0];\n    foreach (string;\
    \ strings)\n    {\n        if (string.length > longest.length)\n            longest\
    \ = string;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ag6_mvh.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmp5ag6_mvh.d(18): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ag6_mvh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    string longest = strings[0];\n    foreach (string\
    \ s; strings)\n    {\n        if (s.length > longest.length)\n            longest\
    \ = s;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt883fqrb.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmpt883fqrb.d(18): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt883fqrb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest is null || str.length\
    \ > longest.length) \n        {\n            longest = str;\n        }\n    }\n\
    \    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n  \
    \      auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n\
    \        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6q6jhwjp.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp6q6jhwjp.__unittest_L20_C1() [0x44143b]

    ??:? void tmp6q6jhwjp.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest.isNull ||\
    \ longest.get.length < s.length) \n        {\n            longest = s;\n     \
    \   }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp56zayl1r.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp56zayl1r.__unittest_L20_C1() [0x441437]

    ??:? void tmp56zayl1r.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else\n        {\n    \
    \        if(s.length > result.get.length)\n            {\n                result\
    \ = s;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = Nullable!(string).init(str);\n        }\n   \
    \     else if(str.length > result.get.length)\n        {\n            result =\
    \ Nullable!(string).init(str);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3a3otrso.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    /tmp/tmp3a3otrso.d(19): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3a3otrso.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if (longest.isNull\
    \ || longest.get.length < str.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest;\n\
    \    foreach(str; strings)\n    {\n        if(longest.isNull || str.length > longest.get.length)\n\
    \        {\n            longest = str;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if\
    \ (result.isNull || s.length > result.get.length)\n        {\n            result\
    \ = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = str;\n        }\n        else\n        {\n \
    \           if(str.length > longest.get.length)\n            {\n             \
    \   longest = str;\n            }\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = Nullable!(string).init(s);\n        }\n    \
    \    else\n        {\n            if(s.length > longest.get.length)\n        \
    \    {\n                longest = Nullable!(string).init(s);\n            }\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2zlpb_hz.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    /tmp/tmp2zlpb_hz.d(21): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zlpb_hz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(result is null ||\
    \ s.length > result.get.length)\n        {\n            result = s;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr0vkid04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpr0vkid04.__unittest_L20_C1() [0x44143b]

    ??:? void tmpr0vkid04.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164388
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(s.length\
    \ > longest.getOrInit.length)\n        {\n            longest = s;\n        }\n\
    \    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp466fwhez.d(13): Error: no property `getOrInit` for type `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp466fwhez.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if (longest is null\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4e1w_bx0.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp4e1w_bx0.__unittest_L20_C1() [0x44143b]

    ??:? void tmp4e1w_bx0.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164388
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings) \n    {\n        if(str.length\
    \ > longest.getOrElse(\"\").length) \n        {\n            longest = Nullable!(string).init(str);\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx4dxrk3e.d(13): Error: no property `getOrElse` for type `Nullable!string`

    /tmp/tmpx4dxrk3e.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4dxrk3e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    auto longest = strings[0];\n    foreach (string;\
    \ strings)\n    {\n        if (string.length > longest.length)\n            longest\
    \ = string;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ag6_mvh.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmp5ag6_mvh.d(18): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ag6_mvh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(!longest.isNull)\n\
    \        {\n            if(s.length > longest.get.length)\n            {\n   \
    \             longest = s;\n            }\n        }\n        else\n        {\n\
    \            longest = s;\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = Nullable!(string).init(s);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7seg7wu6.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7seg7wu6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest is null\
    \ || s.length > longest.length) \n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp8itdngt.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpp8itdngt.__unittest_L20_C1() [0x44143b]

    ??:? void tmpp8itdngt.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if\
    \ (s.length > result.get.length)\n        {\n            result.set(s);\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwd9euiyd.d(15): Error: no property `set` for type `Nullable!string`,
    did you mean `std.typecons.Nullable!string.Nullable.get`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwd9euiyd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    import std.algorithm.iteration\
    \ : max;\n    import std.algorithm.comparison : maxElement;\n    import std.range\
    \ : empty;\n    import std.typecons : Nullable;\n    Nullable!(string) result;\n\
    \    if (strings.empty)\n        return result;\n    else\n        return Nullable!(string)(strings[maxElement!((a,\
    \ b) => a.length > b.length)(strings)]);\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4qo0tnwm.d(10): Error: module `std.algorithm.iteration` import
    `max` not found, did you mean template `std.algorithm.iteration.map(fun...) if
    (fun.length >= 1)`?

    /tmp/tmp4qo0tnwm.d(11): Error: module `std.algorithm.comparison` import `maxElement`
    not found

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4qo0tnwm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = s;\n        }\n        else if(s.length > longest.get.length)\n\
    \        {\n            longest = s;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    int maxLength = 0;\n    foreach(string s; strings)\n\
    \    {\n        if(s.length > maxLength)\n        {\n            maxLength = s.length;\n\
    \            result = s;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn8s35cqg.d(16): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8s35cqg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || longest.get.length < s.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest is null ||\
    \ s.length > longest.get.length)\n            longest = s;\n    }\n    return\
    \ longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto\
    \ result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull &&\
    \ result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\"\
    , \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get\
    \ == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplg77zvrk.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmplg77zvrk.__unittest_L18_C1() [0x44143b]

    ??:? void tmplg77zvrk.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string str; strings)\n    {\n        if(longest.isNull\
    \ || str.length > longest.get.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeehvz9ao.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpeehvz9ao.__unittest_L20_C1() [0x441437]

    ??:? void tmpeehvz9ao.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if (longest is null\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpggt5159r.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpggt5159r.__unittest_L20_C1() [0x44143b]

    ??:? void tmpggt5159r.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull\
    \ || str.length > result.get.length)\n        {\n            result = str;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(s.length > longest.length)\n\
    \        {\n            longest = s;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp55sjzub6.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554a1]

    ??:? void tmp55sjzub6.__unittest_L20_C1() [0x44142b]

    ??:? void tmp55sjzub6.__modtest() [0x452fb0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e317]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ace]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cc1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d50]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454aa5]

    ??:? runModuleUnitTests [0x45e0ed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45642c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull\
    \ || str.length > result.get.length)\n        {\n            result = str;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else if(s.length > result.get.length)\n\
    \        {\n            result = s;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || longest.get.length\
    \ < str.length) \n        {\n            longest = str;\n        }\n    }\n  \
    \  return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n    \
    \    auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n  \
    \      auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkscjvo_t.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpkscjvo_t.__unittest_L20_C1() [0x441437]

    ??:? void tmpkscjvo_t.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || longest.get.length < s.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest is null ||\
    \ s.length > longest.get.length)\n            longest = s;\n    }\n    return\
    \ longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto\
    \ result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull &&\
    \ result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\"\
    , \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get\
    \ == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplg77zvrk.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmplg77zvrk.__unittest_L18_C1() [0x44143b]

    ??:? void tmplg77zvrk.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    else\n    {\n        auto longest = strings[0];\n\
    \        foreach (string s; strings)\n        {\n            if (s.length > longest.length)\n\
    \                longest = s;\n        }\n        return longest;\n    }\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg314xiq.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmpsg314xiq.d(20): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg314xiq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = str;\n        }\n        else\n        {\n  \
    \          if(str.length > result.get.length)\n            {\n               \
    \ result = str;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest is null\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp37b9zklh.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp37b9zklh.__unittest_L20_C1() [0x44143b]

    ??:? void tmp37b9zklh.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull\
    \ || str.length > result.get.length)\n        {\n            result = str;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length) \n        {\n            longest = s;\n     \
    \   }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpd0jzkzkc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpd0jzkzkc.__unittest_L20_C1() [0x441437]

    ??:? void tmpd0jzkzkc.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings) \n    {\n        if(result.isNull\
    \ || str.length > result.get.length) \n        {\n            result = Nullable!(string).init(str);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmtrd3cby.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtrd3cby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = str;\n        }\n        else\n        {\n  \
    \          if(str.length > result.get.length)\n            {\n               \
    \ result = str;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length) \n        {\n            longest = s;\n     \
    \   }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpd0jzkzkc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpd0jzkzkc.__unittest_L20_C1() [0x441437]

    ??:? void tmpd0jzkzkc.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(result is null ||\
    \ s.length > result.get.length)\n        {\n            result = s;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr0vkid04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpr0vkid04.__unittest_L20_C1() [0x44143b]

    ??:? void tmpr0vkid04.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164388
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if (longest.isNull ||\
    \ longest.get.length < s.length)\n            longest = s;\n    }\n    return\
    \ longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto\
    \ result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull &&\
    \ result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\"\
    , \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get\
    \ == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6fj5gy8c.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp6fj5gy8c.__unittest_L18_C1() [0x441437]

    ??:? void tmp6fj5gy8c.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = null;\n    foreach(str; strings)\n    {\n        if (result.isNull || str.length\
    \ > result.get.length)\n        {\n            result = str;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n   \
    \     auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n \
    \       auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5ftdk_qp.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp5ftdk_qp.__unittest_L20_C1() [0x441437]

    ??:? void tmp5ftdk_qp.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || longest.get.length\
    \ < str.length)\n        {\n            longest = str;\n        }\n    }\n   \
    \ return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n     \
    \   auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n   \
    \     auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjz003vtm.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpjz003vtm.__unittest_L20_C1() [0x441437]

    ??:? void tmpjz003vtm.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164391
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull\
    \ || str.length > result.get.length)\n        {\n            result = str;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest;\n\
    \    foreach(str; strings)\n    {\n        if(longest.isNull || str.length > longest.get.length)\n\
    \        {\n            longest = str;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(longest.isNull\
    \ || str.length > longest.get.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ longest.get.length < s.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt8c8y_1n.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpt8c8y_1n.__unittest_L20_C1() [0x441437]

    ??:? void tmpt8c8y_1n.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length) \n        {\n            longest = s;\n     \
    \   }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpd0jzkzkc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpd0jzkzkc.__unittest_L20_C1() [0x441437]

    ??:? void tmpd0jzkzkc.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else\n        {\n    \
    \        if(s.length > result.get.length)\n            {\n                result\
    \ = s;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(s.length\
    \ > longest.getOrElse(\"\").length)\n        {\n            longest = Nullable!(string).init;\n\
    \            longest.set(s);\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ctjc833.d(13): Error: no property `getOrElse` for type `Nullable!string`

    /tmp/tmp7ctjc833.d(16): Error: no property `set` for type `Nullable!string`, did
    you mean `std.typecons.Nullable!string.Nullable.get`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ctjc833.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ longest.get.length < s.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt8c8y_1n.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpt8c8y_1n.__unittest_L20_C1() [0x441437]

    ??:? void tmpt8c8y_1n.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ longest.get.length < s.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt8c8y_1n.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpt8c8y_1n.__unittest_L20_C1() [0x441437]

    ??:? void tmpt8c8y_1n.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    else\n    {\n        string longest = strings[0];\n\
    \        foreach (string s; strings)\n        {\n            if (s.length > longest.length)\n\
    \                longest = s;\n        }\n        return longest;\n    }\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplct1yiqt.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmplct1yiqt.d(20): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplct1yiqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if (longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpamkf0r9x.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpamkf0r9x.__unittest_L20_C1() [0x441437]

    ??:? void tmpamkf0r9x.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest is null || str.length\
    \ > longest.length) \n        {\n            longest = str;\n        }\n    }\n\
    \    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n  \
    \      auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n\
    \        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6q6jhwjp.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp6q6jhwjp.__unittest_L20_C1() [0x44143b]

    ??:? void tmp6q6jhwjp.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = Nullable!(string).init(s);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7seg7wu6.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7seg7wu6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if\
    \ (longest.isNull || s.length > longest.get.length) \n        {\n            longest\
    \ = s;\n        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164391
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = str;\n        }\n        else\n        {\n  \
    \          if(str.length > result.get.length)\n            {\n               \
    \ result = str;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string str; strings) \n    {\n        if(longest is null\
    \ || str.length > longest.get.length) \n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpchxaelbe.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpchxaelbe.__unittest_L20_C1() [0x44143b]

    ??:? void tmpchxaelbe.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164391
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else if(s.length > result.get.length)\n\
    \        {\n            result = s;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(str.length > longest.length)\n\
    \        {\n            longest = str;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp62dlaq7h.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554a1]

    ??:? void tmp62dlaq7h.__unittest_L20_C1() [0x44142b]

    ??:? void tmp62dlaq7h.__modtest() [0x452fb0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e317]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ace]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cc1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d50]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454aa5]

    ??:? runModuleUnitTests [0x45e0ed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45642c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164391
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(longest.isNull\
    \ || str.length > longest.get.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull\
    \ || s.length > result.get.length)\n        {\n            result = s;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest is null ||\
    \ s.length > longest.get.length)\n            longest = s;\n    }\n    return\
    \ longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto\
    \ result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull &&\
    \ result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\"\
    , \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get\
    \ == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplg77zvrk.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmplg77zvrk.__unittest_L18_C1() [0x44143b]

    ??:? void tmplg77zvrk.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if (longest is null\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpggt5159r.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpggt5159r.__unittest_L20_C1() [0x44143b]

    ??:? void tmpggt5159r.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length) \n        {\n            longest = s;\n     \
    \   }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpd0jzkzkc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpd0jzkzkc.__unittest_L20_C1() [0x441437]

    ??:? void tmpd0jzkzkc.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest is null || str.length\
    \ > longest.length)\n        {\n            longest = str;\n        }\n    }\n\
    \    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n  \
    \      auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n\
    \        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm37w4vjj.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpm37w4vjj.__unittest_L20_C1() [0x44143b]

    ??:? void tmpm37w4vjj.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    else\n    {\n        string longest = strings[0];\n\
    \        foreach (string s; strings)\n        {\n            if (s.length > longest.length)\n\
    \                longest = s;\n        }\n        return longest;\n    }\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplct1yiqt.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmplct1yiqt.d(20): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplct1yiqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if\
    \ (result.isNull || s.length > result.get.length)\n        {\n            result\
    \ = s;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else\n        {\n    \
    \        if(s.length > result.get.length)\n            {\n                result\
    \ = s;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if\
    \ (result.isNull)\n        {\n            result = s;\n        }\n        else\n\
    \        {\n            if (s.length > result.get.length)\n            {\n   \
    \             result = s;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings) \n    {\n        if (result.isNull\
    \ || str.length > result.get.length) \n        {\n            result = str;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest is null ||\
    \ s.length > longest.get.length)\n            longest = s;\n    }\n    return\
    \ longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto\
    \ result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull &&\
    \ result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\"\
    , \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get\
    \ == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplg77zvrk.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmplg77zvrk.__unittest_L18_C1() [0x44143b]

    ??:? void tmplg77zvrk.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if (longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp24y4u65l.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp24y4u65l.__unittest_L20_C1() [0x441437]

    ??:? void tmp24y4u65l.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest is null\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp37b9zklh.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp37b9zklh.__unittest_L20_C1() [0x44143b]

    ??:? void tmp37b9zklh.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    else\n    {\n        size_t maxLength = 0;\n \
    \       size_t maxIndex = 0;\n        foreach (i, s; strings)\n        {\n   \
    \         if (s.length > maxLength)\n            {\n                maxLength\
    \ = s.length;\n                maxIndex = i;\n            }\n        }\n     \
    \   return strings[maxIndex];\n    }\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpflk2lb87.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmpflk2lb87.d(24): Error: cannot implicitly convert expression `strings[maxIndex]`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpflk2lb87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164390
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string str; strings)\n    {\n        if(longest is null\
    \ || str.length > longest.get.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpno81cj9f.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpno81cj9f.__unittest_L20_C1() [0x44143b]

    ??:? void tmpno81cj9f.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if (longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpamkf0r9x.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpamkf0r9x.__unittest_L20_C1() [0x441437]

    ??:? void tmpamkf0r9x.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest is null || str.length\
    \ > longest.length)\n        {\n            longest = str;\n        }\n    }\n\
    \    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n{\n  \
    \      auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n\
    \        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm37w4vjj.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpm37w4vjj.__unittest_L20_C1() [0x44143b]

    ??:? void tmpm37w4vjj.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = str;\n        }\n        else if(str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    string longest = strings[0];\n    foreach (string\
    \ s; strings)\n    {\n        if (s.length > longest.length)\n            longest\
    \ = s;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt883fqrb.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmpt883fqrb.d(18): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt883fqrb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(longest.isNull\
    \ || longest.get.length < s.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else\n        {\n    \
    \        if(s.length > result.get.length)\n            {\n                result\
    \ = s;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(!longest.isNull)\n\
    \        {\n            if(str.length > longest.get.length)\n            {\n \
    \               longest = str;\n            }\n        }\n        else\n     \
    \   {\n            longest = str;\n        }\n    }\n    return longest;\n}\n\
    unittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull\
    \ || s.length > longest.get.length)\n        {\n            longest = s;\n   \
    \     }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164389
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = s;\n        }\n        else\n        {\n   \
    \         if(s.length > longest.get.length)\n            {\n                longest\
    \ = s;\n            }\n        }\n    }\n    return longest;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphhwr2ota.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554c9]

    ??:? void tmphhwr2ota.__unittest_L27_C1() [0x44144f]

    ??:? void tmphhwr2ota.__modtest() [0x452fd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e33f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454af6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459ce9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454acd]

    ??:? runModuleUnitTests [0x45e115]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x456454]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(result.isNull\
    \ || str.length > result.get.length)\n        {\n            result = str;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length)\n        {\n            longest = str;\n        }\n  \
    \  }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz80xjo0s.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpz80xjo0s.__unittest_L20_C1() [0x441437]

    ??:? void tmpz80xjo0s.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings) \n    {\n        if(result.isNull\
    \ || str.length > result.get.length) \n        {\n            result = str;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length)\n        {\n            longest = s;\n      \
    \  }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcv92hi04.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpcv92hi04.__unittest_L20_C1() [0x441437]

    ??:? void tmpcv92hi04.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings)\n    {\n        if(str.length > longest.length)\n\
    \        {\n            longest = str;\n        }\n    }\n    return longest;\n\
    }\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp62dlaq7h.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554a1]

    ??:? void tmp62dlaq7h.__unittest_L20_C1() [0x44142b]

    ??:? void tmp62dlaq7h.__modtest() [0x452fb0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e317]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ace]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cc1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d50]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454aa5]

    ??:? runModuleUnitTests [0x45e0ed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45642c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164391
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(result.isNull ||\
    \ s.length > result.get.length)\n        {\n            result = s;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppjil4lmx.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmppjil4lmx.__unittest_L20_C1() [0x441437]

    ??:? void tmppjil4lmx.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(str; strings) \n    {\n        if(longest.isNull || str.length\
    \ > longest.get.length) \n        {\n            longest = str;\n        }\n \
    \   }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\n\
    {\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n\
    {\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprg2wm9ri.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmprg2wm9ri.__unittest_L20_C1() [0x441437]

    ??:? void tmprg2wm9ri.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(str; strings) \n    {\n        if(result.isNull\
    \ || str.length > result.get.length) \n        {\n            result = Nullable!(string).init(str);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmtrd3cby.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtrd3cby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164388
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings) \n    {\n        if(result.isNull\
    \ || s.length > result.get.length) \n        {\n            result = s;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(s.length\
    \ > longest.getOrElse(\"\").length)\n        {\n            longest = Nullable!(string).init(s);\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5e_8xp0h.d(13): Error: no property `getOrElse` for type `Nullable!string`

    /tmp/tmp5e_8xp0h.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5e_8xp0h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164391
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    if (strings.length ==\
    \ 0)\n        return null;\n    string longest = strings[0];\n    foreach (string\
    \ s; strings)\n    {\n        if (s.length > longest.length)\n            longest\
    \ = s;\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt883fqrb.d(11): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    /tmp/tmpt883fqrb.d(18): Error: cannot implicitly convert expression `longest`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt883fqrb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164386
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longestString\
    \ = null;\n    foreach(string s; strings)\n    {\n        if(longestString.isNull\
    \ || s.length > longestString.get.length)\n        {\n            longestString\
    \ = s;\n        }\n    }\n    return longestString;\n}\nunittest\n{\n    alias\
    \ candidate = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpts6p7_cu.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpts6p7_cu.__unittest_L20_C1() [0x441437]

    ??:? void tmpts6p7_cu.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = s;\n        }\n        else\n        {\n   \
    \         if(s.length > longest.get.length)\n            {\n                longest\
    \ = s;\n            }\n        }\n    }\n    return longest;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(str; strings)\n    {\n        if(longest.isNull\
    \ || str.length > longest.get.length)\n        {\n            longest = str;\n\
    \        }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate =\
    \ longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164390
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest is null\
    \ || s.length > longest.get.length) \n        {\n            longest = s;\n  \
    \      }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp37b9zklh.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmp37b9zklh.__unittest_L20_C1() [0x44143b]

    ??:? void tmp37b9zklh.__modtest() [0x452fc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164387
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(longest.isNull)\n\
    \        {\n            longest = s;\n        }\n        else\n        {\n   \
    \         if(s.length > longest.get.length)\n            {\n                longest\
    \ = s;\n            }\n        }\n    }\n    return longest;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164392
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if\
    \ (longest.isNull || s.length > longest.get.length)\n        {\n            longest\
    \ = Nullable!(string).init(s);\n        }\n    }\n    return longest;\n}\nunittest\n\
    {\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n\
    \        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr3b0erwl.d(15): Error: function expected before `()`, not `Nullable(null,
    true).get()` of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr3b0erwl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164391
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) longest\
    \ = null;\n    foreach(string s; strings) \n    {\n        if(longest.isNull ||\
    \ s.length > longest.get.length) \n        {\n            longest = s;\n     \
    \   }\n    }\n    return longest;\n}\nunittest\n{\n    alias candidate = longest;\n\
    \n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\
    \n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull\
    \ && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"\
    yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull\
    \ && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpd0jzkzkc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4554b1]

    ??:? void tmpd0jzkzkc.__unittest_L20_C1() [0x441437]

    ??:? void tmpd0jzkzkc.__modtest() [0x452fbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x45e327]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x454ade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x459cd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x459d60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x459c5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x454ab5]

    ??:? runModuleUnitTests [0x45e0fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x45643c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164390
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Out of list of strings, return\
    \ the longest one. Return the first one in case of multiple\n    strings of the\
    \ same length. Return None in case the input list is empty.\n                \n\
    */\nNullable!(string) longest(string[] strings) \n{\n    Nullable!(string) result\
    \ = Nullable!(string).init;\n    foreach(string s; strings)\n    {\n        if(result.isNull)\n\
    \        {\n            result = s;\n        }\n        else\n        {\n    \
    \        if(s.length > result.get.length)\n            {\n                result\
    \ = s;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n \
    \       assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\"\
    , \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\
    \n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\"\
    , \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164387

language: d
name: HumanEval_35_max_element
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(long\
    \ i; l)\n    {\n        if(i > max)\n        {\n            max = i;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec8p1f_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(long\
    \ e; l)\n    {\n        if (e > max)\n            max = e;\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw0cewqe9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(el;\
    \ l)\n    {\n        if(el > max)\n        {\n            max = el;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxmrdrzw9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\n/*\nReturn minimum element in the list.\n        \
    \    \n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e < min)\n        {\n            min = e;\n        }\n\
    \    }\n    return min;\n}\n/*\nReturn the sum of all elements in the list.\n\
    \            \n*/\nlong sum(long[] l) \n{\n    long sum = 0;\n    foreach(e; l)\n\
    \    {\n        sum += e;\n    }\n    return sum;\n}\n/*\nReturn the average of\
    \ all elements in the list.\n            \n*/\ndouble average(long[] l) \n{\n\
    \    return sum(l) / l.length;\n}\n/*\nReturn the median of all elements in the\
    \ list.\n            \n*/\ndouble median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    std.algorithm.sort(sorted);\n    if (sorted.length % 2 == 0)\n    {\n   \
    \     return (sorted[sorted.length / 2] + sorted[sorted.length / 2 - 1]) / 2;\n\
    \    }\n    else\n    {\n        return sorted[sorted.length / 2];\n    }\n}\n\
    /*\nReturn the standard deviation of all elements in the list.\n            \n\
    */\ndouble stddev(long[] l) \n{\n    double avg = average(l);\n    double sum\
    \ = 0;\n    foreach(e; l)\n    {\n        sum += (e - avg) * (e - avg);\n    }\n\
    \    return sqrt(sum / l.length);\n}\n/*\nReturn the variance of all elements\
    \ in the list.\n            \n*/\ndouble variance(long[] l) \n{\n    double avg\
    \ = average(l);\n    double sum = 0;\n    foreach(e; l)\n    {\n        sum +=\
    \ (e -\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6plaae2h.d(97): Error: expression expected, not \''unittest\''\n/tmp/tmp6plaae2h.d(96):
    Error: found \''{\'' when expecting \'')\''\n/tmp/tmp6plaae2h.d(99): Error: found
    \''alias\'' when expecting \'';\'' following statement\n/tmp/tmp6plaae2h.d(104):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6plaae2h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(long\
    \ e; l)\n    {\n        if (e > max)\n            max = e;\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw0cewqe9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\n/*\nReturn minimum element in the list.\n        \
    \    \n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e < min)\n        {\n            min = e;\n        }\n\
    \    }\n    return min;\n}\n/*\nReturn the sum of all elements in the list.\n\
    \            \n*/\nlong sum(long[] l) \n{\n    long sum = 0;\n    foreach(e; l)\n\
    \    {\n        sum += e;\n    }\n    return sum;\n}\n/*\nReturn the average of\
    \ all elements in the list.\n            \n*/\ndouble average(long[] l) \n{\n\
    \    return sum(l) / l.length;\n}\n/*\nReturn the median of all elements in the\
    \ list.\n            \n*/\ndouble median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    if (sorted.length % 2 == 0)\n    {\n        return (sorted[sorted.length\
    \ / 2] + sorted[sorted.length / 2 - 1]) / 2;\n    }\n    else\n    {\n       \
    \ return sorted[sorted.length / 2];\n    }\n}\n/*\nReturn the variance of all\
    \ elements in the list.\n            \n*/\ndouble variance(long[] l) \n{\n   \
    \ double avg = average(l);\n    double sum = 0;\n    foreach(e; l)\n    {\n  \
    \      sum += (e - avg) * (e - avg);\n    }\n    return sum / l.length;\n}\n/*\n\
    Return the standard deviation of all elements in the list.\n            \n*/\n\
    double standard_deviation(long[] l) \n{\n    return sqrt(variance(l));\n}\n/*\n\
    Return the mode of all elements in the list.\n            \n*/\nlong[] mode(long[]\
    \ l) \n{\n    long[] sorted = sort(\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj58xy4d4.d(100): Error: expression expected, not \''unittest\''\n/tmp/tmpj58xy4d4.d(101):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpj58xy4d4.d(102): Error: expression
    expected, not \''alias\''\n/tmp/tmpj58xy4d4.d(102): Error: found \''candidate\''
    when expecting \'',\''\n/tmp/tmpj58xy4d4.d(102): Error: expression expected, not
    \''=\''\n/tmp/tmpj58xy4d4.d(102): Error: found \''max_element\'' when expecting
    \'',\''\n/tmp/tmpj58xy4d4.d(102): Error: expression expected, not \'';\''\n/tmp/tmpj58xy4d4.d(104):
    Error: found \''assert\'' when expecting \'',\''\n/tmp/tmpj58xy4d4.d(104): Error:
    found \'';\'' when expecting \'',\''\n/tmp/tmpj58xy4d4.d(105): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpj58xy4d4.d(106): Error: expression expected, not
    \''}\''\n/tmp/tmpj58xy4d4.d(107): Error: found \''void\'' when expecting \'',\''\n/tmp/tmpj58xy4d4.d(107):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpj58xy4d4.d(107): Error: expression
    expected, not \''}\''\n/tmp/tmpj58xy4d4.d(107): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmpj58xy4d4.d(107): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmpj58xy4d4.d(107):
    Error: semicolon expected, not \''EOF\''\n/tmp/tmpj58xy4d4.d(107): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpj58xy4d4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l) \n    {\n        if (i > max) \n        {\n            max = i;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeah9btmr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(long\
    \ i; l) \n    {\n        if (i > max) \n        {\n            max = i;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6bhrijir.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;l)\n\
    \    {\n        if(max < i)\n        {\n            max = i;\n        }\n    }\n\
    \    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yo6ithn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = 0;\n    foreach(e; l)\n\
    \    {\n        if(e > max)\n        {\n            max = e;\n        }\n    }\n\
    \    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkg_h0u_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    for (int i\
    \ = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n        {\n       \
    \     max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvies9o31.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    for (long i\
    \ = 1; i < l.length; i++) \n    {\n        if (l[i] > max) \n        {\n     \
    \       max = l[i];\n        }\n    }\n    return max;\n}\n/*\nReturn minimum\
    \ element in the list.\n            \n*/\nlong min_element(long[] l) \n{\n   \
    \ long min = l[0];\n    for (long i = 1; i < l.length; i++) \n    {\n        if\
    \ (l[i] < min) \n        {\n            min = l[i];\n        }\n    }\n    return\
    \ min;\n}\n/*\nReturn the sum of all elements in the list.\n            \n*/\n\
    long sum(long[] l) \n{\n    long sum = 0;\n    for (long i = 0; i < l.length;\
    \ i++) \n    {\n        sum += l[i];\n    }\n    return sum;\n}\n/*\nReturn the\
    \ sum of all elements in the list.\n            \n*/\nlong sum(long[] l, long\
    \ start, long end) \n{\n    long sum = 0;\n    for (long i = start; i < end; i++)\
    \ \n    {\n        sum += l[i];\n    }\n    return sum;\n}\n/*\nReturn the sum\
    \ of all elements in the list.\n            \n*/\nlong sum(long[] l, long start,\
    \ long end, long step) \n{\n    long sum = 0;\n    for (long i = start; i < end;\
    \ i += step) \n    {\n        sum += l[i];\n    }\n    return sum;\n}\n/*\nReturn\
    \ the sum of all elements in the list.\n            \n*/\nlong sum(long[] l, long\
    \ start, long end, long step, long offset) \n{\n    long sum = 0;\n    for (long\
    \ i = start; i < end; i += step) \n    {\n        sum += l[i + offset];\n    }\n\
    \    return sum;\n}\n/*\nReturn the sum of all elements in the list.\n       \
    \     \n*/\nlong sum(long[] l, long start,\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkdernprs.d(91): Error: basic type expected, not unittest\n/tmp/tmpkdernprs.d(91):
    Error: found \''unittest\'' when expecting \'')\''\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpkdernprs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;l)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9v3s7o86.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l) \n    {\n        if (elem > max) \n        {\n            max = elem;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8qqb0fb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(long\
    \ i; l)\n    {\n        if(i > max)\n        {\n            max = i;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec8p1f_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\n/*\nReturn minimum element in the list.\n    \
    \        \n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e < min) \n        {\n            min = e;\n       \
    \ }\n    }\n    return min;\n}\n/*\nReturn the sum of all elements in the list.\n\
    \            \n*/\nlong sum(long[] l) \n{\n    long sum = 0;\n    foreach(e; l)\
    \ \n    {\n        sum += e;\n    }\n    return sum;\n}\n/*\nReturn the average\
    \ of all elements in the list.\n            \n*/\ndouble average(long[] l) \n\
    {\n    return sum(l) / l.length;\n}\n/*\nReturn the median of all elements in\
    \ the list.\n            \n*/\ndouble median(long[] l) \n{\n    long[] sorted\
    \ = l.dup;\n    std.algorithm.sort(sorted);\n    if (sorted.length % 2 == 0) \n\
    \    {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length /\
    \ 2]) / 2.0;\n    }\n    else \n    {\n        return sorted[sorted.length / 2];\n\
    \    }\n}\n/*\nReturn the standard deviation of all elements in the list.\n  \
    \          \n*/\ndouble stddev(long[] l) \n{\n    double avg = average(l);\n \
    \   double sum = 0;\n    foreach(e; l) \n    {\n        sum += (e - avg) * (e\
    \ - avg);\n    }\n    return sqrt(sum / l.length);\n}\n/*\nReturn the variance\
    \ of all elements in the list.\n            \n*/\ndouble variance(long[] l) \n\
    {\n    double avg = average(l);\n    double sum = 0;\n    foreach(e; l)\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj06puz96.d(95): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj06puz96.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\n/*\nReturn minimum element in the list.\n        \
    \    \n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e < min)\n        {\n            min = e;\n        }\n\
    \    }\n    return min;\n}\n/*\nReturn the sum of all elements in the list.\n\
    \            \n*/\nlong sum(long[] l) \n{\n    long sum = 0;\n    foreach(e; l)\n\
    \    {\n        sum += e;\n    }\n    return sum;\n}\n/*\nReturn the average of\
    \ all elements in the list.\n            \n*/\ndouble average(long[] l) \n{\n\
    \    return sum(l) / l.length;\n}\n/*\nReturn the median of all elements in the\
    \ list.\n            \n*/\ndouble median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    sort(temp);\n    if (temp.length % 2 == 0)\n    {\n        return (temp[temp.length\
    \ / 2] + temp[temp.length / 2 - 1]) / 2;\n    }\n    else\n    {\n        return\
    \ temp[temp.length / 2];\n    }\n}\n/*\nReturn the standard deviation of all elements\
    \ in the list.\n            \n*/\ndouble stddev(long[] l) \n{\n    double avg\
    \ = average(l);\n    double sum = 0;\n    foreach(e; l)\n    {\n        sum +=\
    \ (e - avg) * (e - avg);\n    }\n    return sqrt(sum / l.length);\n}\n/*\nReturn\
    \ the variance of all elements in the list.\n            \n*/\ndouble variance(long[]\
    \ l) \n{\n    double avg = average(l);\n    double sum = 0;\n    foreach(e; l)\n\
    \    {\n        sum += (e - avg) * (e - avg);\n    }\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp26702r0m.d(98): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp26702r0m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(long\
    \ i; l)\n    {\n        if(i > max)\n        {\n            max = i;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec8p1f_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwc89lob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotthnsoi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(i;\
    \ l)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\n/*\nReturn minimum element in the list.\n*/\nlong\
    \ min_element(long[] l) \n{\n    long min = l[0];\n    foreach(i; l)\n    {\n\
    \        if(i < min)\n        {\n            min = i;\n        }\n    }\n    return\
    \ min;\n}\n/*\nReturn the sum of all elements in the list.\n*/\nlong sum(long[]\
    \ l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n        sum += i;\n   \
    \ }\n    return sum;\n}\n/*\nReturn the average of all elements in the list.\n\
    */\nlong average(long[] l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n\
    \        sum += i;\n    }\n    return sum / l.length;\n}\n/*\nReturn the median\
    \ of all elements in the list.\n*/\nlong median(long[] l) \n{\n    long[] sorted\
    \ = l.dup;\n    sort(sorted);\n    return sorted[sorted.length / 2];\n}\n/*\n\
    Return the mode of all elements in the list.\n*/\nlong mode(long[] l) \n{\n  \
    \  long[] sorted = l.dup;\n    sort(sorted);\n    long max = 0;\n    long max_count\
    \ = 0;\n    long current = sorted[0];\n    long current_count = 0;\n    foreach(i;\
    \ sorted)\n    {\n        if(i == current)\n        {\n            current_count++;\n\
    \        }\n        else\n        {\n            if(current_count > max_count)\n\
    \            {\n                max = current;\n                max_count = current_count;\n\
    \            }\n            current = i;\n            current_count = 1;\n   \
    \     }\n    }\n    return max;\n}\n/*\nReturn the range of all elements in the\
    \ list.\n*/\nlong range(long[] l\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb8showut.d(100): Error: found \''unittest\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb8showut.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(elem;\
    \ l)\n    {\n        if(elem > max)\n        {\n            max = elem;\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jvt9_09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n    long max = l[0];\n    foreach(e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyys7jlky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977666

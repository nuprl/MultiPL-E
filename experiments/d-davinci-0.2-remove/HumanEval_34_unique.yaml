name: HumanEval_34_unique
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
  \ in a list\n        \n*/\nlong[] unique(long[] l) \n"
tests: "unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
  \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
completions: ["{\n    long[] result;\n    long[] temp;\n    long[] temp2;\n    long[]\
    \ temp3;\n    long[] temp4;\n    long[] temp5;\n    long[] temp6;\n    long[]\
    \ temp7;\n    long[] temp8;\n    long[] temp9;\n    long[] temp10;\n    long[]\
    \ temp11;\n    long[] temp12;\n    long[] temp13;\n    long[] temp14;\n    long[]\
    \ temp15;\n    long[] temp16;\n    long[] temp17;\n    long[] temp18;\n    long[]\
    \ temp19;\n    long[] temp20;\n    long[] temp21;\n    long[] temp22;\n    long[]\
    \ temp23;\n    long[] temp24;\n    long[] temp25;\n    long[] temp26;\n    long[]\
    \ temp27;\n    long[] temp28;\n    long[] temp29;\n    long[] temp30;\n    long[]\
    \ temp31;\n    long[] temp32;\n    long[] temp33;\n    long[] temp34;\n    long[]\
    \ temp35;\n    long[] temp36;\n    long[] temp37;\n    long[] temp38;\n    long[]\
    \ temp39;\n    long[] temp40;\n    long[] temp41;\n    long[] temp42;\n    long[]\
    \ temp43;\n    long[] temp44;\n    long[] temp45;\n    long[] temp46;\n    long[]\
    \ temp47;\n    long[] temp48;\n    long[] temp49;\n    long[] temp50;\n    long[]\
    \ temp51;\n    long[] temp52;\n    long[] temp53;\n    long[] temp54;\n    long[]\
    \ temp55;\n    long[] temp56;\n    long[] temp57;\n    long[] temp58;\n    long[]\
    \ temp59;\n    long[] temp60;\n    long[] temp61;\n    long[] temp62;\n    long[]\
    \ temp63;\n    long[] temp64;\n    long[] temp65;\n    long[] temp66;\n    long[]\
    \ temp67;\n    long[] temp68;\n    long[] temp69;\n    long[] temp70;\n    long[]\
    \ temp71;\n    long[] temp72;\n", "{\n    long[] result;\n    result.length =\
    \ l.length;\n    long i = 0;\n    foreach(long x; l)\n    {\n        if(i == 0\
    \ || x != result[i-1])\n        {\n            result[i] = x;\n            i++;\n\
    \        }\n    }\n    result.length = i;\n    return result;\n}", "{\n    long[]\
    \ res = new long[l.length];\n    int i = 0;\n    foreach(long e; l)\n    {\n \
    \       if(i==0 || res[i-1]!=e)\n            res[i++] = e;\n    }\n    return\
    \ res[0..i];\n}", "{\n    long[] res;\n    foreach(e; l)\n    {\n        if(!e\
    \ in res)\n            res ~= e;\n    }\n    return res;\n}", "{\n    auto s =\
    \ new SortedSet!(long)();\n    foreach(e; l)\n    {\n        s.insert(e);\n  \
    \  }\n    return s.array;\n}", "{\n    long[] result;\n    foreach(e; l) \n  \
    \  {\n        if (e in result) \n        {\n            continue;\n        }\n\
    \        result ~= e;\n    }\n    return result;\n}", "{\n    long[] ret = new\
    \ long[0];\n    foreach(e; l)\n    {\n        if(e !in ret)\n            ret ~=\
    \ e;\n    }\n    return ret;\n}", "{\n    long[] result = new long[l.length];\n\
    \    long[] temp = new long[l.length];\n    long[] temp2 = new long[l.length];\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aaa = 0;\n    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int\
    \ eee = 0;\n    int fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii\
    \ = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n\
    \    int nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int\
    \ rrr = 0;\n    int sss = 0;\n    int ttt = 0;", "{\n    long[] result;\n    foreach(e;\
    \ l)\n    {\n        if(e in result)\n            continue;\n        result ~=\
    \ e;\n    }\n    return result;\n}", "{\n    long[] result = new long[0];\n  \
    \  foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n    \
    \        result ~= i;\n        }\n        else if(result[$-1] != i)\n        {\n\
    \            result ~= i;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ ret;\n    long[] tmp;\n    long i, j;\n    ret = l[0..1];\n    foreach(i; 1..l.length)\n\
    \    {\n        tmp = ret[0..0];\n        foreach(j; 0..ret.length)\n        {\n\
    \            if(l[i] == ret[j])\n                break;\n            else\n  \
    \              tmp ~= ret[j];\n        }\n        if(j == ret.length)\n      \
    \      tmp ~= l[i];\n        ret = tmp;\n    }\n    return ret;\n}", "{\n    long[]\
    \ ret = new long[l.length];\n    long[] ret2 = new long[l.length];\n    int i\
    \ = 0;\n    foreach(long e; l)\n    {\n        if(e != 0)\n        {\n       \
    \     ret[i] = e;\n            i++;\n        }\n    }\n    ret = ret[0..i];\n\
    \    ret.sort();\n    i = 0;\n    foreach(long e; ret)\n    {\n        if(e !=\
    \ 0)\n        {\n            ret2[i] = e;\n            i++;\n        }\n    }\n\
    \    ret2 = ret2[0..i];\n    return ret2;\n}", "{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n     \
    \   ret ~= e;\n    }\n    ret.sort;\n    return ret;\n}", "{\n    long[] ret =\
    \ new long[0];\n    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n\
    \        ret ~= e;\n    }\n    ret.sort;\n    return ret;\n}", "{\n    auto s\
    \ = std.algorithm.sort(l);\n    return s.uniq;\n}", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long i;\n    long j;\n    long k;\n    long n;\n    long m;\n    long\
    \ p;\n    long q;\n    long[] r;\n    long[] s;\n    long[] t;\n    long[] u;\n\
    \    long[] v;\n    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n \
    \   long[] aa;\n    long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n\
    \    long[] ff;\n    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n\
    \    long[] kk;\n    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n\
    \    long[] pp;\n    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n\
    \    long[] uu;\n    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n\
    \    long[] zz;\n    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[]\
    \ ddd;\n    long[] eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n \
    \   long[] iii;\n    long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[]\
    \ mmm;\n    long[] nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n \
    \   long[] rrr;\n    long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[]\
    \ vvv;\n    long[] www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n \
    \   long[] aaaa;\n    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[]\
    \ eeee;\n    long[] ffff;\n    long[] gggg;\n   ", "{\n    long[] ret = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n     \
    \   ret ~= e;\n    }\n    return ret;\n}", "{\n    long[] ret;\n    long[] tmp;\n\
    \    long i;\n    long j;\n    long k;\n    long n;\n    long m;\n    long p;\n\
    \    long q;\n    long t;\n    long[] l2;\n    long[] l3;\n    long[] l4;\n  \
    \  long[] l5;\n    long[] l6;\n    long[] l7;\n    long[] l8;\n    long[] l9;\n\
    \    long[] l10;\n    long[] l11;\n    long[] l12;\n    long[] l13;\n    long[]\
    \ l14;\n    long[] l15;\n    long[] l16;\n    long[] l17;\n    long[] l18;\n \
    \   long[] l19;\n    long[] l20;\n    long[] l21;\n    long[] l22;\n    long[]\
    \ l23;\n    long[] l24;\n    long[] l25;\n    long[] l26;\n    long[] l27;\n \
    \   long[] l28;\n    long[] l29;\n    long[] l30;\n    long[] l31;\n    long[]\
    \ l32;\n    long[] l33;\n    long[] l34;\n    long[] l35;\n    long[] l36;\n \
    \   long[] l37;\n    long[] l38;\n    long[] l39;\n    long[] l40;\n    long[]\
    \ l41;\n    long[] l42;\n    long[] l43;\n    long[] l44;\n    long[] l45;\n \
    \   long[] l46;\n    long[] l47;\n    long[] l48;\n    long[] l49;\n    long[]\
    \ l50;\n    long[] l51;\n    long[] l52;\n    long[] l53;\n    long[] l54;\n \
    \   long[] l55;\n    long[] l56;\n    long[] l57;\n    long[] l58;\n    long[]\
    \ l59;\n    long[] l60;\n    long[] l61;\n    long[] l62;\n    long[] l63;\n \
    \   long[] l64;\n    long[] l65;\n    long[] l66;\n    long", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    long j = 1;\n    for (long i\
    \ = 1; i < l.length; i++)\n    {\n        if (l[i] != l[i-1])\n        {\n   \
    \         ret[j] = l[i];\n            j++;\n        }\n    }\n    return ret[0..j];\n\
    }", "{\n    long[] result = new long[0];\n    foreach(e; l)\n    {\n        if(e\
    \ in result)\n            continue;\n        result ~= e;\n    }\n    return result;\n\
    }", "{\n    long[] ret = new long[0];\n    foreach(i; l)\n    {\n        if(!ret.canFind(i))\n\
    \            ret ~= i;\n    }\n    return ret;\n}", "{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.length == 0)\n        {\n     \
    \       ret ~= i;\n        }\n        else\n        {\n            if(ret[$-1]\
    \ != i)\n            {\n                ret ~= i;\n            }\n        }\n\
    \    }\n    return ret;\n}", "{\n    long[] ret;\n    long[] tmp;\n    long[]\
    \ tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[] tmp6;\n\
    \    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n   \
    \ long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n   \
    \ long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n   \
    \ long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n   \
    \ long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n   \
    \ long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n   \
    \ long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n   \
    \ long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n   \
    \ long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n   \
    \ long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n   \
    \ long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n   \
    \ long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n   \
    \ long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n   \
    \ long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n   \
    \ long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n   \
    \ long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n   \
    \ long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if (ret.canFind(i) == -1)\n          \
    \  ret ~= i;\n    }\n    ret.sort();\n    return ret;\n}", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(result.length == 0)\n\
    \        {\n            result ~= i;\n        }\n        else\n        {\n   \
    \         if(result[$-1] != i)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] ret;\n\
    \    ret.length = 0;\n    foreach(e; l)\n    {\n        if(e !in ret)\n      \
    \  {\n            ret ~= e;\n        }\n    }\n    ret.sort;\n    return ret;\n\
    }", "{\n    long[] ret;\n    long[] tmp;\n    long i;\n    long j;\n    long k;\n\
    \    long len;\n    long len2;\n    long len3;\n    long len4;\n    long len5;\n\
    \    long len6;\n    long len7;\n    long len8;\n    long len9;\n    long len10;\n\
    \    long len11;\n    long len12;\n    long len13;\n    long len14;\n    long\
    \ len15;\n    long len16;\n    long len17;\n    long len18;\n    long len19;\n\
    \    long len20;\n    long len21;\n    long len22;\n    long len23;\n    long\
    \ len24;\n    long len25;\n    long len26;\n    long len27;\n    long len28;\n\
    \    long len29;\n    long len30;\n    long len31;\n    long len32;\n    long\
    \ len33;\n    long len34;\n    long len35;\n    long len36;\n    long len37;\n\
    \    long len38;\n    long len39;\n    long len40;\n    long len41;\n    long\
    \ len42;\n    long len43;\n    long len44;\n    long len45;\n    long len46;\n\
    \    long len47;\n    long len48;\n    long len49;\n    long len50;\n    long\
    \ len51;\n    long len52;\n    long len53;\n    long len54;\n    long len55;\n\
    \    long len56;\n    long len57;\n    long len58;\n    long len59;\n    long\
    \ len60;\n    long len61;\n    long len62;\n    long len63;\n    long len64;\n\
    \    long len65;\n    long len66;\n    long len67;\n    long len68;\n    long\
    \ len69;\n    long len70;\n    long len71;\n    long len72;\n    long len73;\n\
    \    long len74;\n    long len75;\n    long len76;\n    long len77;\n    long\
    \ len78;\n    long len79;\n    long len80;\n    long len", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long i;\n    long j;\n    long k;\n    long len;\n    long\
    \ len2;\n    long len3;\n    long len4;\n    long len5;\n    long len6;\n    long\
    \ len7;\n    long len8;\n    long len9;\n    long len10;\n    long len11;\n  \
    \  long len12;\n    long len13;\n    long len14;\n    long len15;\n    long len16;\n\
    \    long len17;\n    long len18;\n    long len19;\n    long len20;\n    long\
    \ len21;\n    long len22;\n    long len23;\n    long len24;\n    long len25;\n\
    \    long len26;\n    long len27;\n    long len28;\n    long len29;\n    long\
    \ len30;\n    long len31;\n    long len32;\n    long len33;\n    long len34;\n\
    \    long len35;\n    long len36;\n    long len37;\n    long len38;\n    long\
    \ len39;\n    long len40;\n    long len41;\n    long len42;\n    long len43;\n\
    \    long len44;\n    long len45;\n    long len46;\n    long len47;\n    long\
    \ len48;\n    long len49;\n    long len50;\n    long len51;\n    long len52;\n\
    \    long len53;\n    long len54;\n    long len55;\n    long len56;\n    long\
    \ len57;\n    long len58;\n    long len59;\n    long len60;\n    long len61;\n\
    \    long len62;\n    long len63;\n    long len64;\n    long len65;\n    long\
    \ len66;\n    long len67;\n    long len68;\n    long len69;\n    long len70;\n\
    \    long len71;\n    long len72;\n    long len73;\n    long len74;\n    long\
    \ len75;\n    long len76;\n    long len77;\n    long len78;\n    long len79;\n\
    \    long len80;\n    long len", "{\n    long[] result = new long[0];\n    foreach(long\
    \ i; l)\n    {\n        if (result.length == 0)\n        {\n            result\
    \ ~= i;\n        }\n        else\n        {\n            if (result[$-1] != i)\n\
    \            {\n                result ~= i;\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[0];\n    foreach(long\
    \ i; l)\n    {\n        if(result.length == 0)\n        {\n            result\
    \ ~= i;\n        }\n        else\n        {\n            if(result[$-1] != i)\n\
    \            {\n                result ~= i;\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    long[] tmp;\n    int i;\n\
    \    int j;\n    int k;\n    int n;\n    int m;\n    int c;\n    int[] count;\n\
    \    int[] index;\n    int[] offset;\n    int[] tmp2;\n    int[] tmp3;\n    int[]\
    \ tmp4;\n    int[] tmp5;\n    int[] tmp6;\n    int[] tmp7;\n    int[] tmp8;\n\
    \    int[] tmp9;\n    int[] tmp10;\n    int[] tmp11;\n    int[] tmp12;\n    int[]\
    \ tmp13;\n    int[] tmp14;\n    int[] tmp15;\n    int[] tmp16;\n    int[] tmp17;\n\
    \    int[] tmp18;\n    int[] tmp19;\n    int[] tmp20;\n    int[] tmp21;\n    int[]\
    \ tmp22;\n    int[] tmp23;\n    int[] tmp24;\n    int[] tmp25;\n    int[] tmp26;\n\
    \    int[] tmp27;\n    int[] tmp28;\n    int[] tmp29;\n    int[] tmp30;\n    int[]\
    \ tmp31;\n    int[] tmp32;\n    int[] tmp33;\n    int[] tmp34;\n    int[] tmp35;\n\
    \    int[] tmp36;\n    int[] tmp37;\n    int[] tmp38;\n    int[] tmp39;\n    int[]\
    \ tmp40;\n    int[] tmp41;\n    int[] tmp42;\n    int[] tmp43;\n    int[] tmp44;\n\
    \    int[] tmp45;\n    int[] tmp46;\n    int[] tmp47;\n    int[] tmp48;\n    int[]\
    \ tmp49;\n    int[] tmp50;\n    int[] tmp51;\n    int[] tmp52;\n    int[] tmp53;\n\
    \    int[] tmp54;\n    int[] tmp55;\n    int[] tmp56;\n    int[] tmp57;\n    int[]\
    \ tmp58;\n    int[] tmp59;\n    int[] tmp60;\n    int[] tmp61;\n    int[] tmp62;\n\
    \    int[] tmp63;\n    int[] tmp64;\n    int[] tmp65;\n   ", "{\n    long[] res\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(res.length == 0)\n\
    \        {\n            res ~= i;\n        }\n        else\n        {\n      \
    \      if(res[$-1] != i)\n            {\n                res ~= i;\n         \
    \   }\n        }\n    }\n    return res;\n}", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long i;\n    long j;\n    long k;\n    long n;\n    long m;\n    long\
    \ p;\n    long q;\n    long[] r;\n    long[] s;\n    long[] t;\n    long[] u;\n\
    \    long[] v;\n    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n \
    \   long[] aa;\n    long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n\
    \    long[] ff;\n    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n\
    \    long[] kk;\n    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n\
    \    long[] pp;\n    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n\
    \    long[] uu;\n    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n\
    \    long[] zz;\n    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[]\
    \ ddd;\n    long[] eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n \
    \   long[] iii;\n    long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[]\
    \ mmm;\n    long[] nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n \
    \   long[] rrr;\n    long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[]\
    \ vvv;\n    long[] www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n \
    \   long[] aaaa;\n    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[]\
    \ eeee;\n    long[] ffff;\n    long[] gggg;\n   ", "{\n    long[] ret = new long[l.length];\n\
    \    ret[0] = l[0];\n    int ret_len = 1;\n    for (int i = 1; i < l.length; i++)\n\
    \    {\n        if (l[i] != l[i-1])\n        {\n            ret[ret_len] = l[i];\n\
    \            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n}", "{\n\
    \    long[] result = new long[0];\n    foreach(e; l)\n    {\n        if(e !in\
    \ result)\n        {\n            result ~= e;\n        }\n    }\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] l2) \n{\n    long[] result = new long[0];\n    foreach(e; l)\n   \
    \ {\n        if(e !in result)\n        {\n            result ~= e;\n        }\n\
    \    }\n    foreach(e; l2)\n    {\n        if(e !in result)\n        {\n     \
    \       result ~= e;\n        }\n    }\n    return result;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long[] l2,\
    \ long[] l3) \n{\n    long[] result = new long[0];\n    foreach(e; l)\n    {\n\
    \        if(e !in result)\n        {\n            result ~= e;\n        }\n  \
    \  }\n    foreach(e; l2)\n    {\n        if(e !in result)\n        {\n       \
    \     result ~= e;\n        }\n    }\n    foreach(e; l3)\n    {\n        if(e\
    \ !in result)\n        {\n            result ~= e;\n        }\n    }\n    return\
    \ result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] l2, long[] l3, long[] l4) \n{\n    long[] result = new\
    \ long[0];\n    foreach(e; l)\n    {\n        if(e !in result)\n        {\n  \
    \          result ~= e;\n        }\n    }\n    foreach(e; l2)\n    {\n       \
    \ if(e !in result)\n        {\n            result ~= e;\n        }\n    }\n  \
    \  foreach(e; l3)\n    {\n        if(e !in result)\n        {\n            result\
    \ ~= e;\n        }\n   ", "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n\
    \    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[]\
    \ tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n\
    \    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n\
    \    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n\
    \    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n\
    \    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n\
    \    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n\
    \    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n\
    \    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n\
    \    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n\
    \    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n\
    \    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n\
    \    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n\
    \    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n\
    \    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n\
    \    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n\
    \    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n\
    \    long[] tmp72;\n", "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n\
    \    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[]\
    \ tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n\
    \    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n\
    \    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n\
    \    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n\
    \    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n\
    \    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n\
    \    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n\
    \    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n\
    \    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n\
    \    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n\
    \    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n\
    \    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n\
    \    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n\
    \    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n\
    \    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n\
    \    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n\
    \    long[] tmp72;\n", "{\n    long[] ret = new long[l.length];\n    long[] ret2\
    \ = new long[l.length];\n    long[] ret3 = new long[l.length];\n    long[] ret4\
    \ = new long[l.length];\n    long[] ret5 = new long[l.length];\n    long[] ret6\
    \ = new long[l.length];\n    long[] ret7 = new long[l.length];\n    long[] ret8\
    \ = new long[l.length];\n    long[] ret9 = new long[l.length];\n    long[] ret10\
    \ = new long[l.length];\n    long[] ret11 = new long[l.length];\n    long[] ret12\
    \ = new long[l.length];\n    long[] ret13 = new long[l.length];\n    long[] ret14\
    \ = new long[l.length];\n    long[] ret15 = new long[l.length];\n    long[] ret16\
    \ = new long[l.length];\n    long[] ret17 = new long[l.length];\n    long[] ret18\
    \ = new long[l.length];\n    long[] ret19 = new long[l.length];\n    long[] ret20\
    \ = new long[l.length];\n    long[] ret21 = new long[l.length];\n    long[] ret22\
    \ = new long[l.length];\n    long[] ret23 = new long[l.length];\n    long[] ret24\
    \ = new long[l.length];\n    long[] ret25 = new long[l.length];\n    long[] ret26\
    \ = new long[l.length];\n    long[] ret27 = new long[l.length];\n    long[] ret28\
    \ = new long[l.length];\n    long[] ret29 = new long[l.length];\n    long[] ret30\
    \ = new long[l.length];\n    long[] ret31 = new long[l.length];\n    long[] ret32\
    \ = new long[l.length];\n    long[] ret33 = new long[l.length];\n    long[] ret34\
    \ = new long[l.length];\n    long[] ret35 = new long[l.length];\n    long[] ret36\
    \ = new long[l.length];\n    long[] ret37 =", "{\n    long[] res = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(i in res)\n            continue;\n\
    \        res ~= i;\n    }\n    return res;\n}", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long i;\n    long j;\n    long k;\n    long len;\n    long len2;\n\
    \    long len3;\n    long len4;\n    long len5;\n    long len6;\n    long len7;\n\
    \    long len8;\n    long len9;\n    long len10;\n    long len11;\n    long len12;\n\
    \    long len13;\n    long len14;\n    long len15;\n    long len16;\n    long\
    \ len17;\n    long len18;\n    long len19;\n    long len20;\n    long len21;\n\
    \    long len22;\n    long len23;\n    long len24;\n    long len25;\n    long\
    \ len26;\n    long len27;\n    long len28;\n    long len29;\n    long len30;\n\
    \    long len31;\n    long len32;\n    long len33;\n    long len34;\n    long\
    \ len35;\n    long len36;\n    long len37;\n    long len38;\n    long len39;\n\
    \    long len40;\n    long len41;\n    long len42;\n    long len43;\n    long\
    \ len44;\n    long len45;\n    long len46;\n    long len47;\n    long len48;\n\
    \    long len49;\n    long len50;\n    long len51;\n    long len52;\n    long\
    \ len53;\n    long len54;\n    long len55;\n    long len56;\n    long len57;\n\
    \    long len58;\n    long len59;\n    long len60;\n    long len61;\n    long\
    \ len62;\n    long len63;\n    long len64;\n    long len65;\n    long len66;\n\
    \    long len67;\n    long len68;\n    long len69;\n    long len70;\n    long\
    \ len71;\n    long len72;\n    long len73;\n    long len74;\n    long len75;\n\
    \    long len76;\n    long len77;\n    long len78;\n    long len79;\n    long\
    \ len80;\n    long len", "{\n    long[] res = new long[l.length];\n    long[]\
    \ tmp = l.dup;\n    tmp.sort;\n    long n = 0;\n    foreach(long i; tmp)\n   \
    \ {\n        if(i != n)\n        {\n            res ~= i;\n            n = i;\n\
    \        }\n    }\n    return res;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    long n = 0;\n    foreach(long i;\
    \ tmp)\n    {\n        if(i != n)\n        {\n            res ~= i;\n        \
    \    n = i;\n        }\n    }\n    return res;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    long n = 0;\n    foreach(long i;\
    \ tmp)\n    {\n        if(i != n)\n        {\n            res ~= i;\n        \
    \    n = i;\n        }\n    }\n    return res;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    long n = 0;\n    foreach(long i;\
    \ tmp)\n    {\n        if(i != n)\n        {\n            res ~= i;\n        \
    \    n = i;\n        }\n    }\n    return res;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    long[] tmp = l.dup;\n    tmp.sort;\n    long n = 0;\n    foreach(long i;\
    \ tmp)\n    {\n        if(i != n)", "{\n    long[] result;\n    foreach(e; l)\
    \ \n    {\n        if (e in result) continue;\n        result ~= e;\n    }\n \
    \   return result;\n}", "{\n    long[] ret;\n    ret.length = l.length;\n    long[]\
    \ tmp;\n    tmp.length = l.length;\n    long[] tmp2;\n    tmp2.length = l.length;\n\
    \    long[] tmp3;\n    tmp3.length = l.length;\n    long[] tmp4;\n    tmp4.length\
    \ = l.length;\n    long[] tmp5;\n    tmp5.length = l.length;\n    long[] tmp6;\n\
    \    tmp6.length = l.length;\n    long[] tmp7;\n    tmp7.length = l.length;\n\
    \    long[] tmp8;\n    tmp8.length = l.length;\n    long[] tmp9;\n    tmp9.length\
    \ = l.length;\n    long[] tmp10;\n    tmp10.length = l.length;\n    long[] tmp11;\n\
    \    tmp11.length = l.length;\n    long[] tmp12;\n    tmp12.length = l.length;\n\
    \    long[] tmp13;\n    tmp13.length = l.length;\n    long[] tmp14;\n    tmp14.length\
    \ = l.length;\n    long[] tmp15;\n    tmp15.length = l.length;\n    long[] tmp16;\n\
    \    tmp16.length = l.length;\n    long[] tmp17;\n    tmp17.length = l.length;\n\
    \    long[] tmp18;\n    tmp18.length = l.length;\n    long[] tmp19;\n    tmp19.length\
    \ = l.length;\n    long[] tmp20;\n    tmp20.length = l.length;\n    long[] tmp21;\n\
    \    tmp21.length = l.length;\n    long[] tmp22;\n    tmp22.length = l.length;\n\
    \    long[] tmp23;\n    tmp23.length = l.length;\n    long[] tmp24;\n    tmp24.length\
    \ = l.length;\n    long[] tmp25;\n    tmp25.length = l.length;\n    long[] tmp26;\n\
    \    tmp26.length = l.length;\n    long[] tmp27;\n    tmp27.length = l.length;\n\
    \    long[] tmp28;\n    tmp", "{\n    long[] ret = new long[0];\n    foreach(e;\
    \ l)\n    {\n        if(e !in ret)\n            ret ~= e;\n    }\n    return ret;\n\
    }", "{\n    long[] result = new long[0];\n    foreach(long i; l)\n    {\n    \
    \    if(result.length == 0)\n        {\n            result ~= i;\n        }\n\
    \        else\n        {\n            if(result[$-1] != i)\n            {\n  \
    \              result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n       \
    \ if(ret.length == 0)\n        {\n            ret ~= i;\n        }\n        else\n\
    \        {\n            if(ret[$-1] != i)\n            {\n                ret\
    \ ~= i;\n            }\n        }\n    }\n    return ret;\n}", "{\n    long[]\
    \ u;\n    foreach(e; l)\n    {\n        if(e in u)\n            continue;\n  \
    \      u ~= e;\n    }\n    return u;\n}", "{\n    long[] res = new long[];\n \
    \   foreach(e; l)\n    {\n        if(e in res)\n            continue;\n      \
    \  res ~= e;\n    }\n    return res;\n}", "{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result = new long[0];\n\
    \    long[] temp = new long[0];\n    foreach(long i; l)\n    {\n        if(temp.length\
    \ == 0)\n        {\n            temp ~= i;\n        }\n        else\n        {\n\
    \            if(temp.find(i) == -1)\n            {\n                temp ~= i;\n\
    \            }\n        }\n    }\n    temp.sort();\n    foreach(long i; temp)\n\
    \    {\n        result ~= i;\n    }\n    return result;\n}", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(result.length == 0)\n\
    \        {\n            result ~= i;\n        }\n        else\n        {\n   \
    \         if(result[$-1] != i)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] ret =\
    \ new long[0];\n    foreach(long i; l)\n    {\n        if(ret.length == 0)\n \
    \       {\n            ret ~= i;\n        }\n        else if(ret[$-1] != i)\n\
    \        {\n            ret ~= i;\n        }\n    }\n    return ret;\n}", "{\n\
    \    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n        if(ret.length\
    \ == 0)\n        {\n            ret ~= i;\n        }\n        else\n        {\n\
    \            if(ret[$-1] != i)\n            {\n                ret ~= i;\n   \
    \         }\n        }\n    }\n    return ret;\n}", "{\n\tlong[] result = new\
    \ long[0];\n\tforeach(long i; l)\n\t{\n\t\tif(result.length == 0)\n\t\t{\n\t\t\
    \tresult ~= i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool found = false;\n\t\t\tforeach(long\
    \ j; result)\n\t\t\t{\n\t\t\t\tif(i == j)\n\t\t\t\t{\n\t\t\t\t\tfound = true;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!found)\n\t\t\t{\n\t\t\t\tresult\
    \ ~= i;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}", "{\n    long[] ret = new long[l.length];\n\
    \    ret[0] = l[0];\n    int j = 1;\n    for (int i = 1; i < l.length; i++) \n\
    \    {\n        if (l[i] != l[i - 1]) \n        {\n            ret[j] = l[i];\n\
    \            j++;\n        }\n    }\n    return ret[0..j];\n}", "{\n    long[]\
    \ ret = new long[];\n    foreach(e; l)\n    {\n        if(e in ret)\n        \
    \    continue;\n        ret ~= e;\n    }\n    return ret;\n}", "{\n    long[]\
    \ res = new long[0];\n    foreach(e; l)\n    {\n        if(!e in res)\n      \
    \      res ~= e;\n    }\n    return res;\n}", "{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.find(i) == ret.length)\n      \
    \      ret ~= i;\n    }\n    return ret;\n}", "{\n    long[] r = new long[l.length];\n\
    \    long[] u = new long[l.length];\n    long[] c = new long[l.length];\n    long[]\
    \ s = new long[l.length];\n    long[] t = new long[l.length];\n    long[] v =\
    \ new long[l.length];\n    long[] w = new long[l.length];\n    long[] x = new\
    \ long[l.length];\n    long[] y = new long[l.length];\n    long[] z = new long[l.length];\n\
    \    long[] a = new long[l.length];\n    long[] b = new long[l.length];\n    long[]\
    \ d = new long[l.length];\n    long[] e = new long[l.length];\n    long[] f =\
    \ new long[l.length];\n    long[] g = new long[l.length];\n    long[] h = new\
    \ long[l.length];\n    long[] i = new long[l.length];\n    long[] j = new long[l.length];\n\
    \    long[] k = new long[l.length];\n    long[] m = new long[l.length];\n    long[]\
    \ n = new long[l.length];\n    long[] o = new long[l.length];\n    long[] p =\
    \ new long[l.length];\n    long[] q = new long[l.length];\n    long[] A = new\
    \ long[l.length];\n    long[] B = new long[l.length];\n    long[] C = new long[l.length];\n\
    \    long[] D = new long[l.length];\n    long[] E = new long[l.length];\n    long[]\
    \ F = new long[l.length];\n    long[] G = new long[l.length];\n    long[] H =\
    \ new long[l.length];\n    long[] I = new long[l.length];\n    long[] J = new\
    \ long[l.length];\n    long[] K = new long[l.length];\n    long[] L = new long[l.length];\n\
    \    long[] M = new long[l.length];\n    long[] N = new long[l.length];\n    long",
  "{\n    long[] res = new long[];\n    foreach(i; l) \n    {\n        if(res.length\
    \ == 0 || res[$-1] != i) \n        {\n            res ~= i;\n        }\n    }\n\
    \    return res;\n}", "{\n    long[] ret;\n    ret.length = 0;\n    foreach(i;\
    \ l)\n    {\n        if(ret.length == 0 || ret[$-1] != i)\n            ret ~=\
    \ i;\n    }\n    return ret;\n}", "{\n    long[] result;\n    foreach(e; l)\n\
    \    {\n        if(!e in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[0];\n    foreach(lval; l) \n \
    \   {\n        if (result.find(lval) == -1) \n        {\n            result ~=\
    \ lval;\n        }\n    }\n    return result;\n}", "{\n    long[] result = new\
    \ long[0];\n    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n  \
    \          result ~= i;\n    }\n    return result;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long[] l2) \n{\n \
    \   long[] result = new long[0];\n    foreach(long i; l)\n    {\n        if(!result.canFind(i))\n\
    \            result ~= i;\n    }\n    foreach(long i; l2)\n    {\n        if(!result.canFind(i))\n\
    \            result ~= i;\n    }\n    return result;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long[] l2, long[]\
    \ l3) \n{\n    long[] result = new long[0];\n    foreach(long i; l)\n    {\n \
    \       if(!result.canFind(i))\n            result ~= i;\n    }\n    foreach(long\
    \ i; l2)\n    {\n        if(!result.canFind(i))\n            result ~= i;\n  \
    \  }\n    foreach(long i; l3)\n    {\n        if(!result.canFind(i))\n       \
    \     result ~= i;\n    }\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long[] l2, long[] l3, long[]\
    \ l4) \n{\n    long[] result = new long[0];\n    foreach(long i; l)\n    {\n \
    \       if(!result.canFind(i))\n            result ~= i;\n    }\n    foreach(long\
    \ i; l2)\n    {\n        if(!result.canFind(i))\n            result ~= i;\n  \
    \  }\n    foreach(long i; l3)\n    {\n        if(!result.canFind(i))\n       \
    \     result ~= i;\n    }\n    foreach(long i; l4)\n    {\n        if", "{\n \
    \   long[] ret = new long[0];\n    foreach(long i; l)\n    {\n        if(!ret.canFind(i))\n\
    \            ret ~= i;\n    }\n    ret.sort();\n    return ret;\n}", "{\n    long[]\
    \ ret;\n    long[] tmp;\n    long i;\n    long j;\n    long k;\n    long n;\n\
    \    long m;\n    long[] p;\n    long[] q;\n    long[] r;\n    long[] s;\n   \
    \ long[] t;\n    long[] u;\n    long[] v;\n    long[] w;\n    long[] x;\n    long[]\
    \ y;\n    long[] z;\n    long[] aa;\n    long[] bb;\n    long[] cc;\n    long[]\
    \ dd;\n    long[] ee;\n    long[] ff;\n    long[] gg;\n    long[] hh;\n    long[]\
    \ ii;\n    long[] jj;\n    long[] kk;\n    long[] ll;\n    long[] mm;\n    long[]\
    \ nn;\n    long[] oo;\n    long[] pp;\n    long[] qq;\n    long[] rr;\n    long[]\
    \ ss;\n    long[] tt;\n    long[] uu;\n    long[] vv;\n    long[] ww;\n    long[]\
    \ xx;\n    long[] yy;\n    long[] zz;\n    long[] aaa;\n    long[] bbb;\n    long[]\
    \ ccc;\n    long[] ddd;\n    long[] eee;\n    long[] fff;\n    long[] ggg;\n \
    \   long[] hhh;\n    long[] iii;\n    long[] jjj;\n    long[] kkk;\n    long[]\
    \ lll;\n    long[] mmm;\n    long[] nnn;\n    long[] ooo;\n    long[] ppp;\n \
    \   long[] qqq;\n    long[] rrr;\n    long[] sss;\n    long[] ttt;\n    long[]\
    \ uuu;\n    long[] vvv;\n    long[] www;\n    long[] xxx;\n    long[] yyy;\n \
    \   long[] zzz;\n    long[] aaaa;\n    long[] bbbb;\n    long[] cccc;\n    long[]\
    \ dddd;\n    long[] eeee;\n    long[] ffff;\n    long[] gggg;", "{\n    long[]\
    \ ret;\n    ret.length = l.length;\n    long[] tmp;\n    tmp.length = l.length;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long n = l.length;\n \
    \   for (i = 0; i < n; i++) \n    {\n        tmp[i] = l[i];\n    }\n    sort(tmp);\n\
    \    ret[0] = tmp[0];\n    for (i = 1; i < n; i++) \n    {\n        if (tmp[i]\
    \ != tmp[i - 1]) \n        {\n            ret[j] = tmp[i];\n            j++;\n\
    \        }\n    }\n    ret.length = j;\n    return ret;\n}", "{\n    long[] ret\
    \ = new long[l.length];\n    ret[0] = l[0];\n    long count = 1;\n    foreach(long\
    \ i; l)\n    {\n        if(i != ret[$-1])\n        {\n            ret[count] =\
    \ i;\n            count++;\n        }\n    }\n    return ret[0..count];\n}", "{\n\
    \    long[] ret;\n    long[] tmp;\n    long i;\n    long j;\n    long k;\n   \
    \ long len;\n    long len2;\n    long len3;\n    len = l.length;\n    len2 = len;\n\
    \    len3 = len;\n    ret = new long[len];\n    tmp = new long[len];\n    i =\
    \ 0;\n    while (i < len) {\n        j = 0;\n        while (j < len2) {\n    \
    \        if (l[i] == l[j]) {\n                break;\n            }\n        \
    \    j = j + 1;\n        }\n        if (j == len2) {\n            tmp[len3] =\
    \ l[i];\n            len3 = len3 + 1;\n        }\n        i = i + 1;\n    }\n\
    \    i = 0;\n    while (i < len3) {\n        ret[i] = tmp[i];\n        i = i +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, long len) \n{\n    long[] ret;\n    long[]\
    \ tmp;\n    long i;\n    long j;\n    long k;\n    long len2;\n    long len3;\n\
    \    len2 = len;\n    len3 = len;\n    ret = new long[len];\n    tmp = new long[len];\n\
    \    i = 0;\n    while (i < len) {\n        j = 0;\n        while (j < len2) {\n\
    \            if (l[i] == l[j]) {\n                break;\n            }\n    \
    \        j = j + 1;\n        }\n        if (j == len2) {\n            tmp[len3]\
    \ = l[i];\n            len3 = len3 + 1;\n        }\n        i = i + 1;\n    }\n\
    \    i = 0;\n    while (i < len3) {\n        ret[i] = tmp[i];\n        i = i +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique", "{\n    long[] ret;\n    long[] tmp;\n    long[]\
    \ tmp2;\n    int i;\n    int j;\n    int k;\n    int n;\n    int m;\n    int p;\n\
    \    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int\
    \ w;\n    int x;\n    int y;\n    int z;\n    int aa;\n    int bb;\n    int cc;\n\
    \    int dd;\n    int ee;\n    int ff;\n    int gg;\n    int hh;\n    int ii;\n\
    \    int jj;\n    int kk;\n    int ll;\n    int mm;\n    int nn;\n    int oo;\n\
    \    int pp;\n    int qq;\n    int rr;\n    int ss;\n    int tt;\n    int uu;\n\
    \    int vv;\n    int ww;\n    int xx;\n    int yy;\n    int zz;\n    int aaa;\n\
    \    int bbb;\n    int ccc;\n    int ddd;\n    int eee;\n    int fff;\n    int\
    \ ggg;\n    int hhh;\n    int iii;\n    int jjj;\n    int kkk;\n    int lll;\n\
    \    int mmm;\n    int nnn;\n    int ooo;\n    int ppp;\n    int qqq;\n    int\
    \ rrr;\n    int sss;\n    int ttt;\n    int uuu;\n    int vvv;\n    int www;\n\
    \    int xxx;\n    int yyy;\n    int zzz;\n    int aaaa;\n    int bbbb;\n    int\
    \ cccc;\n    int dddd;\n    int eeee;\n    int ffff;\n    int gggg;\n    int hhhh;\n\
    \    int iiii;\n    int jjjj;\n    int kkkk;\n    int llll;\n    int mmmm;\n \
    \   int nnnn;\n    int oooo;\n    int pppp;\n    int qqq", "{\n    long[] ret\
    \ = new long[0];\n    long[] tmp = new long[0];\n    foreach(long e; l)\n    {\n\
    \        if(!e in ret)\n        {\n            ret ~= e;\n        }\n    }\n \
    \   return ret;\n}", "{\n    long[] res = new long[l.length];\n    int j = 0;\n\
    \    foreach(i; l)\n    {\n        if(j == 0 || res[j-1] != i)\n        {\n  \
    \          res[j] = i;\n            j++;\n        }\n    }\n    return res[0..j];\n\
    }", "{\n    long[] res;\n    foreach(e; l)\n    {\n        if(!e in res)\n   \
    \         res ~= e;\n    }\n    return res;\n}", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n\
    \    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[]\
    \ tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[]\
    \ tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[]\
    \ tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[]\
    \ tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[]\
    \ tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[]\
    \ tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[]\
    \ tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[]\
    \ tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[]\
    \ tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[]\
    \ tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[]\
    \ tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[]\
    \ tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[]\
    \ tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[]\
    \ tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[]\
    \ tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[]\
    \ tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result = new\
    \ long[];\n    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n\
    \        result ~= e;\n    }\n    return result;\n}", "{\n    long[] ret = new\
    \ long[0];\n    foreach(i; l)\n    {\n        if(!ret.canFind(i))\n          \
    \  ret ~= i;\n    }\n    return ret;\n}", "{\n    long[] ret;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else if(result[$-1] != i)\n      \
    \  {\n            result ~= i;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] ret = new long[l.length];\n    long[] tmp = new long[l.length];\n\
    \    long[] tmp2 = new long[l.length];\n    long[] tmp3 = new long[l.length];\n\
    \    long[] tmp4 = new long[l.length];\n    long[] tmp5 = new long[l.length];\n\
    \    long[] tmp6 = new long[l.length];\n    long[] tmp7 = new long[l.length];\n\
    \    long[] tmp8 = new long[l.length];\n    long[] tmp9 = new long[l.length];\n\
    \    long[] tmp10 = new long[l.length];\n    long[] tmp11 = new long[l.length];\n\
    \    long[] tmp12 = new long[l.length];\n    long[] tmp13 = new long[l.length];\n\
    \    long[] tmp14 = new long[l.length];\n    long[] tmp15 = new long[l.length];\n\
    \    long[] tmp16 = new long[l.length];\n    long[] tmp17 = new long[l.length];\n\
    \    long[] tmp18 = new long[l.length];\n    long[] tmp19 = new long[l.length];\n\
    \    long[] tmp20 = new long[l.length];\n    long[] tmp21 = new long[l.length];\n\
    \    long[] tmp22 = new long[l.length];\n    long[] tmp23 = new long[l.length];\n\
    \    long[] tmp24 = new long[l.length];\n    long[] tmp25 = new long[l.length];\n\
    \    long[] tmp26 = new long[l.length];\n    long[] tmp27 = new long[l.length];\n\
    \    long[] tmp28 = new long[l.length];\n    long[] tmp29 = new long[l.length];\n\
    \    long[] tmp30 = new long[l.length];\n    long[] tmp31 = new long[l.length];\n\
    \    long[] tmp32 = new long[l.length];\n    long[] tmp33 = new long[l.length];\n\
    \    long[] tmp34 = new long[l.length];\n    long[] tmp35 = new long[l.length];\n\
    \    long[] tmp36 = new", "{\n    long[] result = new long[0];\n    foreach(i;\
    \ l)\n    {\n        if(i in result)\n            continue;\n        else\n  \
    \          result ~= i;\n    }\n    return result;\n}", "{\n    long[] ret = new\
    \ long[0];\n    foreach(long i; l)\n    {\n        if(ret.length == 0)\n     \
    \   {\n            ret ~= i;\n        }\n        else\n        {\n           \
    \ if(ret[$-1] != i)\n            {\n                ret ~= i;\n            }\n\
    \        }\n    }\n    return ret;\n}", "{\n    long[] ret = new long[l.length];\n\
    \    long[] ret2 = new long[l.length];\n    long[] ret3 = new long[l.length];\n\
    \    long[] ret4 = new long[l.length];\n    long[] ret5 = new long[l.length];\n\
    \    long[] ret6 = new long[l.length];\n    long[] ret7 = new long[l.length];\n\
    \    long[] ret8 = new long[l.length];\n    long[] ret9 = new long[l.length];\n\
    \    long[] ret10 = new long[l.length];\n    long[] ret11 = new long[l.length];\n\
    \    long[] ret12 = new long[l.length];\n    long[] ret13 = new long[l.length];\n\
    \    long[] ret14 = new long[l.length];\n    long[] ret15 = new long[l.length];\n\
    \    long[] ret16 = new long[l.length];\n    long[] ret17 = new long[l.length];\n\
    \    long[] ret18 = new long[l.length];\n    long[] ret19 = new long[l.length];\n\
    \    long[] ret20 = new long[l.length];\n    long[] ret21 = new long[l.length];\n\
    \    long[] ret22 = new long[l.length];\n    long[] ret23 = new long[l.length];\n\
    \    long[] ret24 = new long[l.length];\n    long[] ret25 = new long[l.length];\n\
    \    long[] ret26 = new long[l.length];\n    long[] ret27 = new long[l.length];\n\
    \    long[] ret28 = new long[l.length];\n    long[] ret29 = new long[l.length];\n\
    \    long[] ret30 = new long[l.length];\n    long[] ret31 = new long[l.length];\n\
    \    long[] ret32 = new long[l.length];\n    long[] ret33 = new long[l.length];\n\
    \    long[] ret34 = new long[l.length];\n    long[] ret35 = new long[l.length];\n\
    \    long[] ret36 = new long[l.length];\n    long[] ret37 =", "{\n    long[] ret;\n\
    \    ret.length = l.length;\n    long[] tmp;\n    tmp.length = l.length;\n   \
    \ long[] tmp2;\n    tmp2.length = l.length;\n    long[] tmp3;\n    tmp3.length\
    \ = l.length;\n    long[] tmp4;\n    tmp4.length = l.length;\n    long[] tmp5;\n\
    \    tmp5.length = l.length;\n    long[] tmp6;\n    tmp6.length = l.length;\n\
    \    long[] tmp7;\n    tmp7.length = l.length;\n    long[] tmp8;\n    tmp8.length\
    \ = l.length;\n    long[] tmp9;\n    tmp9.length = l.length;\n    long[] tmp10;\n\
    \    tmp10.length = l.length;\n    long[] tmp11;\n    tmp11.length = l.length;\n\
    \    long[] tmp12;\n    tmp12.length = l.length;\n    long[] tmp13;\n    tmp13.length\
    \ = l.length;\n    long[] tmp14;\n    tmp14.length = l.length;\n    long[] tmp15;\n\
    \    tmp15.length = l.length;\n    long[] tmp16;\n    tmp16.length = l.length;\n\
    \    long[] tmp17;\n    tmp17.length = l.length;\n    long[] tmp18;\n    tmp18.length\
    \ = l.length;\n    long[] tmp19;\n    tmp19.length = l.length;\n    long[] tmp20;\n\
    \    tmp20.length = l.length;\n    long[] tmp21;\n    tmp21.length = l.length;\n\
    \    long[] tmp22;\n    tmp22.length = l.length;\n    long[] tmp23;\n    tmp23.length\
    \ = l.length;\n    long[] tmp24;\n    tmp24.length = l.length;\n    long[] tmp25;\n\
    \    tmp25.length = l.length;\n    long[] tmp26;\n    tmp26.length = l.length;\n\
    \    long[] tmp27;\n    tmp27.length = l.length;\n    long[] tmp28;\n    tmp",
  "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[]\
    \ tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n\
    \    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n \
    \   long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n \
    \   long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n \
    \   long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n \
    \   long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n \
    \   long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n \
    \   long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n \
    \   long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n \
    \   long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n \
    \   long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n \
    \   long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n \
    \   long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n \
    \   long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n \
    \   long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n \
    \   long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n \
    \   long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n",
  "{\n    long[] r;\n    long[] u;\n    int i;\n    int j;\n    int k;\n    int n;\n\
    \    int m;\n    int p;\n    int q;\n    int[] t;\n    int[] v;\n    int[] w;\n\
    \    int[] x;\n    int[] y;\n    int[] z;\n    int[] aa;\n    int[] bb;\n    int[]\
    \ cc;\n    int[] dd;\n    int[] ee;\n    int[] ff;\n    int[] gg;\n    int[] hh;\n\
    \    int[] ii;\n    int[] jj;\n    int[] kk;\n    int[] ll;\n    int[] mm;\n \
    \   int[] nn;\n    int[] oo;\n    int[] pp;\n    int[] qq;\n    int[] rr;\n  \
    \  int[] ss;\n    int[] tt;\n    int[] uu;\n    int[] vv;\n    int[] ww;\n   \
    \ int[] xx;\n    int[] yy;\n    int[] zz;\n    int[] aaa;\n    int[] bbb;\n  \
    \  int[] ccc;\n    int[] ddd;\n    int[] eee;\n    int[] fff;\n    int[] ggg;\n\
    \    int[] hhh;\n    int[] iii;\n    int[] jjj;\n    int[] kkk;\n    int[] lll;\n\
    \    int[] mmm;\n    int[] nnn;\n    int[] ooo;\n    int[] ppp;\n    int[] qqq;\n\
    \    int[] rrr;\n    int[] sss;\n    int[] ttt;\n    int[] uuu;\n    int[] vvv;\n\
    \    int[] www;\n    int[] xxx;\n    int[] yyy;\n    int[] zzz;\n    int[] aaaa;\n\
    \    int[] bbbb;\n    int[] cccc;\n    int[] dddd;\n    int[] eeee;\n    int[]\
    \ ffff;\n    int[] gggg;\n    int[] hhhh;\n    int[] iiii;\n    int[] jjj", "{\n\
    \    long[] ret;\n    long[] tmp;\n    long i;\n    long j;\n    long k;\n   \
    \ long n;\n    long m;\n    long p;\n    long q;\n    long[] r;\n    long[] s;\n\
    \    long[] t;\n    long[] u;\n    long[] v;\n    long[] w;\n    long[] x;\n \
    \   long[] y;\n    long[] z;\n    ret = new long[0L];\n    tmp = new long[0L];\n\
    \    i = 0L;\n    j = 0L;\n    k = 0L;\n    n = 0L;\n    m = 0L;\n    p = 0L;\n\
    \    q = 0L;\n    r = new long[0L];\n    s = new long[0L];\n    t = new long[0L];\n\
    \    u = new long[0L];\n    v = new long[0L];\n    w = new long[0L];\n    x =\
    \ new long[0L];\n    y = new long[0L];\n    z = new long[0L];\n    tmp = l;\n\
    \    tmp = sort(tmp);\n    n = tmp.length;\n    if (n == 0L)\n    {\n        ret\
    \ = new long[0L];\n        return ret;\n    }", "{\n    long[] r;\n    long[]\
    \ p;\n    long[] s;\n    long[] t;\n    long[] u;\n    long[] v;\n    long[] w;\n\
    \    long[] x;\n    long[] y;\n    long[] z;\n    long[] a;\n    long[] b;\n \
    \   long[] c;\n    long[] d;\n    long[] e;\n    long[] f;\n    long[] g;\n  \
    \  long[] h;\n    long[] i;\n    long[] j;\n    long[] k;\n    long[] m;\n   \
    \ long[] n;\n    long[] o;\n    long[] q;\n    long[] r1;\n    long[] s1;\n  \
    \  long[] t1;\n    long[] u1;\n    long[] v1;\n    long[] w1;\n    long[] x1;\n\
    \    long[] y1;\n    long[] z1;\n    long[] a1;\n    long[] b1;\n    long[] c1;\n\
    \    long[] d1;\n    long[] e1;\n    long[] f1;\n    long[] g1;\n    long[] h1;\n\
    \    long[] i1;\n    long[] j1;\n    long[] k1;\n    long[] m1;\n    long[] n1;\n\
    \    long[] o1;\n    long[] q1;\n    long[] r2;\n    long[] s2;\n    long[] t2;\n\
    \    long[] u2;\n    long[] v2;\n    long[] w2;\n    long[] x2;\n    long[] y2;\n\
    \    long[] z2;\n    long[] a2;\n    long[] b2;\n    long[] c2;\n    long[] d2;\n\
    \    long[] e2;\n    long[] f2;\n    long[] g2;\n    long[] h2;\n    long[] i2;\n\
    \    long[] j2;\n    long[] k2;\n    long[] m2;\n    long[] n2;\n    long[] o2;\n\
    \    long[] q2;\n    long[] r3;\n    long[] s3;\n    long[] t3;\n    long", "{\n\
    \    long[] ret;\n    ret.length = l.length;\n    long[] tmp;\n    tmp.length\
    \ = l.length;\n    long[] tmp2;\n    tmp2.length = l.length;\n    long[] tmp3;\n\
    \    tmp3.length = l.length;\n    long[] tmp4;\n    tmp4.length = l.length;\n\
    \    long[] tmp5;\n    tmp5.length = l.length;\n    long[] tmp6;\n    tmp6.length\
    \ = l.length;\n    long[] tmp7;\n    tmp7.length = l.length;\n    long[] tmp8;\n\
    \    tmp8.length = l.length;\n    long[] tmp9;\n    tmp9.length = l.length;\n\
    \    long[] tmp10;\n    tmp10.length = l.length;\n    long[] tmp11;\n    tmp11.length\
    \ = l.length;\n    long[] tmp12;\n    tmp12.length = l.length;\n    long[] tmp13;\n\
    \    tmp13.length = l.length;\n    long[] tmp14;\n    tmp14.length = l.length;\n\
    \    long[] tmp15;\n    tmp15.length = l.length;\n    long[] tmp16;\n    tmp16.length\
    \ = l.length;\n    long[] tmp17;\n    tmp17.length = l.length;\n    long[] tmp18;\n\
    \    tmp18.length = l.length;\n    long[] tmp19;\n    tmp19.length = l.length;\n\
    \    long[] tmp20;\n    tmp20.length = l.length;\n    long[] tmp21;\n    tmp21.length\
    \ = l.length;\n    long[] tmp22;\n    tmp22.length = l.length;\n    long[] tmp23;\n\
    \    tmp23.length = l.length;\n    long[] tmp24;\n    tmp24.length = l.length;\n\
    \    long[] tmp25;\n    tmp25.length = l.length;\n    long[] tmp26;\n    tmp26.length\
    \ = l.length;\n    long[] tmp27;\n    tmp27.length = l.length;\n    long[] tmp28;\n\
    \    tmp", "{\n    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n\
    \        if(ret.length == 0)\n        {\n            ret ~= i;\n        }\n  \
    \      else\n        {\n            if(ret[$-1] != i)\n            {\n       \
    \         ret ~= i;\n            }\n        }\n    }\n    return ret;\n}", "{\n\
    \    long[] res = new long[l.length];\n    int j = 0;\n    foreach(i; l)\n   \
    \ {\n        if (j == 0 || res[j-1] != i)\n        {\n            res[j] = i;\n\
    \            j++;\n        }\n    }\n    return res[0..j];\n}", "{\n    long[]\
    \ ret = new long[0];\n    foreach(long i; l)\n    {\n        if(ret.length ==\
    \ 0)\n        {\n            ret ~= i;\n        }\n        else\n        {\n \
    \           if(ret[$-1] != i)\n            {\n                ret ~= i;\n    \
    \        }\n        }\n    }\n    return ret;\n}", "{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n\
    \    }\n    return ret;\n}", "{\n    long[] res;\n    foreach(e; l)\n    {\n \
    \       if(!e in res)\n            res ~= e;\n    }\n    return res;\n}", "{\n\
    \    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n        if(ret.find(i)\
    \ == -1)\n            ret ~= i;\n    }\n    return ret;\n}", "{\n    long[] result\
    \ = new long[l.length];\n    long[] temp = new long[l.length];\n    int count\
    \ = 0;\n    for (int i = 0; i < l.length; i++) \n    {\n        if (i == 0) \n\
    \        {\n            result[count] = l[i];\n            count++;\n        }\
    \ \n        else \n        {\n            if (l[i] != l[i - 1]) \n           \
    \ {\n                result[count] = l[i];\n                count++;\n       \
    \     }\n        }\n    }\n    temp = result[0..count];\n    return temp;\n}",
  "{\n    long[] ret;\n    ret.length = 0;\n    foreach(e; l)\n    {\n        if(ret.length\
    \ == 0 || ret[$-1] != e)\n            ret ~= e;\n    }\n    return ret;\n}", "{\n\
    \    long[] result = new long[0];\n    foreach(e; l)\n    {\n        if(e in result)\n\
    \            continue;\n        result ~= e;\n    }\n    return result;\n}", "{\n\
    \    long[] result = new long[0];\n    foreach(long i; l)\n    {\n        if(result.length\
    \ == 0)\n        {\n            result ~= i;\n        }\n        else\n      \
    \  {\n            if(result[$-1] != i)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ res = new long[l.length];\n    long[] tmp = new long[l.length];\n    long[]\
    \ tmp2 = new long[l.length];\n    long[] tmp3 = new long[l.length];\n    long[]\
    \ tmp4 = new long[l.length];\n    long[] tmp5 = new long[l.length];\n    long[]\
    \ tmp6 = new long[l.length];\n    long[] tmp7 = new long[l.length];\n    long[]\
    \ tmp8 = new long[l.length];\n    long[] tmp9 = new long[l.length];\n    long[]\
    \ tmp10 = new long[l.length];\n    long[] tmp11 = new long[l.length];\n    long[]\
    \ tmp12 = new long[l.length];\n    long[] tmp13 = new long[l.length];\n    long[]\
    \ tmp14 = new long[l.length];\n    long[] tmp15 = new long[l.length];\n    long[]\
    \ tmp16 = new long[l.length];\n    long[] tmp17 = new long[l.length];\n    long[]\
    \ tmp18 = new long[l.length];\n    long[] tmp19 = new long[l.length];\n    long[]\
    \ tmp20 = new long[l.length];\n    long[] tmp21 = new long[l.length];\n    long[]\
    \ tmp22 = new long[l.length];\n    long[] tmp23 = new long[l.length];\n    long[]\
    \ tmp24 = new long[l.length];\n    long[] tmp25 = new long[l.length];\n    long[]\
    \ tmp26 = new long[l.length];\n    long[] tmp27 = new long[l.length];\n    long[]\
    \ tmp28 = new long[l.length];\n    long[] tmp29 = new long[l.length];\n    long[]\
    \ tmp30 = new long[l.length];\n    long[] tmp31 = new long[l.length];\n    long[]\
    \ tmp32 = new long[l.length];\n    long[] tmp33 = new long[l.length];\n    long[]\
    \ tmp34 = new long[l.length];\n    long[] tmp35 = new long[l.length];\n    long[]\
    \ tmp36 = new", "{\n    long[] r;\n    foreach(e; l)\n    {\n        if(!e in\
    \ r)\n            r ~= e;\n    }\n    return r;\n}", "{\n    long[] ret;\n   \
    \ long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(result.length == 0)\n\
    \        {\n            result ~= i;\n        }\n        else\n        {\n   \
    \         if(result[$-1] != i)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] res;\n\
    \    foreach(e; l)\n    {\n        if(!e in res)\n            res ~= e;\n    }\n\
    \    return res;\n}", "{\n    long[] ret;\n    foreach(e; l)\n    {\n        if\
    \ (e in ret)\n            continue;\n        ret ~= e;\n    }\n    return ret;\n\
    }", "{\n    long[] res;\n    long[] tmp;\n    long[] tmp2;\n    int i;\n    int\
    \ j;\n    int k;\n    int n;\n    int m;\n    int p;\n    n = l.length;\n    tmp\
    \ = new long[n];\n    tmp2 = new long[n];\n    res = new long[n];\n    for (i\
    \ = 0; i < n; i++) {\n        tmp[i] = l[i];\n    }\n    sort(tmp);\n    m = 0;\n\
    \    for (i = 0; i < n; i++) {\n        if (i == 0) {\n            tmp2[m] = tmp[i];\n\
    \            m++;\n        } else {\n            if (tmp[i] != tmp[i - 1]) {\n\
    \                tmp2[m] = tmp[i];\n                m++;\n            }\n    \
    \    }\n    }\n    p = 0;\n    for (j = 0; j < m; j++) {\n        res[p] = tmp2[j];\n\
    \        p++;\n    }\n    return res;\n}\n/*\nReturn sorted unique elements in\
    \ a list\n        \n*/", "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n\
    \    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[]\
    \ tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n\
    \    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n\
    \    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n\
    \    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n\
    \    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n\
    \    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n\
    \    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n\
    \    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n\
    \    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n\
    \    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n\
    \    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n\
    \    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n\
    \    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n\
    \    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n\
    \    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n\
    \    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n\
    \    long[] tmp72;\n", "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n\
    \    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[]\
    \ tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n\
    \    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n\
    \    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n\
    \    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n\
    \    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n\
    \    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n\
    \    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n\
    \    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n\
    \    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n\
    \    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n\
    \    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n\
    \    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n\
    \    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n\
    \    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n\
    \    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n\
    \    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n\
    \    long[] tmp72;\n", "{\n    long[] result;\n    long[] temp;\n    long[] temp2;\n\
    \    long[] temp3;\n    long[] temp4;\n    long[] temp5;\n    long[] temp6;\n\
    \    long[] temp7;\n    long[] temp8;\n    long[] temp9;\n    long[] temp10;\n\
    \    long[] temp11;\n    long[] temp12;\n    long[] temp13;\n    long[] temp14;\n\
    \    long[] temp15;\n    long[] temp16;\n    long[] temp17;\n    long[] temp18;\n\
    \    long[] temp19;\n    long[] temp20;\n    long[] temp21;\n    long[] temp22;\n\
    \    long[] temp23;\n    long[] temp24;\n    long[] temp25;\n    long[] temp26;\n\
    \    long[] temp27;\n    long[] temp28;\n    long[] temp29;\n    long[] temp30;\n\
    \    long[] temp31;\n    long[] temp32;\n    long[] temp33;\n    long[] temp34;\n\
    \    long[] temp35;\n    long[] temp36;\n    long[] temp37;\n    long[] temp38;\n\
    \    long[] temp39;\n    long[] temp40;\n    long[] temp41;\n    long[] temp42;\n\
    \    long[] temp43;\n    long[] temp44;\n    long[] temp45;\n    long[] temp46;\n\
    \    long[] temp47;\n    long[] temp48;\n    long[] temp49;\n    long[] temp50;\n\
    \    long[] temp51;\n    long[] temp52;\n    long[] temp53;\n    long[] temp54;\n\
    \    long[] temp55;\n    long[] temp56;\n    long[] temp57;\n    long[] temp58;\n\
    \    long[] temp59;\n    long[] temp60;\n    long[] temp61;\n    long[] temp62;\n\
    \    long[] temp63;\n    long[] temp64;\n    long[] temp65;\n    long[] temp66;\n\
    \    long[] temp67;\n    long[] temp68;\n    long[] temp69;\n    long[] temp70;\n\
    \    long[] temp71;\n    long[] temp72;\n", "{\n    long[] r;\n    long[] u;\n\
    \    long i;\n    long j;\n    long k;\n    long n;\n    long m;\n    long p;\n\
    \    long q;\n    long[] t;\n    long[] s;\n    long[] v;\n    long[] w;\n   \
    \ long[] x;\n    long[] y;\n    long[] z;\n    long[] aa;\n    long[] bb;\n  \
    \  long[] cc;\n    long[] dd;\n    long[] ee;\n    long[] ff;\n    long[] gg;\n\
    \    long[] hh;\n    long[] ii;\n    long[] jj;\n    long[] kk;\n    long[] ll;\n\
    \    long[] mm;\n    long[] nn;\n    long[] oo;\n    long[] pp;\n    long[] qq;\n\
    \    long[] rr;\n    long[] ss;\n    long[] tt;\n    long[] uu;\n    long[] vv;\n\
    \    long[] ww;\n    long[] xx;\n    long[] yy;\n    long[] zz;\n    long[] aaa;\n\
    \    long[] bbb;\n    long[] ccc;\n    long[] ddd;\n    long[] eee;\n    long[]\
    \ fff;\n    long[] ggg;\n    long[] hhh;\n    long[] iii;\n    long[] jjj;\n \
    \   long[] kkk;\n    long[] lll;\n    long[] mmm;\n    long[] nnn;\n    long[]\
    \ ooo;\n    long[] ppp;\n    long[] qqq;\n    long[] rrr;\n    long[] sss;\n \
    \   long[] ttt;\n    long[] uuu;\n    long[] vvv;\n    long[] www;\n    long[]\
    \ xxx;\n    long[] yyy;\n    long[] zzz;\n    long[] aaaa;\n    long[] bbbb;\n\
    \    long[] cccc;\n    long[] dddd;\n    long[] eeee;\n    long[] ffff;\n    long[]\
    \ gggg;\n    long[] hhhh;\n    long[] iiii;", "{\n    long[] result = new long[l.length];\n\
    \    size_t n = 0;\n    foreach(long i; l)\n    {\n        if(n == 0 || result[n-1]\
    \ != i)\n        {\n            result[n] = i;\n            n++;\n        }\n\
    \    }\n    return result[0..n];\n}", "{\n    long[] ret = new long[0];\n    foreach(elem;\
    \ l)\n    {\n        if(!elem in ret)\n            ret ~= elem;\n    }\n    return\
    \ ret;\n}", "{\n    long[] ret = new long[l.length];\n    ret[0] = l[0];\n   \
    \ int j = 1;\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i]\
    \ != l[i - 1]) \n        {\n            ret[j] = l[i];\n            j++;\n   \
    \     }\n    }\n    return ret[0..j];\n}", "{\n    long[] res = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(res.length == 0)\n        {\n     \
    \       res ~= i;\n        }\n        else\n        {\n            if(res[$-1]\
    \ != i)\n            {\n                res ~= i;\n            }\n        }\n\
    \    }\n    return res;\n}", "{\n    long[] ret;\n    long[] tmp;\n    long i;\n\
    \    long j;\n    long k;\n    long n;\n    long m;\n    long[] u;\n    long[]\
    \ v;\n    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n    long[] aa;\n\
    \    long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n    long[] ff;\n\
    \    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n    long[] kk;\n\
    \    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n    long[] pp;\n\
    \    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n    long[] uu;\n\
    \    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n    long[] zz;\n\
    \    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[] ddd;\n    long[]\
    \ eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n    long[] iii;\n \
    \   long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[] mmm;\n    long[]\
    \ nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n    long[] rrr;\n \
    \   long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[] vvv;\n    long[]\
    \ www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n    long[] aaaa;\n\
    \    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[] eeee;\n    long[]\
    \ ffff;\n    long[] gggg;\n    long[] hhhh;\n    long[] iiii;\n    long[] jjjj;\n\
    \    long[] kkkk;", "{\n    long[] ret = new long[0];\n    foreach(long i; l)\n\
    \    {\n        if(ret.find(i) == -1)\n            ret ~= i;\n    }\n    return\
    \ ret;\n}", "{\n    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n\
    \        if(ret.length == 0)\n        {\n            ret ~= i;\n        }\n  \
    \      else\n        {\n            if(ret[$-1] != i)\n            {\n       \
    \         ret ~= i;\n            }\n        }\n    }\n    return ret;\n}", "{\n\
    \    long[] res = new long[l.length];\n    long[] tmp = new long[l.length];\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd\
    \ = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n \
    \   int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n \
    \   int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aaa = 0;\n    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int\
    \ eee = 0;\n    int fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii\
    \ = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n\
    \    int nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int\
    \ rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv\
    \ =", "{\n    long[] ret = new long[l.length];\n    long[] ret2 = new long[l.length];\n\
    \    long[] ret3 = new long[l.length];\n    long[] ret4 = new long[l.length];\n\
    \    long[] ret5 = new long[l.length];\n    long[] ret6 = new long[l.length];\n\
    \    long[] ret7 = new long[l.length];\n    long[] ret8 = new long[l.length];\n\
    \    long[] ret9 = new long[l.length];\n    long[] ret10 = new long[l.length];\n\
    \    long[] ret11 = new long[l.length];\n    long[] ret12 = new long[l.length];\n\
    \    long[] ret13 = new long[l.length];\n    long[] ret14 = new long[l.length];\n\
    \    long[] ret15 = new long[l.length];\n    long[] ret16 = new long[l.length];\n\
    \    long[] ret17 = new long[l.length];\n    long[] ret18 = new long[l.length];\n\
    \    long[] ret19 = new long[l.length];\n    long[] ret20 = new long[l.length];\n\
    \    long[] ret21 = new long[l.length];\n    long[] ret22 = new long[l.length];\n\
    \    long[] ret23 = new long[l.length];\n    long[] ret24 = new long[l.length];\n\
    \    long[] ret25 = new long[l.length];\n    long[] ret26 = new long[l.length];\n\
    \    long[] ret27 = new long[l.length];\n    long[] ret28 = new long[l.length];\n\
    \    long[] ret29 = new long[l.length];\n    long[] ret30 = new long[l.length];\n\
    \    long[] ret31 = new long[l.length];\n    long[] ret32 = new long[l.length];\n\
    \    long[] ret33 = new long[l.length];\n    long[] ret34 = new long[l.length];\n\
    \    long[] ret35 = new long[l.length];\n    long[] ret36 = new long[l.length];\n\
    \    long[] ret37 =", "{\n    long[] ret = new long[l.length];\n    long[] ret2\
    \ = new long[l.length];\n    long[] ret3 = new long[l.length];\n    long[] ret4\
    \ = new long[l.length];\n    long[] ret5 = new long[l.length];\n    long[] ret6\
    \ = new long[l.length];\n    long[] ret7 = new long[l.length];\n    long[] ret8\
    \ = new long[l.length];\n    long[] ret9 = new long[l.length];\n    long[] ret10\
    \ = new long[l.length];\n    long[] ret11 = new long[l.length];\n    long[] ret12\
    \ = new long[l.length];\n    long[] ret13 = new long[l.length];\n    long[] ret14\
    \ = new long[l.length];\n    long[] ret15 = new long[l.length];\n    long[] ret16\
    \ = new long[l.length];\n    long[] ret17 = new long[l.length];\n    long[] ret18\
    \ = new long[l.length];\n    long[] ret19 = new long[l.length];\n    long[] ret20\
    \ = new long[l.length];\n    long[] ret21 = new long[l.length];\n    long[] ret22\
    \ = new long[l.length];\n    long[] ret23 = new long[l.length];\n    long[] ret24\
    \ = new long[l.length];\n    long[] ret25 = new long[l.length];\n    long[] ret26\
    \ = new long[l.length];\n    long[] ret27 = new long[l.length];\n    long[] ret28\
    \ = new long[l.length];\n    long[] ret29 = new long[l.length];\n    long[] ret30\
    \ = new long[l.length];\n    long[] ret31 = new long[l.length];\n    long[] ret32\
    \ = new long[l.length];\n    long[] ret33 = new long[l.length];\n    long[] ret34\
    \ = new long[l.length];\n    long[] ret35 = new long[l.length];\n    long[] ret36\
    \ = new long[l.length];\n    long[] ret37 =", "{\n    long[] ret = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(ret.find(i) == -1)\n            ret\
    \ ~= i;\n    }\n    return ret;\n}", "{\n    long[] r;\n    foreach(e; l)\n  \
    \  {\n        if(!e in r)\n            r ~= e;\n    }\n    return r;\n}", "{\n\
    \    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[]\
    \ tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n\
    \    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n \
    \   long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n \
    \   long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n \
    \   long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n \
    \   long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n \
    \   long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n \
    \   long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n \
    \   long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n \
    \   long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n \
    \   long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n \
    \   long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n \
    \   long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n \
    \   long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n \
    \   long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n \
    \   long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n \
    \   long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n",
  "{\n    long[] ret = new long[l.length];\n    long[] ret2 = new long[l.length];\n\
    \    long[] ret3 = new long[l.length];\n    long[] ret4 = new long[l.length];\n\
    \    long[] ret5 = new long[l.length];\n    long[] ret6 = new long[l.length];\n\
    \    long[] ret7 = new long[l.length];\n    long[] ret8 = new long[l.length];\n\
    \    long[] ret9 = new long[l.length];\n    long[] ret10 = new long[l.length];\n\
    \    long[] ret11 = new long[l.length];\n    long[] ret12 = new long[l.length];\n\
    \    long[] ret13 = new long[l.length];\n    long[] ret14 = new long[l.length];\n\
    \    long[] ret15 = new long[l.length];\n    long[] ret16 = new long[l.length];\n\
    \    long[] ret17 = new long[l.length];\n    long[] ret18 = new long[l.length];\n\
    \    long[] ret19 = new long[l.length];\n    long[] ret20 = new long[l.length];\n\
    \    long[] ret21 = new long[l.length];\n    long[] ret22 = new long[l.length];\n\
    \    long[] ret23 = new long[l.length];\n    long[] ret24 = new long[l.length];\n\
    \    long[] ret25 = new long[l.length];\n    long[] ret26 = new long[l.length];\n\
    \    long[] ret27 = new long[l.length];\n    long[] ret28 = new long[l.length];\n\
    \    long[] ret29 = new long[l.length];\n    long[] ret30 = new long[l.length];\n\
    \    long[] ret31 = new long[l.length];\n    long[] ret32 = new long[l.length];\n\
    \    long[] ret33 = new long[l.length];\n    long[] ret34 = new long[l.length];\n\
    \    long[] ret35 = new long[l.length];\n    long[] ret36 = new long[l.length];\n\
    \    long[] ret37 =", "{\n    auto result = new long[];\n    foreach(e; l)\n \
    \   {\n        if(result.length == 0 || result[$-1] != e)\n            result\
    \ ~= e;\n    }\n    return result;\n}", "{\n    long[] res;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret = new long[0];\n\
    \    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n     \
    \   ret ~= e;\n    }\n    return ret;\n}", "{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new", "{\n    long[]\
    \ ret;\n    long[] tmp;\n    long[] tmp2;\n    long i;\n    long j;\n    long\
    \ k;\n    long ln;\n    long ln2;\n    long ln3;\n    long ln4;\n    long ln5;\n\
    \    long ln6;\n    long ln7;\n    long ln8;\n    long ln9;\n    long ln10;\n\
    \    long ln11;\n    long ln12;\n    long ln13;\n    long ln14;\n    long ln15;\n\
    \    long ln16;\n    long ln17;\n    long ln18;\n    long ln19;\n    long ln20;\n\
    \    long ln21;\n    long ln22;\n    long ln23;\n    long ln24;\n    long ln25;\n\
    \    long ln26;\n    long ln27;\n    long ln28;\n    long ln29;\n    long ln30;\n\
    \    long ln31;\n    long ln32;\n    long ln33;\n    long ln34;\n    long ln35;\n\
    \    long ln36;\n    long ln37;\n    long ln38;\n    long ln39;\n    long ln40;\n\
    \    long ln41;\n    long ln42;\n    long ln43;\n    long ln44;\n    long ln45;\n\
    \    long ln46;\n    long ln47;\n    long ln48;\n    long ln49;\n    long ln50;\n\
    \    long ln51;\n    long ln52;\n    long ln53;\n    long ln54;\n    long ln55;\n\
    \    long ln56;\n    long ln57;\n    long ln58;\n    long ln59;\n    long ln60;\n\
    \    long ln61;\n    long ln62;\n    long ln63;\n    long ln64;\n    long ln65;\n\
    \    long ln66;\n    long ln67;\n    long ln68;\n", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n\
    \    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[]\
    \ tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[]\
    \ tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[]\
    \ tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[]\
    \ tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[]\
    \ tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[]\
    \ tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[]\
    \ tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[]\
    \ tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[]\
    \ tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[]\
    \ tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[]\
    \ tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[]\
    \ tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[]\
    \ tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[]\
    \ tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[]\
    \ tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[]\
    \ tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n\
    \    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[]\
    \ tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[]\
    \ tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[]\
    \ tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[]\
    \ tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[]\
    \ tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[]\
    \ tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[]\
    \ tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[]\
    \ tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[]\
    \ tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[]\
    \ tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[]\
    \ tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[]\
    \ tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[]\
    \ tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[]\
    \ tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[]\
    \ tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[]\
    \ tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret = new long[l.length];\n\
    \    long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n\
    \    long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new", "{\n    long[]\
    \ ret;\n    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n\
    \    long[] tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[]\
    \ tmp9;\n    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] ret;\n\
    \    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[]\
    \ tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n\
    \    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n\
    \    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n\
    \    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n\
    \    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n\
    \    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n\
    \    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n\
    \    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n\
    \    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n\
    \    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n\
    \    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n\
    \    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n\
    \    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n\
    \    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n\
    \    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n\
    \    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n\
    \    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result\
    \ = new long[0];\n    foreach(long i; l)\n    {\n        if(result.length == 0)\n\
    \        {\n            result ~= i;\n        }\n        else\n        {\n   \
    \         if(result[$-1] != i)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] ret =\
    \ new long[0];\n    foreach(long i; l)\n    {\n        if(!ret.canFind(i))\n \
    \           ret ~= i;\n    }\n    ret.sort();\n    return ret;\n}", "{\n    long[]\
    \ ret;\n    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n    long i;\n   \
    \ long j;\n    long k;\n    long n;\n    long m;\n    long p;\n    long q;\n \
    \   long it;\n    long count;\n    long flag;\n    long num;\n    long idx;\n\
    \    long a;\n    long b;\n    long t;\n    long key;\n    long[] keys;\n    long[]\
    \ indices;\n    long[] counts;\n    long[] counts2;\n    long[] counts3;\n   \
    \ long[] counts4;\n    long[] indices2;\n    long[] indices3;\n    long[] indices4;\n\
    \    long[] indices5;\n    long[] indices6;\n    long[] indices7;\n    long[]\
    \ indices8;\n    long[] indices9;\n    long[] indices10;\n    long[] indices11;\n\
    \    long[] indices12;\n    long[] indices13;\n    long[] indices14;\n    long[]\
    \ indices15;\n    long[] indices16;\n    long[] indices17;\n    long[] indices18;\n\
    \    long[] indices19;\n    long[] indices20;\n    long[] indices21;\n    long[]\
    \ indices22;\n    long[] indices23;\n    long[] indices24;\n    long[] indices25;\n\
    \    long[] indices26;\n    long[] indices27;\n    long[] indices28;\n    long[]\
    \ indices29;\n    long[] indices30;\n    long[] indices31;\n    long[] indices32;\n\
    \    long[] indices33;\n    long[] indices34;\n    long[] indices35;\n    long[]\
    \ indices36;\n    long[] indices37;\n    long[] indices38;\n    long[] indices39;\n\
    \    long[] indices40;\n    long[] indices41;\n    long[] indices42;\n    long[]\
    \ indices43;\n    long[] indices44;\n    long[] indices45;\n    long[] indices46;\n\
    \    long[] indices47;\n    long[] indices48;\n    long[] indices49;\n    long[]\
    \ indices50;\n    long[] indices51;\n    long[] indices52;\n    long[] indices53;",
  "{\n    long[] ret = new long[0];\n    foreach(e; l)\n    {\n        if(!e in ret)\n\
    \            ret ~= e;\n    }\n    ret.sort;\n    return ret;\n}", "{\n    long[]\
    \ result;\n    foreach(e; l)\n    {\n        if(e in result)\n            continue;\n\
    \        result ~= e;\n    }\n    return result;\n}", "{\n    long[] ret;\n  \
    \  long[] temp;\n    long[] temp2;\n    long[] temp3;\n    long[] temp4;\n   \
    \ long[] temp5;\n    long[] temp6;\n    long[] temp7;\n    long[] temp8;\n   \
    \ long[] temp9;\n    long[] temp10;\n    long[] temp11;\n    long[] temp12;\n\
    \    long[] temp13;\n    long[] temp14;\n    long[] temp15;\n    long[] temp16;\n\
    \    long[] temp17;\n    long[] temp18;\n    long[] temp19;\n    long[] temp20;\n\
    \    long[] temp21;\n    long[] temp22;\n    long[] temp23;\n    long[] temp24;\n\
    \    long[] temp25;\n    long[] temp26;\n    long[] temp27;\n    long[] temp28;\n\
    \    long[] temp29;\n    long[] temp30;\n    long[] temp31;\n    long[] temp32;\n\
    \    long[] temp33;\n    long[] temp34;\n    long[] temp35;\n    long[] temp36;\n\
    \    long[] temp37;\n    long[] temp38;\n    long[] temp39;\n    long[] temp40;\n\
    \    long[] temp41;\n    long[] temp42;\n    long[] temp43;\n    long[] temp44;\n\
    \    long[] temp45;\n    long[] temp46;\n    long[] temp47;\n    long[] temp48;\n\
    \    long[] temp49;\n    long[] temp50;\n    long[] temp51;\n    long[] temp52;\n\
    \    long[] temp53;\n    long[] temp54;\n    long[] temp55;\n    long[] temp56;\n\
    \    long[] temp57;\n    long[] temp58;\n    long[] temp59;\n    long[] temp60;\n\
    \    long[] temp61;\n    long[] temp62;\n    long[] temp63;\n    long[] temp64;\n\
    \    long[] temp65;\n    long[] temp66;\n    long[] temp67;\n    long[] temp68;\n\
    \    long[] temp69;\n    long[] temp70;\n    long[] temp71;\n    long[] temp72;\n",
  "{\n    long[] ret = new long[l.length];\n    int ret_len = 0;\n    foreach(long\
    \ i; l)\n    {\n        if (ret_len == 0 || ret[ret_len-1] != i)\n        {\n\
    \            ret[ret_len] = i;\n            ret_len++;\n        }\n    }\n   \
    \ return ret[0..ret_len];\n}", "{\n    long[] ret;\n    long[] tmp;\n    long[]\
    \ tmp2;\n    int i;\n    int j;\n    int k;\n    int n;\n    int m;\n    int p;\n\
    \    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n    int v;\n    int\
    \ w;\n    int x;\n    int y;\n    int z;\n    int aa;\n    int bb;\n    int cc;\n\
    \    int dd;\n    int ee;\n    int ff;\n    int gg;\n    int hh;\n    int ii;\n\
    \    int jj;\n    int kk;\n    int ll;\n    int mm;\n    int nn;\n    int oo;\n\
    \    int pp;\n    int qq;\n    int rr;\n    int ss;\n    int tt;\n    int uu;\n\
    \    int vv;\n    int ww;\n    int xx;\n    int yy;\n    int zz;\n    int aaa;\n\
    \    int bbb;\n    int ccc;\n    int ddd;\n    int eee;\n    int fff;\n    int\
    \ ggg;\n    int hhh;\n    int iii;\n    int jjj;\n    int kkk;\n    int lll;\n\
    \    int mmm;\n    int nnn;\n    int ooo;\n    int ppp;\n    int qqq;\n    int\
    \ rrr;\n    int sss;\n    int ttt;\n    int uuu;\n    int vvv;\n    int www;\n\
    \    int xxx;\n    int yyy;\n    int zzz;\n    int aaaa;\n    int bbbb;\n    int\
    \ cccc;\n    int dddd;\n    int eeee;\n    int ffff;\n    int gggg;\n    int hhhh;\n\
    \    int iiii;\n    int jjjj;\n    int kkkk;\n    int llll;\n    int mmmm;\n \
    \   int nnnn;\n    int oooo;\n    int pppp;\n    int qqq", "{\n    long[] res;\n\
    \    foreach(e; l)\n    {\n        if(e in res)\n            continue;\n     \
    \   res ~= e;\n    }\n    return res;\n}", "{\n    long[] ret = new long[0];\n\
    \    long[] tmp = new long[0];\n    foreach(long i; l)\n    {\n        if(i in\
    \ ret)\n            continue;\n        ret ~= i;\n    }\n    return ret;\n}",
  "{\n    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n        if(ret.length\
    \ == 0)\n        {\n            ret ~= i;\n        }\n        else if(ret[$-1]\
    \ != i)\n        {\n            ret ~= i;\n        }\n    }\n    return ret;\n\
    }", "{\n    long[] ret = new long[0];\n    foreach(long i; l)\n    {\n       \
    \ if (ret.length == 0)\n        {\n            ret ~= i;\n        }\n        else\n\
    \        {\n            if (ret[$-1] != i)\n            {\n                ret\
    \ ~= i;\n            }\n        }\n    }\n    return ret;\n}", "{\n    long[]\
    \ ret;\n    long[] tmp;\n    long i;\n    long j;\n    long k;\n    long n;\n\
    \    long m;\n    long p;\n    long q;\n    long r;\n    long s;\n    long t;\n\
    \    long u;\n    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n\
    \    long aa;\n    long ab;\n    long ac;\n    long ad;\n    long ae;\n    long\
    \ af;\n    long ag;\n    long ah;\n    long ai;\n    long aj;\n    long ak;\n\
    \    long al;\n    long am;\n    long an;\n    long ao;\n    long ap;\n    long\
    \ aq;\n    long ar;\n    long as;\n    long at;\n    long au;\n    long av;\n\
    \    long aw;\n    long ax;\n    long ay;\n    long az;\n    long ba;\n    long\
    \ bb;\n    long bc;\n    long bd;\n    long be;\n    long bf;\n    long bg;\n\
    \    long bh;\n    long bi;\n    long bj;\n    long bk;\n    long bl;\n    long\
    \ bm;\n    long bn;\n    long bo;\n    long bp;\n    long bq;\n    long br;\n\
    \    long bs;\n    long bt;\n    long bu;\n    long bv;\n    long bw;\n    long\
    \ bx;\n    long by;\n    long bz;\n    long ca;\n    long cb;\n    long cc;\n\
    \    long cd;\n    long ce;\n    long cf;\n    long cg;\n    long ch;\n    long\
    \ ci;\n    long cj;\n    long ck;\n    long cl;\n    long cm;\n    long cn;\n\
    \    long co;\n    long cp;\n    long cq;\n    long cr;\n    long cs;\n    long\
    \ ct;\n    long cu;\n    long cv;\n    long cw;\n    long cx;\n    long cy;",
  "{\n    long[] res = [];\n    foreach(e; l)\n    {\n        if(!e in res)\n    \
    \        res ~= e;\n    }\n    return res;\n}", "{\n    long[] ret = new long[0];\n\
    \    long[] tmp = new long[0];\n    foreach(long i; l)\n    {\n        if(i in\
    \ ret) continue;\n        ret ~= i;\n    }\n    ret.sort();\n    return ret;\n\
    }", "{\n    long[] res;\n    foreach(e; l)\n    {\n        if(e in res)\n    \
    \        continue;\n        res ~= e;\n    }\n    return res;\n}", "{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n\
    \        ret ~= e;\n    }\n    return ret;\n}", "{\n    long[] ret = new long[];\n\
    \    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n     \
    \   ret ~= e;\n    }\n    ret.sort;\n    return ret;\n}", "{\n    auto s = l.sort();\n\
    \    return s.array.dup.retain!(a => a != s.array[$-1]);\n}", "{\n    long[] ret\
    \ = new long[l.length];\n    long[] tmp = l.dup;\n    tmp.sort;\n    long last\
    \ = tmp[0];\n    ret[0] = last;\n    long j = 1;\n    foreach(long i; tmp)\n \
    \   {\n        if(i != last)\n        {\n            ret[j] = i;\n           \
    \ last = i;\n            j++;\n        }\n    }\n    return ret[0..j];\n}", "{\n\
    \    long[] ret = new long[0];\n    long[] tmp = new long[0];\n    foreach(long\
    \ i; l)\n    {\n        if(i in ret)\n            continue;\n        ret ~= i;\n\
    \    }\n    return ret;\n}", "{\n    long[] ret = new long[];\n    foreach(e;\
    \ l)\n    {\n        if(!e in ret)\n            ret ~= e;\n    }\n    ret.sort;\n\
    \    return ret;\n}", "{\n    long[] r;\n    long[] s;\n    long[] t;\n    long[]\
    \ u;\n    long[] v;\n    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n\
    \    long[] aa;\n    long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n\
    \    long[] ff;\n    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n\
    \    long[] kk;\n    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n\
    \    long[] pp;\n    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n\
    \    long[] uu;\n    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n\
    \    long[] zz;\n    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[]\
    \ ddd;\n    long[] eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n \
    \   long[] iii;\n    long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[]\
    \ mmm;\n    long[] nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n \
    \   long[] rrr;\n    long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[]\
    \ vvv;\n    long[] www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n \
    \   long[] aaaa;\n    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[]\
    \ eeee;\n    long[] ffff;\n    long[] gggg;\n    long[] hhhh;\n    long[] iiii;\n\
    \    long[] jjjj;\n    long[] kkkk;\n    long[] llll;\n    long[] mmmm;\n    long[]\
    \ n", "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n    long[] tmp3;\n\
    \    long[] tmp4;\n    long[] tmp5;\n    long[] tmp6;\n    long[] tmp7;\n    long[]\
    \ tmp8;\n    long[] tmp9;\n    long[] tmp10;\n    long[] tmp11;\n    long[] tmp12;\n\
    \    long[] tmp13;\n    long[] tmp14;\n    long[] tmp15;\n    long[] tmp16;\n\
    \    long[] tmp17;\n    long[] tmp18;\n    long[] tmp19;\n    long[] tmp20;\n\
    \    long[] tmp21;\n    long[] tmp22;\n    long[] tmp23;\n    long[] tmp24;\n\
    \    long[] tmp25;\n    long[] tmp26;\n    long[] tmp27;\n    long[] tmp28;\n\
    \    long[] tmp29;\n    long[] tmp30;\n    long[] tmp31;\n    long[] tmp32;\n\
    \    long[] tmp33;\n    long[] tmp34;\n    long[] tmp35;\n    long[] tmp36;\n\
    \    long[] tmp37;\n    long[] tmp38;\n    long[] tmp39;\n    long[] tmp40;\n\
    \    long[] tmp41;\n    long[] tmp42;\n    long[] tmp43;\n    long[] tmp44;\n\
    \    long[] tmp45;\n    long[] tmp46;\n    long[] tmp47;\n    long[] tmp48;\n\
    \    long[] tmp49;\n    long[] tmp50;\n    long[] tmp51;\n    long[] tmp52;\n\
    \    long[] tmp53;\n    long[] tmp54;\n    long[] tmp55;\n    long[] tmp56;\n\
    \    long[] tmp57;\n    long[] tmp58;\n    long[] tmp59;\n    long[] tmp60;\n\
    \    long[] tmp61;\n    long[] tmp62;\n    long[] tmp63;\n    long[] tmp64;\n\
    \    long[] tmp65;\n    long[] tmp66;\n    long[] tmp67;\n    long[] tmp68;\n\
    \    long[] tmp69;\n    long[] tmp70;\n    long[] tmp71;\n    long[] tmp72;\n",
  "{\n    long[] res;\n    foreach(e; l)\n    {\n        if(!e in res)\n         \
    \   res ~= e;\n    }\n    return res;\n}", "{\n    long[] result = new long[];\n\
    \    foreach(i; l)\n    {\n        if(result.length == 0 || result[$-1] != i)\n\
    \            result ~= i;\n    }\n    return result;\n}", "{\n    long[] res;\n\
    \    foreach(e; l)\n    {\n        if(e in res)\n            continue;\n     \
    \   res ~= e;\n    }\n    return res;\n}", "{\n    long[] ret = new long[0];\n\
    \    long[] tmp = new long[0];\n    foreach(long i; l) {\n        if (i in tmp)\
    \ {\n            continue;\n        }\n        tmp ~= i;\n    }\n    tmp.sort();\n\
    \    ret = tmp;\n    return ret;\n}", "{\n    long[] result;\n    foreach(e; l)\n\
    \    {\n        if(e in result)\n            continue;\n        result ~= e;\n\
    \    }\n    return result;\n}", "{\n    long[] ret = new long[l.length];\n   \
    \ long[] tmp = new long[l.length];\n    long[] tmp2 = new long[l.length];\n  \
    \  long[] tmp3 = new long[l.length];\n    long[] tmp4 = new long[l.length];\n\
    \    long[] tmp5 = new long[l.length];\n    long[] tmp6 = new long[l.length];\n\
    \    long[] tmp7 = new long[l.length];\n    long[] tmp8 = new long[l.length];\n\
    \    long[] tmp9 = new long[l.length];\n    long[] tmp10 = new long[l.length];\n\
    \    long[] tmp11 = new long[l.length];\n    long[] tmp12 = new long[l.length];\n\
    \    long[] tmp13 = new long[l.length];\n    long[] tmp14 = new long[l.length];\n\
    \    long[] tmp15 = new long[l.length];\n    long[] tmp16 = new long[l.length];\n\
    \    long[] tmp17 = new long[l.length];\n    long[] tmp18 = new long[l.length];\n\
    \    long[] tmp19 = new long[l.length];\n    long[] tmp20 = new long[l.length];\n\
    \    long[] tmp21 = new long[l.length];\n    long[] tmp22 = new long[l.length];\n\
    \    long[] tmp23 = new long[l.length];\n    long[] tmp24 = new long[l.length];\n\
    \    long[] tmp25 = new long[l.length];\n    long[] tmp26 = new long[l.length];\n\
    \    long[] tmp27 = new long[l.length];\n    long[] tmp28 = new long[l.length];\n\
    \    long[] tmp29 = new long[l.length];\n    long[] tmp30 = new long[l.length];\n\
    \    long[] tmp31 = new long[l.length];\n    long[] tmp32 = new long[l.length];\n\
    \    long[] tmp33 = new long[l.length];\n    long[] tmp34 = new long[l.length];\n\
    \    long[] tmp35 = new long[l.length];\n    long[] tmp36 = new", "{\n    long[]\
    \ result = new long[l.length];\n    long[] temp = new long[l.length];\n    int\
    \ count = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        if (temp[l[i]]\
    \ == 0)\n        {\n            temp[l[i]] = 1;\n            result[count] = l[i];\n\
    \            count++;\n        }\n    }\n    return result[0..count];\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l)\
    \ \n{\n    long[] result = new long[l.length];\n    long[] temp = new long[l.length];\n\
    \    int count = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        if\
    \ (temp[l[i]] == 0)\n        {\n            temp[l[i]] = 1;\n            result[count]\
    \ = l[i];\n            count++;\n        }\n    }\n    return result[0..count];\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    long[] temp = new long[l.length];\n\
    \    int count = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        if\
    \ (temp[l[i]] == 0)\n        {\n            temp[l[i]] = 1;\n            result[count]\
    \ = l[i];\n            count++;\n        }\n    }\n    return result[0..count];\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    long[] temp = new long[l.length];\n\
    \    int count = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        if\
    \ (temp[l[i]] == 0)\n        {\n            temp[l[i]] = 1;\n            result[count]\
    \ = l[i];\n            count++;\n", "{\n    long[] ret = [];\n    foreach(e; l)\n\
    \    {\n        if(e in ret)\n            continue;\n        ret ~= e;\n    }\n\
    \    return ret;\n}", "{\n    long[] ret;\n    long[] tmp;\n    long i;\n    long\
    \ j;\n    long k;\n    long n;\n    long m;\n    long[] p;\n    long[] q;\n  \
    \  long[] r;\n    long[] s;\n    long[] t;\n    long[] u;\n    long[] v;\n   \
    \ long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n    long[] aa;\n   \
    \ long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n    long[] ff;\n\
    \    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n    long[] kk;\n\
    \    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n    long[] pp;\n\
    \    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n    long[] uu;\n\
    \    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n    long[] zz;\n\
    \    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[] ddd;\n    long[]\
    \ eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n    long[] iii;\n \
    \   long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[] mmm;\n    long[]\
    \ nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n    long[] rrr;\n \
    \   long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[] vvv;\n    long[]\
    \ www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n    long[] aaaa;\n\
    \    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[] eeee;\n    long[]\
    \ ffff;\n    long[] gggg;", "{\n    long[] ret = [];\n    foreach(e; l)\n    {\n\
    \        if(e in ret)\n            continue;\n        ret ~= e;\n    }\n    return\
    \ ret;\n}", "{\n    long[] result = new long[l.length];\n    int j = 0;\n    foreach(i;\
    \ l)\n    {\n        if(j == 0 || result[j-1] != i)\n        {\n            result[j]\
    \ = i;\n            j++;\n        }\n    }\n    return result[0..j];\n}", "{\n\
    \    long[] result = new long[l.length];\n    long[] temp = new long[l.length];\n\
    \    long[] temp2 = new long[l.length];\n    long[] temp3 = new long[l.length];\n\
    \    long[] temp4 = new long[l.length];\n    long[] temp5 = new long[l.length];\n\
    \    long[] temp6 = new long[l.length];\n    long[] temp7 = new long[l.length];\n\
    \    long[] temp8 = new long[l.length];\n    long[] temp9 = new long[l.length];\n\
    \    long[] temp10 = new long[l.length];\n    long[] temp11 = new long[l.length];\n\
    \    long[] temp12 = new long[l.length];\n    long[] temp13 = new long[l.length];\n\
    \    long[] temp14 = new long[l.length];\n    long[] temp15 = new long[l.length];\n\
    \    long[] temp16 = new long[l.length];\n    long[] temp17 = new long[l.length];\n\
    \    long[] temp18 = new long[l.length];\n    long[] temp19 = new long[l.length];\n\
    \    long[] temp20 = new long[l.length];\n    long[] temp21 = new long[l.length];\n\
    \    long[] temp22 = new long[l.length];\n    long[] temp23 = new long[l.length];\n\
    \    long[] temp24 = new long[l.length];\n    long[] temp25 = new long[l.length];\n\
    \    long[] temp26 = new long[l.length];\n    long[] temp27 = new long[l.length];\n\
    \    long[] temp28 = new long[l.length];\n    long[] temp29 = new long[l.length];\n\
    \    long[] temp30 = new long[l.length];\n    long[] temp31 = new long[l.length];\n\
    \    long[] temp32 = new long[l.length];\n    long[] temp33 = new long[l.length];\n\
    \    long[] temp34 = new long[l.length];\n    long[] temp35 = new long[l.length];\n\
    \    long[] temp36 = new", "{\n    long[] res = new long[0];\n    foreach(e; l)\n\
    \    {\n        if(e in res)\n            continue;\n        res ~= e;\n    }\n\
    \    return res;\n}", "{\n    long[] result = new long[0];\n    foreach(long i;\
    \ l)\n    {\n        if(result.length == 0)\n        {\n            result ~=\
    \ i;\n        }\n        else\n        {\n            if(result[$-1] != i)\n \
    \           {\n                result ~= i;\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] res = new long[0];\n    foreach(e; l)\n\
    \    {\n        if(e !in res)\n            res ~= e;\n    }\n    res.sort;\n \
    \   return res;\n}", "{\n    long[] result;\n    foreach(e; l)\n    {\n      \
    \  if(e in result)\n            continue;\n        result ~= e;\n    }\n    return\
    \ result;\n}", "{\n    long[] ret = [];\n    foreach(e; l)\n    {\n        if(e\
    \ !in ret)\n            ret ~= e;\n    }\n    return ret;\n}", "{\n    long[]\
    \ ret = new long[0];\n    foreach(long i; l)\n    {\n        if(ret.length ==\
    \ 0)\n        {\n            ret ~= i;\n        }\n        else\n        {\n \
    \           if(ret[$-1] != i)\n            {\n                ret ~= i;\n    \
    \        }\n        }\n    }\n    return ret;\n}", "{\n    long[] ret;\n    ret.length\
    \ = 0;\n    foreach(e; l)\n    {\n        if(ret.length == 0 || ret[$-1] != e)\n\
    \            ret ~= e;\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long[] l2) \n{\n    long[]\
    \ ret;\n    ret.length = 0;\n    foreach(e; l)\n    {\n        if(ret.length ==\
    \ 0 || ret[$-1] != e)\n            ret ~= e;\n    }\n    foreach(e; l2)\n    {\n\
    \        if(ret.length == 0 || ret[$-1] != e)\n            ret ~= e;\n    }\n\
    \    return ret;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, long[] l2, long[] l3) \n{\n    long[] ret;\n    ret.length\
    \ = 0;\n    foreach(e; l)\n    {\n        if(ret.length == 0 || ret[$-1] != e)\n\
    \            ret ~= e;\n    }\n    foreach(e; l2)\n    {\n        if(ret.length\
    \ == 0 || ret[$-1] != e)\n            ret ~= e;\n    }\n    foreach(e; l3)\n \
    \   {\n        if(ret.length == 0 || ret[$-1] != e)\n            ret ~= e;\n \
    \   }\n    return ret;\n}\n/*\nReturn sorted unique elements in a list\n     \
    \   \n*/\nlong[] unique(long[] l, long[] l2, long[] l3, long[] l4) \n{\n    long[]\
    \ ret;\n    ret.length = 0;\n    foreach(e; l)\n    {\n        if(ret.length ==\
    \ 0 || ret[$-1] != e)\n            ret ~= e;\n    }\n    foreach(e; l2)\n    {\n\
    \        if(ret.length == 0 || ret[$-1] != e)\n            ret", "{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        if(e in ret)\n            continue;\n\
    \        ret ~= e;\n    }\n    return ret;\n}", "{\n    long[] result;\n    foreach(e;\
    \ l)\n    {\n        if(e !in result)\n            result ~= e;\n    }\n    return\
    \ result;\n}", "{\n    long[] ret = new long[0];\n    foreach(e; l)\n    {\n \
    \       if(!elem(ret, e))\n            ret ~= e;\n    }\n    ret.sort;\n    return\
    \ ret;\n}", "{\n    long[] result = new long[];\n    foreach(e; l) \n    {\n \
    \       if (result.length == 0 || result[$-1] != e) \n        {\n            result\
    \ ~= e;\n        }\n    }\n    return result;\n}", "{\n    long[] ret;\n    long[]\
    \ tmp;\n    long i;\n    long j;\n    long k;\n    long n;\n    long m;\n    ret\
    \ = new long[$];\n    tmp = new long[$];\n    n = l.length;\n    if (n == 0)\n\
    \    {\n        return ret;\n    }\n    ret = ret ~ l[0];\n    for (i = 1; i <\
    \ n; i++)\n    {\n        m = ret.length;\n        for (j = 0; j < m; j++)\n \
    \       {\n            if (l[i] == ret[j])\n            {\n                break;\n\
    \            }\n        }\n        if (j == m)\n        {\n            ret = ret\
    \ ~ l[i];\n        }\n    }\n    n = ret.length;\n    for (i = 0; i < n; i++)\n\
    \    {\n        for (j = i + 1; j < n; j++)\n        {\n            if (ret[i]\
    \ > ret[j])\n            {\n                tmp = ret[i];\n                ret[i]\
    \ = ret[j];\n                ret[j] = tmp;\n            }\n        }\n    }\n\
    \    return ret;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l) \n{\n    long[] ret;\n    long[] tmp;\n    long i;\n \
    \   long j;\n    long k;\n    long n;\n    long m;\n    ret = new long[$];\n \
    \   tmp = new long[$];\n    n = l.length;\n    if (n == 0)\n    {\n        return\
    \ ret;\n    }\n    ret = ret ~ l[0];\n    for (i = 1; i < n; i++)\n    {\n   \
    \     m = ret.length;\n        for (j = 0; j < m; j++)\n        {\n          \
    \  if (l[i] == ret[j])\n            {\n                break;\n            }\n\
    \        }\n        if (j == m)\n        {\n            ret = ret ~ l[i];\n  \
    \      }\n    }\n    n = ret.", "{\n    long[] ret;\n    long[] tmp;\n    long\
    \ i;\n    long j;\n    long k;\n    long n;\n    long m;\n    long[] p;\n    long[]\
    \ q;\n    long[] r;\n    long[] s;\n    long[] t;\n    long[] u;\n    long[] v;\n\
    \    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n    long[] aa;\n\
    \    long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n    long[] ff;\n\
    \    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n    long[] kk;\n\
    \    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n    long[] pp;\n\
    \    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n    long[] uu;\n\
    \    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n    long[] zz;\n\
    \    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[] ddd;\n    long[]\
    \ eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n    long[] iii;\n \
    \   long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[] mmm;\n    long[]\
    \ nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n    long[] rrr;\n \
    \   long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[] vvv;\n    long[]\
    \ www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n    long[] aaaa;\n\
    \    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[] eeee;\n    long[]\
    \ ffff;\n    long[] gggg;", "{\n    long[] ret;\n    long[] tmp;\n    long[] tmp2;\n\
    \    long i;\n    long j;\n    long k;\n    long ln;\n    long ln2;\n    long\
    \ ln3;\n    long ln4;\n    long ln5;\n    long ln6;\n    long ln7;\n    long ln8;\n\
    \    long ln9;\n    long ln10;\n    long ln11;\n    long ln12;\n    long ln13;\n\
    \    long ln14;\n    long ln15;\n    long ln16;\n    long ln17;\n    long ln18;\n\
    \    long ln19;\n    long ln20;\n    long ln21;\n    long ln22;\n    long ln23;\n\
    \    long ln24;\n    long ln25;\n    long ln26;\n    long ln27;\n    long ln28;\n\
    \    long ln29;\n    long ln30;\n    long ln31;\n    long ln32;\n    long ln33;\n\
    \    long ln34;\n    long ln35;\n    long ln36;\n    long ln37;\n    long ln38;\n\
    \    long ln39;\n    long ln40;\n    long ln41;\n    long ln42;\n    long ln43;\n\
    \    long ln44;\n    long ln45;\n    long ln46;\n    long ln47;\n    long ln48;\n\
    \    long ln49;\n    long ln50;\n    long ln51;\n    long ln52;\n    long ln53;\n\
    \    long ln54;\n    long ln55;\n    long ln56;\n    long ln57;\n    long ln58;\n\
    \    long ln59;\n    long ln60;\n    long ln61;\n    long ln62;\n    long ln63;\n\
    \    long ln64;\n    long ln65;\n    long ln66;\n    long ln67;\n    long ln68;\n",
  "{\n    long[] res = new long[];\n    foreach(e; l)\n    {\n        if(e in res)\n\
    \            continue;\n        res ~= e;\n    }\n    return res;\n}", "{\n  \
    \  long[] ret;\n    ret.length = 0;\n    foreach(i; l)\n    {\n        if(ret.length\
    \ == 0 || ret[$-1] != i)\n            ret ~= i;\n    }\n    return ret;\n}", "{\n\
    \    long[] r;\n    long[] t;\n    long i;\n    long j;\n    long k;\n    long\
    \ n;\n    long m;\n    long p;\n    long q;\n    long[] s;\n    long[] u;\n  \
    \  long[] v;\n    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n   \
    \ long[] aa;\n    long[] ab;\n    long[] ac;\n    long[] ad;\n    long[] ae;\n\
    \    long[] af;\n    long[] ag;\n    long[] ah;\n    long[] ai;\n    long[] aj;\n\
    \    long[] ak;\n    long[] al;\n    long[] am;\n    long[] an;\n    long[] ao;\n\
    \    long[] ap;\n    long[] aq;\n    long[] ar;\n    long[] as;\n    long[] at;\n\
    \    long[] au;\n    long[] av;\n    long[] aw;\n    long[] ax;\n    long[] ay;\n\
    \    long[] az;\n    long[] ba;\n    long[] bb;\n    long[] bc;\n    long[] bd;\n\
    \    long[] be;\n    long[] bf;\n    long[] bg;\n    long[] bh;\n    long[] bi;\n\
    \    long[] bj;\n    long[] bk;\n    long[] bl;\n    long[] bm;\n    long[] bn;\n\
    \    long[] bo;\n    long[] bp;\n    long[] bq;\n    long[] br;\n    long[] bs;\n\
    \    long[] bt;\n    long[] bu;\n    long[] bv;\n    long[] bw;\n    long[] bx;\n\
    \    long[] by;\n    long[] bz;\n    long[] ca;\n    long[] cb;\n    long[] cc;\n\
    \    long[] cd;\n    long[] ce;\n    long[] cf;\n    long[] cg;\n    long[] ch;\n\
    \    long[] ci;\n    long[] cj;\n    long[] ck;\n    long[] cl;\n    long[] cm;\n\
    \    long", "{\n    long[] r;\n    long[] s;\n    long[] t;\n    long[] u;\n \
    \   long[] v;\n    long[] w;\n    long[] x;\n    long[] y;\n    long[] z;\n  \
    \  long[] aa;\n    long[] bb;\n    long[] cc;\n    long[] dd;\n    long[] ee;\n\
    \    long[] ff;\n    long[] gg;\n    long[] hh;\n    long[] ii;\n    long[] jj;\n\
    \    long[] kk;\n    long[] ll;\n    long[] mm;\n    long[] nn;\n    long[] oo;\n\
    \    long[] pp;\n    long[] qq;\n    long[] rr;\n    long[] ss;\n    long[] tt;\n\
    \    long[] uu;\n    long[] vv;\n    long[] ww;\n    long[] xx;\n    long[] yy;\n\
    \    long[] zz;\n    long[] aaa;\n    long[] bbb;\n    long[] ccc;\n    long[]\
    \ ddd;\n    long[] eee;\n    long[] fff;\n    long[] ggg;\n    long[] hhh;\n \
    \   long[] iii;\n    long[] jjj;\n    long[] kkk;\n    long[] lll;\n    long[]\
    \ mmm;\n    long[] nnn;\n    long[] ooo;\n    long[] ppp;\n    long[] qqq;\n \
    \   long[] rrr;\n    long[] sss;\n    long[] ttt;\n    long[] uuu;\n    long[]\
    \ vvv;\n    long[] www;\n    long[] xxx;\n    long[] yyy;\n    long[] zzz;\n \
    \   long[] aaaa;\n    long[] bbbb;\n    long[] cccc;\n    long[] dddd;\n    long[]\
    \ eeee;\n    long[] ffff;\n    long[] gggg;\n    long[] hhhh;\n    long[] iiii;\n\
    \    long[] jjjj;\n    long[] kkkk;\n    long[] llll;\n    long[] mmmm;\n    long[]\
    \ n", "{\n    long[] result = new long[l.length];\n    long[] temp = new long[l.length];\n\
    \    int j = 0;\n    int k = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n\
    \        if (i == 0)\n        {\n            result[j] = l[i];\n            j++;\n\
    \        }\n        else\n        {\n            if (l[i] != l[i - 1])\n     \
    \       {\n                result[j] = l[i];\n                j++;\n         \
    \   }\n        }\n    }\n    for (int i = 0; i < result.length; i++)\n    {\n\
    \        if (result[i] != 0)\n        {\n            temp[k] = result[i];\n  \
    \          k++;\n        }\n    }\n    return temp;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    long[] temp = new long[l.length];\n    int j = 0;\n\
    \    int k = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        if (i\
    \ == 0)\n        {\n            result[j] = l[i];\n            j++;\n        }\n\
    \        else\n        {\n            if (l[i] != l[i - 1])\n            {\n \
    \               result[j] = l[i];\n                j++;\n            }\n     \
    \   }\n    }\n    for (int i = 0; i < result.length; i++)\n    {\n        if (result[i]\
    \ != 0)\n        {\n            temp[k] = result[i];\n            k++;\n     \
    \   }\n    }\n    return temp;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    long[] temp = new long[l.length];\n    int j = 0;\n    int k = 0;\n    for\
    \ (int i = 0; i < l.length; i++)\n    {", "{\n    long[] res;\n    long[] tmp;\n\
    \    long[] tmp2;\n    long[] tmp3;\n    long[] tmp4;\n    long[] tmp5;\n    long[]\
    \ tmp6;\n    long[] tmp7;\n    long[] tmp8;\n    long[] tmp9;\n    long[] tmp10;\n\
    \    long[] tmp11;\n    long[] tmp12;\n    long[] tmp13;\n    long[] tmp14;\n\
    \    long[] tmp15;\n    long[] tmp16;\n    long[] tmp17;\n    long[] tmp18;\n\
    \    long[] tmp19;\n    long[] tmp20;\n    long[] tmp21;\n    long[] tmp22;\n\
    \    long[] tmp23;\n    long[] tmp24;\n    long[] tmp25;\n    long[] tmp26;\n\
    \    long[] tmp27;\n    long[] tmp28;\n    long[] tmp29;\n    long[] tmp30;\n\
    \    long[] tmp31;\n    long[] tmp32;\n    long[] tmp33;\n    long[] tmp34;\n\
    \    long[] tmp35;\n    long[] tmp36;\n    long[] tmp37;\n    long[] tmp38;\n\
    \    long[] tmp39;\n    long[] tmp40;\n    long[] tmp41;\n    long[] tmp42;\n\
    \    long[] tmp43;\n    long[] tmp44;\n    long[] tmp45;\n    long[] tmp46;\n\
    \    long[] tmp47;\n    long[] tmp48;\n    long[] tmp49;\n    long[] tmp50;\n\
    \    long[] tmp51;\n    long[] tmp52;\n    long[] tmp53;\n    long[] tmp54;\n\
    \    long[] tmp55;\n    long[] tmp56;\n    long[] tmp57;\n    long[] tmp58;\n\
    \    long[] tmp59;\n    long[] tmp60;\n    long[] tmp61;\n    long[] tmp62;\n\
    \    long[] tmp63;\n    long[] tmp64;\n    long[] tmp65;\n    long[] tmp66;\n\
    \    long[] tmp67;\n    long[] tmp68;\n    long[] tmp69;\n    long[] tmp70;\n\
    \    long[] tmp71;\n    long[] tmp72;\n", "{\n    long[] result = new long[0];\n\
    \    foreach(long i; l)\n    {\n        if(result.length == 0)\n        {\n  \
    \          result ~= i;\n        }\n        else\n        {\n            if(result[$-1]\
    \ != i)\n            {\n                result ~= i;\n            }\n        }\n\
    \    }\n    return result;\n}", "{\n    long[] ret;\n    long[] tmp;\n    long[]\
    \ tmp2;\n    long i;\n    long j;\n    long k;\n    long lsize;\n    long tmpsize;\n\
    \    long tmp2size;\n    long retSize;\n    long retSize2;\n    retSize = l.length;\n\
    \    ret = new long[retSize];\n    retSize2 = 0;\n    lsize = l.length;\n    for\
    \ (i = 0; i < lsize; i++) \n    {\n        tmp = new long[retSize2];\n       \
    \ tmpsize = tmp.length;\n        for (j = 0; j < tmpsize; j++) \n        {\n \
    \           tmp[j] = ret[j];\n        }\n        tmp2 = new long[1];\n       \
    \ tmp2[0] = l[i];\n        tmp2size = tmp2.length;\n        ret = new long[retSize2\
    \ + tmp2size];\n        for (k = 0; k < retSize2; k++) \n        {\n         \
    \   ret[k] = tmp[k];\n        }\n        for (k = 0; k < tmp2size; k++) \n   \
    \     {\n            ret[k + retSize2] = tmp2[k];\n        }\n        retSize2\
    \ = ret.length;\n    }\n    ret = sort(ret);\n    retSize = ret.length;\n    retSize2\
    \ = 0;\n    for (i = 0; i < retSize; i++) \n    {\n        if (i == 0) \n    \
    \    {\n            retSize2 = retSize2 + 1;\n        }\n        else \n     \
    \   {\n            if (ret[i] != ret[i - 1]) \n            {\n               \
    \ retSize2 = retSize2 + 1;\n            }\n        }\n    }\n    tmp = new long[retSize2];\n\
    \    tmpsize = tmp.length;\n    for (i = 0; i < tmpsize; i++) \n    {\n      \
    \  tmp[i] = ret[i];\n    }\n    ret = new long[retSize2];\n    for (i = 0; i <",
  "{\n    long[] ret = [];\n    foreach(e; l)\n    {\n        if(e in ret)\n     \
    \       continue;\n        ret ~= e;\n    }\n    return ret;\n}", "{\n    long[]\
    \ ret = new long[l.length];\n    ret[0] = l[0];\n    long ret_len = 1;\n    foreach(long\
    \ i; l)\n    {\n        if(ret[ret_len-1] != i)\n        {\n            ret[ret_len]\
    \ = i;\n            ret_len++;\n        }\n    }\n    return ret[0..ret_len];\n\
    }", "{\n    long[] res;\n    foreach(e; l)\n    {\n        if(!e in res)\n   \
    \         res ~= e;\n    }\n    return res;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

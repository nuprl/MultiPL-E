language: d
name: HumanEval_100_make_a_pile
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[(int)n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnun_74o8.d(17): Error: C style cast illegal, use `cast(int)n`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnun_74o8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163917
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp72b182f8.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp72b182f8.make_a_pile(long) [0x427e43]

    ??:? void tmp72b182f8.__unittest_L27_C1() [0x427ea5]

    ??:? void tmp72b182f8.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp72b182f8.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp72b182f8.make_a_pile(long) [0x427e43]

    ??:? void tmp72b182f8.__unittest_L27_C1() [0x427ea5]

    ??:? void tmp72b182f8.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowz1irlw.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmpowz1irlw.__unittest_L28_C1() [0x42803b]

    ??:? void tmpowz1irlw.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5uf6fnes.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp5uf6fnes.__unittest_L27_C1() [0x427f12]

    ??:? void tmp5uf6fnes.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        if (n % 2 == 0)\n            n += 1;\n\
    \        else\n            n += 2;\n        i++;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpuj9_z1ks.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpuj9_z1ks.make_a_pile(long) [0x427e43]

    ??:? void tmpuj9_z1ks.__unittest_L30_C1() [0x427ea5]

    ??:? void tmpuj9_z1ks.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i * (n % 2 == 0 ? 2 : 1);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn2flm4ts.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpn2flm4ts.__unittest_L24_C1() [0x427f0a]

    ??:? void tmpn2flm4ts.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i * (n % 2 == 0 ? 2 : 1);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn2flm4ts.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpn2flm4ts.__unittest_L24_C1() [0x427f0a]

    ??:? void tmpn2flm4ts.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n  \
    \  {\n        res[i] = n + 2 * i;\n    }\n    return res;\n}\nunittest\n{\n  \
    \  alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163918
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + 2 * i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    \
    \    i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpfsqp6zaq.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpfsqp6zaq.make_a_pile(long) [0x427e43]

    ??:? void tmpfsqp6zaq.__unittest_L27_C1() [0x427ea5]

    ??:? void tmpfsqp6zaq.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long stones = n;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = stones;\n        if (stones %\
    \ 2 == 0)\n            stones++;\n        else\n            stones += 2;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeph8p4vg.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpeph8p4vg.__unittest_L29_C1() [0x427f8b]

    ??:? void tmpeph8p4vg.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp72b182f8.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp72b182f8.make_a_pile(long) [0x427e43]

    ??:? void tmp72b182f8.__unittest_L27_C1() [0x427ea5]

    ??:? void tmp72b182f8.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[(int)n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnun_74o8.d(17): Error: C style cast illegal, use `cast(int)n`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnun_74o8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163917
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        res[i] = n;\n        if (n % 2 == 0)\n            n = n / 2;\n\
    \        else\n            n = (n + 1) / 2;\n        i++;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp_1n9_pdi.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428516]

    ??:? long[] tmp_1n9_pdi.make_a_pile(long) [0x427e44]

    ??:? void tmp_1n9_pdi.__unittest_L30_C1() [0x427ec5]

    ??:? void tmp_1n9_pdi.__modtest() [0x4281e4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c51f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3b2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43063d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430aec]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305c9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b389]

    ??:? runModuleUnitTests [0x42c2f5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    auto result = new long[];\n    while (n > 0)\n    {\n        result\
    \ ~= n;\n        n = n % 2 == 0 ? n / 2 : n / 2 + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt4iqtmgz.d(17): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4iqtmgz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++) {\n        result[i] = result[i-1] + (result[i-1] % 2 ==\
    \ 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdw76c4us.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpdw76c4us.__unittest_L24_C1() [0x427f6e]

    ??:? void tmpdw76c4us.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n - 1 : n - 2;\n    \
    \    i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp17hctg0m.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp17hctg0m.__unittest_L27_C1() [0x427f12]

    ??:? void tmp17hctg0m.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqgxopcsh.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpqgxopcsh.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpqgxopcsh.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5uf6fnes.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp5uf6fnes.__unittest_L27_C1() [0x427f12]

    ??:? void tmp5uf6fnes.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    auto result = new long[];\n    while (n > 0)\n    {\n        result\
    \ ~= n;\n        n = n % 2 == 0 ? n / 2 : n / 2 + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt4iqtmgz.d(17): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4iqtmgz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long count = 0;\n    for (long\
    \ i = n; i > 0; i--)\n    {\n        result[count] = i;\n        count++;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgd8bxj9_.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x428425]

    ??:? void tmpgd8bxj9_.__unittest_L26_C1() [0x427eee]

    ??:? void tmpgd8bxj9_.__modtest() [0x4281a8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4df]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b372]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305fd]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430aac]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430589]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b349]

    ??:? runModuleUnitTests [0x42c2b5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288e8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long stones = n;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = stones;\n        if (stones %\
    \ 2 == 0)\n            stones++;\n        else\n            stones += 2;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeph8p4vg.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpeph8p4vg.__unittest_L29_C1() [0x427f8b]

    ??:? void tmpeph8p4vg.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    auto res = new long[];\n    while (n > 0)\n    {\n        res ~=\
    \ n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplocrl_2w.d(17): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplocrl_2w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    auto res = new long[];\n    while (n > 0)\n    {\n        res ~=\
    \ n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplocrl_2w.d(17): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplocrl_2w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long stones = n;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = stones;\n        if (stones %\
    \ 2 == 0)\n            stones++;\n        else\n            stones--;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcknpm6pe.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpcknpm6pe.__unittest_L29_C1() [0x427f0e]

    ??:? void tmpcknpm6pe.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long num = n;\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        result[i] = num;\n        if (num % 2 == 0)\n\
    \            num++;\n        else\n            num--;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo1f1swsy.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpo1f1swsy.__unittest_L29_C1() [0x427f0e]

    ??:? void tmpo1f1swsy.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i;\n        if (n % 2 == 0)\n            result[i]++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkt7jfy1u.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x42846d]

    ??:? void tmpkt7jfy1u.__unittest_L26_C1() [0x427f32]

    ??:? void tmpkt7jfy1u.__modtest() [0x4281ec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c527]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430645]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430af4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b391]

    ??:? runModuleUnitTests [0x42c2fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428930]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5uf6fnes.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp5uf6fnes.__unittest_L27_C1() [0x427f12]

    ??:? void tmp5uf6fnes.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n  \
    \  {\n        res[i] = n + i;\n        if (n % 2 == 0)\n            res[i] +=\
    \ 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdhr3pcla.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x42846d]

    ??:? void tmpdhr3pcla.__unittest_L26_C1() [0x427f36]

    ??:? void tmpdhr3pcla.__modtest() [0x4281f0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c527]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430645]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430af4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b391]

    ??:? runModuleUnitTests [0x42c2fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428930]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n  \
    \  {\n        res[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpgbvcy44n.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpgbvcy44n.make_a_pile(long) [0x427e43]

    ??:? void tmpgbvcy44n.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpgbvcy44n.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    auto result = new long[];\n    while (n > 0)\n    {\n        result\
    \ ~= n;\n        n = n % 2 == 0 ? n / 2 : n / 2 + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt4iqtmgz.d(17): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4iqtmgz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    res[0] = n;\n    for (long i = 1;\
    \ i < n; i++)\n    {\n        if (n % 2 == 0)\n            res[i] = res[i-1] +\
    \ 2;\n        else\n            res[i] = res[i-1] + 1;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7hkrgdlt.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmp7hkrgdlt.__unittest_L28_C1() [0x427f9e]

    ??:? void tmp7hkrgdlt.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5uf6fnes.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp5uf6fnes.__unittest_L27_C1() [0x427f12]

    ??:? void tmp5uf6fnes.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long count = n;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = count;\n        if (count % 2\
    \ == 0)\n            count++;\n        else\n            count += 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprofl6yqf.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmprofl6yqf.__unittest_L29_C1() [0x427f8b]

    ??:? void tmprofl6yqf.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowz1irlw.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmpowz1irlw.__unittest_L28_C1() [0x42803b]

    ??:? void tmpowz1irlw.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + 2 * i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\
    \ {\n        result[i] = n;\n        if (n % 2 == 0) {\n            n = n + 1;\n\
    \        }\n        n = n / 2;\n        i++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphqmvye7b.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmphqmvye7b.__unittest_L29_C1() [0x427f16]

    ??:? void tmphqmvye7b.__modtest() [0x4281d0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    res[0] = n;\n    for (long i = 1;\
    \ i < n; i++)\n    {\n        if (n % 2 == 0)\n            res[i] = res[i-1] +\
    \ 2;\n        else\n            res[i] = res[i-1] + 1;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7hkrgdlt.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmp7hkrgdlt.__unittest_L28_C1() [0x427f9e]

    ??:? void tmp7hkrgdlt.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n - i;\n        if (n % 2 == 0)\n            result[i]\
    \ += i;\n        else\n            result[i] -= i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkey1z8ej.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x42849d]

    ??:? void tmpkey1z8ej.__unittest_L28_C1() [0x427f66]

    ??:? void tmpkey1z8ej.__modtest() [0x428220]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c557]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ea]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430675]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b24]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430601]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c1]

    ??:? runModuleUnitTests [0x42c32d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428960]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + 2 * i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        if (n % 2 == 0)\n            n = n - 1;\n\
    \        else\n            n = n - 2;\n        i++;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprp4eubbn.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmprp4eubbn.__unittest_L30_C1() [0x427f0e]

    ??:? void tmprp4eubbn.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp72b182f8.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp72b182f8.make_a_pile(long) [0x427e43]

    ??:? void tmp72b182f8.__unittest_L27_C1() [0x427ea5]

    ??:? void tmp72b182f8.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        if (n % 2 == 0)\n            n++;\n  \
    \      else\n            n--;\n        i++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3mztc8y5.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x42843d]

    ??:? void tmp3mztc8y5.__unittest_L30_C1() [0x427f06]

    ??:? void tmp3mztc8y5.__modtest() [0x4281c0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4f7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b38a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430615]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ac4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b361]

    ??:? runModuleUnitTests [0x42c2cd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428900]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowz1irlw.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmpowz1irlw.__unittest_L28_C1() [0x42803b]

    ??:? void tmpowz1irlw.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i;\n        if (n % 2 == 0)\n            result[i]++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkt7jfy1u.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x42846d]

    ??:? void tmpkt7jfy1u.__unittest_L26_C1() [0x427f32]

    ??:? void tmpkt7jfy1u.__modtest() [0x4281ec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c527]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430645]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430af4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b391]

    ??:? runModuleUnitTests [0x42c2fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428930]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = isEven(n) ? n + 2 : n + 1;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37ezurou.d(21): Error: undefined identifier `isEven`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37ezurou.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n  \
    \  {\n        res[i] = n;\n        if (n % 2 == 0)\n            n++;\n       \
    \ else\n            n += 2;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpkot7_1ha.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpkot7_1ha.make_a_pile(long) [0x427e43]

    ??:? void tmpkot7_1ha.__unittest_L28_C1() [0x427ea5]

    ??:? void tmpkot7_1ha.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowz1irlw.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmpowz1irlw.__unittest_L28_C1() [0x42803b]

    ??:? void tmpowz1irlw.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: -1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result;\n    long i = 0;\n    while (n > 0)\n    {\n    \
    \    result ~= n;\n        if (n % 2 == 0)\n            n = n / 2;\n        else\n\
    \            n = (n + 1) / 2;\n        i++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660163934
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        if (i == 0)\n        {\n            result[i] = n;\n        }\n\
    \        else\n        {\n            if (result[i-1] % 2 == 0)\n            {\n\
    \                result[i] = result[i-1] + 1;\n            }\n            else\n\
    \            {\n                result[i] = result[i-1] + 2;\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt4t2lp1f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42851d]

    ??:? void tmpt4t2lp1f.__unittest_L38_C1() [0x42805b]

    ??:? void tmpt4t2lp1f.__modtest() [0x42829c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5d7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b46a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ba4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430681]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]

    ??:? runModuleUnitTests [0x42c3ad]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289e0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpykttjc1p.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpykttjc1p.make_a_pile(long) [0x427e43]

    ??:? void tmpykttjc1p.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpykttjc1p.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = isEven(n) ? n + 2 : n + 1;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37ezurou.d(21): Error: undefined identifier `isEven`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37ezurou.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowz1irlw.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmpowz1irlw.__unittest_L28_C1() [0x42803b]

    ??:? void tmpowz1irlw.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + 2 * i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n  \
    \  {\n        res[i] = n;\n        if (n % 2 == 0)\n            n++;\n       \
    \ else\n            n += 2;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpkot7_1ha.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpkot7_1ha.make_a_pile(long) [0x427e43]

    ??:? void tmpkot7_1ha.__unittest_L28_C1() [0x427ea5]

    ??:? void tmpkot7_1ha.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp72b182f8.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp72b182f8.make_a_pile(long) [0x427e43]

    ??:? void tmp72b182f8.__unittest_L27_C1() [0x427ea5]

    ??:? void tmp72b182f8.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n - 1 : n - 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5uf6fnes.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp5uf6fnes.__unittest_L27_C1() [0x427f12]

    ??:? void tmp5uf6fnes.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    auto result = new long[];\n    while (n > 0)\n    {\n        result\
    \ ~= n;\n        n = n % 2 == 0 ? n / 2 : n / 2 + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt4iqtmgz.d(17): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4iqtmgz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp3f_hu0g0.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp3f_hu0g0.make_a_pile(long) [0x427e42]

    ??:? void tmp3f_hu0g0.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp3f_hu0g0.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result;\n    result.length = n;\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n\
    \ + 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpg8o3t_q2.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284fe]

    ??:? long[] tmpg8o3t_q2.make_a_pile(long) [0x427e4f]

    ??:? void tmpg8o3t_q2.__unittest_L26_C1() [0x427eb1]

    ??:? void tmpg8o3t_q2.__modtest() [0x4281d0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d57b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c40e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43184d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x431cfc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4317d9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c3e5]

    ??:? runModuleUnitTests [0x42d351]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n - 1 : n - 2;\n    \
    \    i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp17hctg0m.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp17hctg0m.__unittest_L27_C1() [0x427f12]

    ??:? void tmp17hctg0m.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpviu3gx57.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpviu3gx57.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpviu3gx57.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long current = n;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = current;\n        current = current\
    \ % 2 == 0 ? current + 1 : current + 2;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq4h0m6p9.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmpq4h0m6p9.__unittest_L26_C1() [0x427f93]

    ??:? void tmpq4h0m6p9.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i;\n        if (n % 2 == 0)\n            result[i]++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkt7jfy1u.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x42846d]

    ??:? void tmpkt7jfy1u.__unittest_L26_C1() [0x427f32]

    ??:? void tmpkt7jfy1u.__modtest() [0x4281ec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c527]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430645]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430af4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b391]

    ??:? runModuleUnitTests [0x42c2fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428930]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp3f_hu0g0.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp3f_hu0g0.make_a_pile(long) [0x427e42]

    ??:? void tmp3f_hu0g0.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp3f_hu0g0.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        if (n % 2 == 0)\n            n = n + 1;\n\
    \        else\n            n = n + 2;\n        i++;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmplyetzfia.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmplyetzfia.make_a_pile(long) [0x427e40]

    ??:? void tmplyetzfia.__unittest_L30_C1() [0x427ea9]

    ??:? void tmplyetzfia.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long stones = n;\n    for (int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = stones;\n        if (stones %\
    \ 2 == 0)\n            stones++;\n        else\n            stones += 2;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpunb85u9t.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpunb85u9t.__unittest_L29_C1() [0x427f87]

    ??:? void tmpunb85u9t.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (i < n)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \      i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp72b182f8.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp72b182f8.make_a_pile(long) [0x427e43]

    ??:? void tmp72b182f8.__unittest_L27_C1() [0x427ea5]

    ??:? void tmp72b182f8.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpykttjc1p.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpykttjc1p.make_a_pile(long) [0x427e43]

    ??:? void tmpykttjc1p.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpykttjc1p.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + 2 * i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long count = n;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = count;\n        if (count % 2\
    \ == 0)\n            count++;\n        else\n            count += 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprofl6yqf.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmprofl6yqf.__unittest_L29_C1() [0x427f8b]

    ??:? void tmprofl6yqf.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = isEven(n) ? n + 2 : n + 1;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37ezurou.d(21): Error: undefined identifier `isEven`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37ezurou.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + (i % 2 == 0 ? i : i - 1);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppjbeae1z.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmppjbeae1z.__unittest_L24_C1() [0x427f0e]

    ??:? void tmppjbeae1z.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowz1irlw.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmpowz1irlw.__unittest_L28_C1() [0x42803b]

    ??:? void tmpowz1irlw.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] % 2\
    \ == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp00w11vgv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284ad]

    ??:? void tmp00w11vgv.__unittest_L25_C1() [0x427f76]

    ??:? void tmp00w11vgv.__modtest() [0x428230]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b34]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430611]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3d1]

    ??:? runModuleUnitTests [0x42c33d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        if (i == 0)\n        {\n            result[i] = n;\n        }\n\
    \        else\n        {\n            if (result[i-1] % 2 == 0)\n            {\n\
    \                result[i] = result[i-1] + 1;\n            }\n            else\n\
    \            {\n                result[i] = result[i-1] + 2;\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk3y9q0sq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428515]

    ??:? void tmpk3y9q0sq.__unittest_L38_C1() [0x428053]

    ??:? void tmpk3y9q0sq.__modtest() [0x428294]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b462]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b9c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430679]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b439]

    ??:? runModuleUnitTests [0x42c3a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289d8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpykttjc1p.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpykttjc1p.make_a_pile(long) [0x427e43]

    ??:? void tmpykttjc1p.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpykttjc1p.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long stones = n;\n    for (int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = stones;\n        if (stones %\
    \ 2 == 0)\n            stones++;\n        else\n            stones += 2;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpunb85u9t.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpunb85u9t.__unittest_L29_C1() [0x427f87]

    ??:? void tmpunb85u9t.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i;\n        if (n % 2 == 0)\n            result[i]\
    \ += 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8xx757xg.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x42846d]

    ??:? void tmp8xx757xg.__unittest_L26_C1() [0x427f36]

    ??:? void tmp8xx757xg.__modtest() [0x4281f0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c527]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430645]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430af4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b391]

    ??:? runModuleUnitTests [0x42c2fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428930]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n + i;\n        if (n % 2 == 0)\n            result[i]\
    \ += 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8xx757xg.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x42846d]

    ??:? void tmp8xx757xg.__unittest_L26_C1() [0x427f36]

    ??:? void tmp8xx757xg.__modtest() [0x4281f0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c527]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430645]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430af4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b391]

    ??:? runModuleUnitTests [0x42c2fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428930]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long stones = n;\n    for (int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = stones;\n        if (stones %\
    \ 2 == 0)\n            stones++;\n        else\n            stones += 2;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpunb85u9t.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpunb85u9t.__unittest_L29_C1() [0x427f87]

    ??:? void tmpunb85u9t.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    long i = 0;\n    while (n > 0)\n\
    \    {\n        result[i] = n;\n        if (n % 2 == 0)\n            n = n - 1;\n\
    \        else\n            n = n - 2;\n        i++;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprp4eubbn.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmprp4eubbn.__unittest_L30_C1() [0x427f0e]

    ??:? void tmprp4eubbn.__modtest() [0x4281c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428908]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (n % 2 == 0)\n        {\n            result[i]\
    \ = result[i - 1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i - 1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpaqgjmzci.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284d5]

    ??:? void tmpaqgjmzci.__unittest_L32_C1() [0x427f9e]

    ??:? void tmpaqgjmzci.__modtest() [0x428258]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c58f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b422]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306ad]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b5c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430639]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f9]

    ??:? runModuleUnitTests [0x42c365]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428998]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (int i\
    \ = 1; i < n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i]\
    \ = result[i-1] + 1;\n        else\n            result[i] = result[i-1] + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1ip6psbd.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284fd]

    ??:? void tmp1ip6psbd.__unittest_L28_C1() [0x42803b]

    ??:? void tmp1ip6psbd.__modtest() [0x42827c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430661]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]

    ??:? runModuleUnitTests [0x42c38d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe2gphtl7.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpe2gphtl7.make_a_pile(long) [0x427e43]

    ??:? void tmpe2gphtl7.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpe2gphtl7.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp3f_hu0g0.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp3f_hu0g0.make_a_pile(long) [0x427e42]

    ??:? void tmp3f_hu0g0.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp3f_hu0g0.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = (n % 2 == 0) ? n + 1 : n + 2;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp0fczlfgn.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmp0fczlfgn.make_a_pile(long) [0x427e42]

    ??:? void tmp0fczlfgn.__unittest_L25_C1() [0x427ea5]

    ??:? void tmp0fczlfgn.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpykttjc1p.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284f6]

    ??:? long[] tmpykttjc1p.make_a_pile(long) [0x427e43]

    ??:? void tmpykttjc1p.__unittest_L25_C1() [0x427ea5]

    ??:? void tmpykttjc1p.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b392]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43061d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430acc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b369]

    ??:? runModuleUnitTests [0x42c2d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(ch'
  stdout: ''
  timestamp: 1660163919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[(int)n];\n    for (int i = 0; i < n; i++)\n\
    \    {\n        result[i] = n;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkgtmvmuw.d(17): Error: C style cast illegal, use `cast(int)n`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkgtmvmuw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163918
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in a list, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n        \n*/\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        result[i] = result[i-1] + (result[i-1] %\
    \ 2 == 0 ? 2 : 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpphzsxxxv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284a5]

    ??:? void tmpphzsxxxv.__unittest_L25_C1() [0x427f6e]

    ??:? void tmpphzsxxxv.__modtest() [0x428228]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c55f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43067d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430609]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3c9]

    ??:? runModuleUnitTests [0x42c335]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428968]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163918

{
  "language": "d",
  "name": "HumanEval_64_vowels_count",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long vowels = 0;\n    foreach(c; s) {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vowels++;\n        }\n    }\n    if(s[$-1] == 'y') {\n        vowels++;\n    }\n    return vowels;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpcsdopjl1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmpcsdopjl1.__unittest_L24_C1() [0x427b21]\n??:? void tmpcsdopjl1.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa91]\n??:? runModuleUnitTests [0x42b9fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428350]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        switch(c)\n        {\n            case 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n            case 'y':\n                count++;\n                break;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl88twzgo.d(16): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl88twzgo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163960
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n        else if (s[i] == 'y' && i == s.length - 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfja6ztyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmpfja6ztyi.__unittest_L27_C1() [0x427b9d]\n??:? void tmpfja6ztyi.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bca7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fccd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long cnt = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n            cnt++;\n    }\n    if (s[$-1] == 'y')\n        cnt++;\n    return cnt;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp_jj4zj63.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmp_jj4zj63.__unittest_L23_C1() [0x427b21]\n??:? void tmp_jj4zj63.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa91]\n??:? runModuleUnitTests [0x42b9fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428350]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n           (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxun9r8cp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpxun9r8cp.__unittest_L24_C1() [0x427af9]\n??:? void tmpxun9r8cp.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long n = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            n++;\n    }\n    return n;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpw8lxx8lk.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpw8lxx8lk.__unittest_L21_C1() [0x427af9]\n??:? void tmpw8lxx8lk.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpzziqk31y.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpzziqk31y.__unittest_L21_C1() [0x427af1]\n??:? void tmpzziqk31y.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.indexOf(c) == s.length - 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppv9upjcc.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppv9upjcc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163960
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        switch(c)\n        {\n            case 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n            case 'y':\n                count++;\n                break;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl88twzgo.d(16): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl88twzgo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163960
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n           (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxun9r8cp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpxun9r8cp.__unittest_L24_C1() [0x427af9]\n??:? void tmpxun9r8cp.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n            (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbuca9y9v.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpbuca9y9v.__unittest_L22_C1() [0x427af9]\n??:? void tmpbuca9y9v.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n           (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxun9r8cp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpxun9r8cp.__unittest_L24_C1() [0x427af9]\n??:? void tmpxun9r8cp.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n        else if (s[i] == 'y' && i == s.length - 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfja6ztyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmpfja6ztyi.__unittest_L27_C1() [0x427b9d]\n??:? void tmpfja6ztyi.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bca7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fccd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && c == s[$-1]))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpq4uho7xr.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpq4uho7xr.__unittest_L21_C1() [0x427b29]\n??:? void tmpq4uho7xr.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aac2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc55]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]\n??:? runModuleUnitTests [0x42ba05]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428358]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpzziqk31y.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpzziqk31y.__unittest_L21_C1() [0x427af1]\n??:? void tmpzziqk31y.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n           (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxun9r8cp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpxun9r8cp.__unittest_L24_C1() [0x427af9]\n??:? void tmpxun9r8cp.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n        else if (s[i] == 'y' && i == s.length - 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfja6ztyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmpfja6ztyi.__unittest_L27_C1() [0x427b9d]\n??:? void tmpfja6ztyi.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bca7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fccd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpzziqk31y.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpzziqk31y.__unittest_L21_C1() [0x427af1]\n??:? void tmpzziqk31y.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && c == s[$-1]))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpq4uho7xr.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpq4uho7xr.__unittest_L21_C1() [0x427b29]\n??:? void tmpq4uho7xr.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aac2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc55]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]\n??:? runModuleUnitTests [0x42ba05]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428358]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n            (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbuca9y9v.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpbuca9y9v.__unittest_L22_C1() [0x427af9]\n??:? void tmpbuca9y9v.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n           (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxun9r8cp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpxun9r8cp.__unittest_L24_C1() [0x427af9]\n??:? void tmpxun9r8cp.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n        else if (s[i] == 'y' && i == s.length - 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfja6ztyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmpfja6ztyi.__unittest_L27_C1() [0x427b9d]\n??:? void tmpfja6ztyi.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bca7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fccd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n            (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbuca9y9v.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpbuca9y9v.__unittest_L22_C1() [0x427af9]\n??:? void tmpbuca9y9v.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long vowels = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n            vowels++;\n        }\n        else if(c == 'y' && s.length == 1)\n        {\n            vowels++;\n        }\n    }\n    return vowels;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8cnm5snr.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmp8cnm5snr.__unittest_L27_C1() [0x427afd]\n??:? void tmp8cnm5snr.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa26]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430068]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9fd]\n??:? runModuleUnitTests [0x42b969]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282bc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && c == s[$-1]))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpq4uho7xr.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpq4uho7xr.__unittest_L21_C1() [0x427b29]\n??:? void tmpq4uho7xr.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aac2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc55]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430104]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbe1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]\n??:? runModuleUnitTests [0x42ba05]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428358]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsfw6auol.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpsfw6auol.__unittest_L21_C1() [0x427ae9]\n??:? void tmpsfw6auol.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        switch(c)\n        {\n            case 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n            case 'y':\n                count++;\n                break;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl88twzgo.d(16): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl88twzgo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163960
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n        else if (s[i] == 'y' && i == s.length - 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfja6ztyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmpfja6ztyi.__unittest_L27_C1() [0x427b9d]\n??:? void tmpfja6ztyi.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bca7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fccd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n        {\n            count++;\n        }\n        else if (s[i] == 'y' && i == s.length - 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfja6ztyi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427f0d]\n??:? void tmpfja6ztyi.__unittest_L27_C1() [0x427b9d]\n??:? void tmpfja6ztyi.__modtest() [0x427c8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bca7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fccd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43017c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc59]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab11]\n??:? runModuleUnitTests [0x42ba7d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long n = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            n++;\n    }\n    return n;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmmc8fhmb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpmmc8fhmb.__unittest_L21_C1() [0x427af9]\n??:? void tmpmmc8fhmb.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n           c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpypypr3mj.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpypypr3mj.__unittest_L24_C1() [0x427b38]\n??:? void tmpypypr3mj.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        switch(c)\n        {\n            case 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n            case 'y':\n                count++;\n                break;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl88twzgo.d(16): Error: `switch` statement without a `default`; use `final switch` or add `default: assert(0);` or add `default: break;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl88twzgo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163960
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\n            (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbuca9y9v.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpbuca9y9v.__unittest_L22_C1() [0x427af9]\n??:? void tmpbuca9y9v.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsundpd53.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpsundpd53.__unittest_L21_C1() [0x427af9]\n??:? void tmpsundpd53.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || (c == 'y' && s.length == 1))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfqk2km7j.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpfqk2km7j.__unittest_L23_C1() [0x427af9]\n??:? void tmpfqk2km7j.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long c = 0;\n    foreach(char ch; s)\n    {\n        if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' || ch == 'y')\n            c++;\n    }\n    return c;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbq2_6mw6.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpbq2_6mw6.__unittest_L21_C1() [0x427af1]\n??:? void tmpbq2_6mw6.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi7is65w3.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpi7is65w3.__unittest_L21_C1() [0x427af1]\n??:? void tmpi7is65w3.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2e7ykpu5.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp2e7ykpu5.__unittest_L21_C1() [0x427af1]\n??:? void tmp2e7ykpu5.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\nWrite a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n            \n*/\nlong vowels_count(string s) \n{\n    long count = 0;\n    foreach(c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmphtnzyd_h.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmphtnzyd_h.__unittest_L23_C1() [0x427af1]\n??:? void tmphtnzyd_h.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163961
    }
  ]
}
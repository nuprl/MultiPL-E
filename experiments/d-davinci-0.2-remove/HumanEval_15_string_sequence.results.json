{
  "language": "d",
  "name": "HumanEval_15_string_sequence",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0luogfnn.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0luogfnn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0luogfnn.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0luogfnn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= i.to!string;\n        if(i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmv1j914a.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmv1j914a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n        result ~= to!string(i);\n        if (i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb3zz1pn4.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3zz1pn4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppi3gvfxp.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi3gvfxp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9i7yo5i_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp9i7yo5i_.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9i7yo5i_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgz1g6uvi.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpgz1g6uvi.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgz1g6uvi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= i.to!string;\n        s ~= \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgmicjdxy.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmicjdxy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppi3gvfxp.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi3gvfxp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9i7yo5i_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp9i7yo5i_.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9i7yo5i_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= i.to!string;\n        if(i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmv1j914a.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmv1j914a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4n5hy0_3.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp4n5hy0_3.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4n5hy0_3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5igyi6he.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp5igyi6he.d(12): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5igyi6he.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwfg_nsee.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwfg_nsee.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0 .. n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr70lpjyl.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr70lpjyl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3ebr4vvs.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ebr4vvs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqi_uxxdy.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqi_uxxdy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpu_e8ztfo.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpu_e8ztfo.d(13): Error: no property `trim` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_e8ztfo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n  string s = \"\";\n  foreach(i; 0 .. n + 1)\n  {\n    s ~= i;\n    if(i < n)\n      s ~= \" \";\n  }\n  return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluhq0iiv.d(11): Error: cannot append type `long` to type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluhq0iiv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptimg9jdo.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptimg9jdo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s = s + to!string(i) + \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdjtrjsva.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdjtrjsva.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= i.to!string ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvoqr4b2r.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvoqr4b2r.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgz1g6uvi.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpgz1g6uvi.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgz1g6uvi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= i.to!string;\n        s ~= \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgmicjdxy.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmicjdxy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    auto result = new string;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i);\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp79hnyjq1.d(8): Error: new can only create structs, dynamic arrays or class objects, not `string`'s\n/tmp/tmp79hnyjq1.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp79hnyjq1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxudzhw01.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxudzhw01.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n        result ~= to!string(i);\n        if (i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb3zz1pn4.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3zz1pn4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++) \n    {\n        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9wluiqko.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp9wluiqko.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9wluiqko.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptu4n69sd.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmptu4n69sd.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptu4n69sd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= i.to!string;\n        if(i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmv1j914a.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmv1j914a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3ebr4vvs.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ebr4vvs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        s += to!string(i) + \" \";\n    }\n    return s.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg2ve2tg1.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpg2ve2tg1.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2ve2tg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppi3gvfxp.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi3gvfxp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmwgkv25p.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpmwgkv25p.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwgkv25p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string res = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        res += to!string(i);\n        if (i != n)\n            res += \" \";\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyr1t62e3.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpyr1t62e3.d(13): Error: slice `res` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyr1t62e3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpu_e8ztfo.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpu_e8ztfo.d(13): Error: no property `trim` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_e8ztfo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= i.to!string;\n        s ~= \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgmicjdxy.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmicjdxy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqaexqlki.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqaexqlki.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0luogfnn.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0luogfnn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0luogfnn.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0luogfnn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0 .. n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptorptmfi.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptorptmfi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= i.to!string;\n        if(i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps0e55082.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps0e55082.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxudzhw01.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxudzhw01.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += toString(i) + \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpziqgz16j.d(11): Error: undefined identifier `toString`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpziqgz16j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0 .. n + 1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppi3gvfxp.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi3gvfxp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmwgkv25p.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpmwgkv25p.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwgkv25p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0 .. n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr70lpjyl.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr70lpjyl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmwgkv25p.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpmwgkv25p.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmwgkv25p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i < n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpopx95viv.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpopx95viv.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpopx95viv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= i.to!string;\n        s ~= \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgmicjdxy.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmicjdxy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbsmejx6h.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsmejx6h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0luogfnn.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0luogfnn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpie6zkadl.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpie6zkadl.d(13): Error: slice `s` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpie6zkadl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9i7yo5i_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp9i7yo5i_.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9i7yo5i_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= i.to!string;\n        if(i != n)\n            result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmv1j914a.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmv1j914a.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= i.to!string;\n        result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptimg9jdo.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptimg9jdo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgz1g6uvi.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmpgz1g6uvi.d(13): Error: no property `trimRight` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgz1g6uvi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6blpvexe.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6blpvexe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        if (i != n)\n            result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ryjf8c_.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmp_ryjf8c_.d(13): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ryjf8c_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string s = \"\";\n    foreach(i; 0..n+1)\n    {\n        s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprnraxlvf.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnraxlvf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n        result += to!string(i);\n        result += \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphs5fbo3b.d(11): Error: template instance `to!string` template `to` is not defined\n/tmp/tmphs5fbo3b.d(12): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphs5fbo3b.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163051
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n            \n*/\nstring string_sequence(long n) \n{\n    string result;\n    foreach(i; 0..n+1)\n    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6rz8_640.d(11): Error: template instance `to!string` template `to` is not defined\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6rz8_640.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163050
    }
  ]
}
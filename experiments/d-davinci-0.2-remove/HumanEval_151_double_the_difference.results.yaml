language: d
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 != 0)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk59zkeu4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 1 == 0)\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkt1lg04q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 == 1)\n            {\n          \
    \      sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprlr_taj5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float f; lst)\n    {\n        if(f > 0 && f ==\
    \ cast(int)f)\n        {\n            if(f % 2 == 1)\n            {\n        \
    \        sum += f * f;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzi9sg7le.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ int(x))\n        {\n            if(x % 2 != 0)\n            {\n            \
    \    sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8okuxv9e.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp8okuxv9e.d(16): Error: found \'')\'' instead of statement\n/tmp/tmp8okuxv9e.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8okuxv9e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n > 0 && is(typeof(n)\
    \ == int))\n        {\n            if(n % 2 == 1)\n            {\n           \
    \     sum += n * n;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbftqz3q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ int(x))\n        {\n            if(x % 2 != 0)\n            {\n            \
    \    sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8okuxv9e.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp8okuxv9e.d(16): Error: found \'')\'' instead of statement\n/tmp/tmp8okuxv9e.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8okuxv9e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0)\n    \
    \    {\n            if(i % 2 != 0)\n            {\n                sum += pow(i,\
    \ 2);\n            }\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = double_the_difference;\n\n    assert(candidate([]) == 0L);\n   \
    \ assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1, 0.2, 0.3])\
    \ == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n    assert(candidate([-1.0,\
    \ -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3_dyyk6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 1 == 0)\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoo64glqh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpadjpz5x4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ (int)i)\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqmxu2er.d(16): Error: C style cast illegal, use cast(int)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppqmxu2er.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x < 0 || x !=\
    \ cast(int)x)\n            continue;\n        if(x % 2 == 1)\n            sum\
    \ += x * x;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphxd26nwh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyixgvmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjdxwytns.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 != 0)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsovmf6rw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcmdfvp82.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpcmdfvp82.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpcmdfvp82.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcmdfvp82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && (int)i\
    \ == i)\n        {\n            if(i % 2 != 0)\n            {\n              \
    \  sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0nqfi1bv.d(16): Error: C style cast illegal, use cast(int)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0nqfi1bv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 != 0)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsovmf6rw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x % 2 != 0)\n\
    \        {\n            sum += x * x;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn7qjt4b6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n > 0 && is(typeof(n)\
    \ == int))\n        {\n            if(n % 2 == 1)\n            {\n           \
    \     sum += n * n;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbftqz3q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i < 0)\n    \
    \        continue;\n        if(i % 2 == 0)\n            continue;\n        sum\
    \ += i * i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpopdwwbfg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_8h4ynp0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 2 == 1)\n        {\n            sum += pow(i, 2);\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97sfcyvh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == int(num))\n        {\n            if(num % 2 != 0)\n            {\n \
    \               sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1td745ei.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp1td745ei.d(16): Error: found \'')\'' instead of statement\n/tmp/tmp1td745ei.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1td745ei.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += pow(num, 2);\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0dhb1cn0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quhb90m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcmdfvp82.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpcmdfvp82.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpcmdfvp82.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcmdfvp82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(isOdd(x))\n \
    \       {\n            sum += x*x;\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7d_b67e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(isOdd(i))\n \
    \       {\n            sum += i*i;\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrvd7ffg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 != 0)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsovmf6rw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == cast(int)num)\n        {\n            if(num % 2 != 0)\n            {\n\
    \                sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_cyvp7fy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i < 0)\n    \
    \        continue;\n        if(i % 2 == 0)\n            continue;\n        sum\
    \ += i * i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpopdwwbfg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 == 1)\n            {\n          \
    \      sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprlr_taj5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == cast(int)num)\n        {\n            if(num % 2 == 1)\n            {\n\
    \                sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tea1ba1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyixgvmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 == 1)\n            {\n          \
    \      sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndaoyzjh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n > 0 && is(typeof(n)\
    \ == int))\n        {\n            if(n % 2 == 1)\n            {\n           \
    \     sum += n * n;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbftqz3q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quhb90m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 != 0)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpel3m51zr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n < 0 || n !=\
    \ int(n))\n            continue;\n        if(n % 2 == 1)\n            sum += n*n;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_tvcojyd.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp_tvcojyd.d(16): Error: found \'')\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_tvcojyd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quhb90m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == float))\n        {\n            if(x % 2 == 1)\n            {\n         \
    \       sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxt_7_rag.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 2 == 1)\n        {\n            sum += i * i;\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6gawt7r9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 != 0)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsovmf6rw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quhb90m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 != 0)\n            {\n        \
    \        sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplked6yfm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long result = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i\
    \ == int(i))\n        {\n            if(i % 2 == 1)\n            {\n         \
    \       result += i * i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplaq_bd3h.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmplaq_bd3h.d(16): Error: found \'')\'' instead of statement\n/tmp/tmplaq_bd3h.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplaq_bd3h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpowvskqzb.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpowvskqzb.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpowvskqzb.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowvskqzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyixgvmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float item; lst)\n    {\n        if(item > 0 &&\
    \ is(typeof(item) == int))\n        {\n            if(item % 2 != 0)\n       \
    \     {\n                sum += pow(item, 2);\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp27szqyxi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ (int)i)\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprhhs1z8h.d(16): Error: C style cast illegal, use cast(int)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhhs1z8h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 != 0)\n            {\n          \
    \      sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcfxnnh8v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 != 0)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsix3k03a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpowvskqzb.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpowvskqzb.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpowvskqzb.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowvskqzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpadjpz5x4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 != 0)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfnrgmcsw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpadjpz5x4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == cast(int)num)\n        {\n            if(num % 2 == 1)\n            {\n\
    \                sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tea1ba1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpadjpz5x4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i%2 != 0)\n \
    \       {\n            sum += pow(i,2);\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp30fz373g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += pow(num, 2);\n            }\n        }\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0dhb1cn0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n > 0 && n %\
    \ 1 == 0)\n        {\n            if(n % 2 == 1)\n            {\n            \
    \    sum += n * n;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj6wkdo3r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpadjpz5x4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == (int)num)\n        {\n            if(num % 2 != 0)\n            {\n \
    \               sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0rxik1k9.d(16): Error: C style cast illegal, use cast(int)num\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0rxik1k9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 1 == 0)\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkt1lg04q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == (int)num)\n        {\n            if(num % 2 != 0)\n            {\n \
    \               sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0rxik1k9.d(16): Error: C style cast illegal, use cast(int)num\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0rxik1k9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i*i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzm7x484w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long result = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i\
    \ == cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n     \
    \           result += i * i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplrjj_byc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyixgvmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcmdfvp82.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpcmdfvp82.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpcmdfvp82.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcmdfvp82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n > 0 && n ==\
    \ cast(int)n)\n        {\n            if(n % 2 == 1)\n            {\n        \
    \        sum += pow(n, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hcupqw6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 != 0)\n            {\n          \
    \      sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcfxnnh8v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjdxwytns.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i < 0)\n    \
    \        continue;\n        if(i != int(i))\n            continue;\n        if(i\
    \ % 2 == 0)\n            continue;\n        sum += pow(i, 2);\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt6ejsgdj.d(18): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpt6ejsgdj.d(18): Error: found \'')\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt6ejsgdj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ (int)x)\n        {\n            if(x % 2 == 1)\n            {\n            \
    \    sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqabzpfdw.d(16): Error: C style cast illegal, use cast(int)x\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqabzpfdw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiivm6aqu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 != 0)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsovmf6rw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float n; lst)\n    {\n        if(n > 0 && n ==\
    \ cast(int)n)\n        {\n            if(n % 2 == 1)\n            {\n        \
    \        sum += pow(n, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hcupqw6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += pow(i, 2);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcux1y5bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcmdfvp82.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpcmdfvp82.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpcmdfvp82.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcmdfvp82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 != 0)\n            {\n        \
    \        sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplked6yfm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(isOdd(x))\n \
    \       {\n            sum += x*x;\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7d_b67e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num % 1 == 0)\n        {\n            if(num % 2 == 1)\n            {\n    \
    \            sum += num * num;\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx7pippz5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyixgvmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_8h4ynp0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 != 0)\n\
    \        {\n            sum += pow(i, 2);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqg15xt2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += pow(i, 2);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcux1y5bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += pow(i, 2);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcux1y5bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quhb90m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i*i;\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4x3qwcz5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ trunc(x))\n        {\n            if(x % 2 == 1)\n            {\n          \
    \      sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp67a6w7pa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjsd0vo8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 == 1)\n            {\n          \
    \      sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndaoyzjh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 != 0)\n            {\n           \
    \     sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_quhb90m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 2 == 1)\n        {\n            sum += pow(i, 2);\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97sfcyvh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjdxwytns.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 != 0)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk3g7jb56.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpk3g7jb56.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpk3g7jb56.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3g7jb56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && (int)i\
    \ == i)\n        {\n            if(i % 2 != 0)\n            {\n              \
    \  sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3_ujo2v3.d(16): Error: C style cast illegal, use cast(int)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_ujo2v3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i*i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv1l8557z.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpv1l8557z.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpv1l8557z.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv1l8557z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == int))\n        {\n            if(x % 2 == 1)\n            {\n           \
    \     sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie1lp8q_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i*i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv1l8557z.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpv1l8557z.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpv1l8557z.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv1l8557z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += pow(i, 2);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcux1y5bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjsd0vo8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 != 0)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtrx_uw0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 != 0)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsix3k03a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += pow(i, 2);\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpowvskqzb.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpowvskqzb.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpowvskqzb.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowvskqzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(isOdd(x))\n \
    \       {\n            sum += pow(x,2);\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpldhy2u1i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i %\
    \ 2 == 1)\n        {\n            sum += pow(i, 2);\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97sfcyvh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && is(typeof(x)\
    \ == float))\n        {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptuvzezy_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ trunc(i))\n        {\n            if(i % 2 == 1)\n            {\n          \
    \      sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndaoyzjh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && is(typeof(i)\
    \ == int))\n        {\n            if(i % 2 == 1)\n            {\n           \
    \     sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38wn7gog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ num == cast(int)num)\n        {\n            if(num % 2 == 1)\n            {\n\
    \                sum += num * num;\n            }\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8tea1ba1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ cast(int)i)\n        {\n            if(i % 2 == 1)\n            {\n        \
    \        sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ajviakx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnex0gtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += pow(i, 2);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcux1y5bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += pow(x, 2);\n            }\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfxv7l5qa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        if(x > 0 && x ==\
    \ cast(int)x)\n        {\n            if(x % 2 == 1)\n            {\n        \
    \        sum += x * x;\n            }\n        }\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = double_the_difference;\n\n    assert(candidate([])\
    \ == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpadjpz5x4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i % 2 == 1)\n\
    \        {\n            sum += i*i;\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4x3qwcz5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ (int)i)\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprhhs1z8h.d(16): Error: C style cast illegal, use cast(int)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhhs1z8h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float i; lst)\n    {\n        if(i > 0 && i ==\
    \ int(i))\n        {\n            if(i % 2 == 1)\n            {\n            \
    \    sum += i * i;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = double_the_difference;\n\n    assert(candidate([]) ==\
    \ 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n    assert(candidate([0.1,\
    \ 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0, -30.0]) == 0L);\n  \
    \  assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2, 3.0,\
    \ 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgcvqlge.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsgcvqlge.d(16): Error: found \'')\'' instead of statement\n/tmp/tmpsgcvqlge.d(23):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgcvqlge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a list of numbers, return the sum of\
    \ squares of the numbers\n    in the list that are odd. Ignore numbers that are\
    \ negative or not integers.\n    \n                   \n    If the input list\
    \ is empty, return 0.\n    \n*/\nlong double_the_difference(float[] lst) \n{\n\
    \    long sum = 0;\n    foreach(float num; lst)\n    {\n        if(num > 0 &&\
    \ is(typeof(num) == int))\n        {\n            if(num % 2 == 1)\n         \
    \   {\n                sum += num * num;\n            }\n        }\n    }\n  \
    \  return sum;\n}\nunittest\n{\n    alias candidate = double_the_difference;\n\
    \n    assert(candidate([]) == 0L);\n    assert(candidate([5.0, 4.0]) == 25L);\n\
    \    assert(candidate([0.1, 0.2, 0.3]) == 0L);\n    assert(candidate([-10.0, -20.0,\
    \ -30.0]) == 0L);\n    assert(candidate([-1.0, -2.0, 8.0]) == 0L);\n    assert(candidate([0.2,\
    \ 3.0, 5.0]) == 34L);\n    assert(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0]) == 165L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyixgvmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977919

language: d
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxqz9iu3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpyxqz9iu3.__unittest_L39_C1() [0x427e44]

    ??:? void tmpyxqz9iu3.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n        for (long j = i + 1; j < n;\
    \ j++)\n            for (long k = j + 1; k < n; k++)\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpohvtegyi.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmpohvtegyi.__unittest_L29_C1() [0x427e40]

    ??:? void tmpohvtegyi.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long max_triples = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    max_triples++;\n                }\n  \
    \          }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias\
    \ candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvjdpz7bx.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmpvjdpz7bx.__unittest_L39_C1() [0x427e40]

    ??:? void tmpvjdpz7bx.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1g01xxek.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp1g01xxek.__unittest_L39_C1() [0x427e44]

    ??:? void tmp1g01xxek.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    for (int i\
    \ = 1; i < n - 1; i++) \n    {\n        long a = i * i - i + 1;\n        for (int\
    \ j = i + 1; j < n; j++) \n        {\n            long b = j * j - j + 1;\n  \
    \          for (int k = j + 1; k <= n; k++) \n            {\n                long\
    \ c = k * k - k + 1;\n                if ((a + b + c) % 3 == 0) \n           \
    \     {\n                    res++;\n                }\n            }\n      \
    \  }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    \n    long\
    \ count = 0;\n    for (long i = 0; i < n; i++)\n        for (long j = i + 1; j\
    \ < n; j++)\n            for (long k = j + 1; k < n; k++)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    \n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp20wwgbc_.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp20wwgbc_.__unittest_L31_C1() [0x427e40]

    ??:? void tmp20wwgbc_.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++) \n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptz8co3zk.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmptz8co3zk.__unittest_L39_C1() [0x427e40]

    ??:? void tmptz8co3zk.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(int i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for(int i = 0; i < n; i++)\n    {\n        for(int j =\
    \ i + 1; j < n; j++)\n        {\n            for(int k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp62ba6x3d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42812d]

    ??:? void tmp62ba6x3d.__unittest_L39_C1() [0x427e34]

    ??:? void tmp62ba6x3d.__modtest() [0x427eac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c12b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afbe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430249]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af95]

    ??:? runModuleUnitTests [0x42bf01]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (int i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (int i = 0; i < n; i++)\n    {\n        for (int\
    \ j = i + 1; j < n; j++)\n        {\n            for (int k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxa0pywh6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42812d]

    ??:? void tmpxa0pywh6.__unittest_L39_C1() [0x427e34]

    ??:? void tmpxa0pywh6.__modtest() [0x427eac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c12b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afbe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430249]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af95]

    ??:? runModuleUnitTests [0x42bf01]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long res = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        if (a[i] % 3 == 0)\n        {\n            res += (n - i -\
    \ 1) * (n - i - 2) / 2;\n        }\n    }\n    return res;\n}\nunittest\n{\n \
    \   alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n \
    \   assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprs388m4f.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x4280b5]

    ??:? void tmprs388m4f.__unittest_L30_C1() [0x427de1]

    ??:? void tmprs388m4f.__modtest() [0x427e38]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c0b3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af46]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430680]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43015d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af1d]

    ??:? runModuleUnitTests [0x42be89]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428578]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(int i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for(int i = 0; i < n; i++)\n    {\n        for(int j =\
    \ i + 1; j < n; j++)\n        {\n            for(int k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp62ba6x3d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42812d]

    ??:? void tmp62ba6x3d.__unittest_L39_C1() [0x427e34]

    ??:? void tmp62ba6x3d.__modtest() [0x427eac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c12b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afbe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430249]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af95]

    ??:? runModuleUnitTests [0x42bf01]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n - 2)\n    {\n        foreach(j; i + 1 .. n\
    \ - 1)\n        {\n            foreach(k; j + 1 .. n)\n            {\n       \
    \         if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n             \
    \       result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfnm33p42.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42818d]

    ??:? void tmpfnm33p42.__unittest_L39_C1() [0x427e94]

    ??:? void tmpfnm33p42.__modtest() [0x427f0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c18b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b01e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430758]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430235]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff5]

    ??:? runModuleUnitTests [0x42bf61]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428650]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n        for (long j = i + 1; j < n;\
    \ j++)\n            for (long k = j + 1; k < n; k++)\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpohvtegyi.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmpohvtegyi.__unittest_L29_C1() [0x427e40]

    ??:? void tmpohvtegyi.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    if (n <\
    \ 3)\n        return result;\n    long[] a = new long[n];\n    foreach (i; 0 ..\
    \ n)\n        a[i] = i * i - i + 1;\n    foreach (i; 0 .. n - 2)\n        foreach\
    \ (j; i + 1 .. n - 1)\n            foreach (k; j + 1 .. n)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    result++;\n    return result;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdn4hggao.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281a5]

    ??:? void tmpdn4hggao.__unittest_L31_C1() [0x427eac]

    ??:? void tmpdn4hggao.__modtest() [0x427f24]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1a3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b036]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302c1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430770]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43024d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b00d]

    ??:? runModuleUnitTests [0x42bf79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428668]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if(a[i] + a[j] + a[k] % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpup7ohk2t.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42817d]

    ??:? void tmpup7ohk2t.__unittest_L39_C1() [0x427e88]

    ??:? void tmpup7ohk2t.__modtest() [0x427f00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c17b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b00e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430299]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430748]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430225]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]

    ??:? runModuleUnitTests [0x42bf51]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428640]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1g01xxek.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp1g01xxek.__unittest_L39_C1() [0x427e44]

    ??:? void tmp1g01xxek.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    long result = 0;\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4htm_6hv.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp4htm_6hv.__unittest_L39_C1() [0x427e40]

    ??:? void tmp4htm_6hv.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long[] b = new long[n];\n    long[] c = new long[n];\n    long[] d = new long[n];\n\
    \    long[] e = new long[n];\n    long[] f = new long[n];\n    long[] g = new\
    \ long[n];\n    long[] h = new long[n];\n    long[] i = new long[n];\n    long[]\
    \ j = new long[n];\n    long[] k = new long[n];\n    long[] l = new long[n];\n\
    \    long[] m = new long[n];\n    long[] o = new long[n];\n    long[] p = new\
    \ long[n];\n    long[] q = new long[n];\n    long[] r = new long[n];\n    long[]\
    \ s = new long[n];\n    long[] t = new long[n];\n    long[] u = new long[n];\n\
    \    long[] v = new long[n];\n    long[] w = new long[n];\n    long[] x = new\
    \ long[n];\n    long[] y = new long[n];\n    long[] z = new long[n];\n    long[]\
    \ aa = new long[n];\n    long[] bb = new long[n];\n    long[] cc = new long[n];\n\
    \    long[] dd = new long[n];\n    long[] ee = new long[n];\n    long[] ff = new\
    \ long[n];\n    long[] gg = new long[n];\n    long[] hh = new long[n];\n    long[]\
    \ ii = new long[n];\n    long[] jj = new long[n];\n    long[] kk = new long[n];\n\
    \    long[] ll = new long[n];\n    long[] mm = new long[n];\n    long[] oo = new\
    \ long[n];\n    long[] pp = new long[n];\n    long[] qq = new long[n];\n    long[]\
    \ rr = new long[n];\n    long[] ss = new long[n];\n    long[] tt = new long[n];\n\
    \    long[] uu = new long[n];\n    long\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbe3d5nwl.d(64): Error: no identifier for declarator `long`

    /tmp/tmpbe3d5nwl.d(64): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe3d5nwl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long result = 0;\n  \
    \  foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         result++;\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkjpmxqab.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpkjpmxqab.__unittest_L29_C1() [0x427e7c]

    ??:? void tmpkjpmxqab.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long[] b = new long[n];\n    long[] c = new long[n];\n    long[] d = new long[n];\n\
    \    long[] e = new long[n];\n    long[] f = new long[n];\n    long[] g = new\
    \ long[n];\n    long[] h = new long[n];\n    long[] i = new long[n];\n    long[]\
    \ j = new long[n];\n    long[] k = new long[n];\n    long[] l = new long[n];\n\
    \    long[] m = new long[n];\n    long[] o = new long[n];\n    long[] p = new\
    \ long[n];\n    long[] q = new long[n];\n    long[] r = new long[n];\n    long[]\
    \ s = new long[n];\n    long[] t = new long[n];\n    long[] u = new long[n];\n\
    \    long[] v = new long[n];\n    long[] w = new long[n];\n    long[] x = new\
    \ long[n];\n    long[] y = new long[n];\n    long[] z = new long[n];\n    long[]\
    \ aa = new long[n];\n    long[] bb = new long[n];\n    long[] cc = new long[n];\n\
    \    long[] dd = new long[n];\n    long[] ee = new long[n];\n    long[] ff = new\
    \ long[n];\n    long[] gg = new long[n];\n    long[] hh = new long[n];\n    long[]\
    \ ii = new long[n];\n    long[] jj = new long[n];\n    long[] kk = new long[n];\n\
    \    long[] ll = new long[n];\n    long[] mm = new long[n];\n    long[] oo = new\
    \ long[n];\n    long[] pp = new long[n];\n    long[] qq = new long[n];\n    long[]\
    \ rr = new long[n];\n    long[] ss = new long[n];\n    long[] tt = new long[n];\n\
    \    long[] uu = new long[n];\n    long\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbe3d5nwl.d(64): Error: no identifier for declarator `long`

    /tmp/tmpbe3d5nwl.d(64): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe3d5nwl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long result = 0;\n  \
    \  foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         result++;\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkjpmxqab.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpkjpmxqab.__unittest_L29_C1() [0x427e7c]

    ??:? void tmpkjpmxqab.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long ans = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    ans++;\n                }\n            }\n    \
    \    }\n    }\n    return ans;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0fwa6a27.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp0fwa6a27.__unittest_L39_C1() [0x427e40]

    ??:? void tmp0fwa6a27.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxqz9iu3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpyxqz9iu3.__unittest_L39_C1() [0x427e44]

    ??:? void tmpyxqz9iu3.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n        for (long j = i + 1; j < n;\
    \ j++)\n            for (long k = j + 1; k < n; k++)\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpohvtegyi.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmpohvtegyi.__unittest_L29_C1() [0x427e40]

    ??:? void tmpohvtegyi.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long res = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        for (long j = i + 1; j < n; j++)\n        {\n            for\
    \ (long k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                {\n                    res++;\n         \
    \       }\n            }\n        }\n    }\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcedfwk8f.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x42811d]

    ??:? void tmpcedfwk8f.__unittest_L36_C1() [0x427e49]

    ??:? void tmpcedfwk8f.__modtest() [0x427ea0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c11b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430239]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306e8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301c5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af85]

    ??:? runModuleUnitTests [0x42bef1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285e0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long sum = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \        sum += a[i];\n    }\n    if(sum % 3 != 0)\n        return 0;\n    long[]\
    \ b = new long[n];\n    long[] c = new long[n];\n    foreach(i; 0 .. n)\n    {\n\
    \        b[i] = a[i] % 3;\n        c[i] = b[i] == 0 ? 0 : 3 - b[i];\n    }\n \
    \   long[] d = new long[n];\n    long[] e = new long[n];\n    foreach(i; 0 ..\
    \ n)\n    {\n        d[i] = c[i] == 0 ? 0 : 1;\n        e[i] = b[i] == 0 ? 0 :\
    \ 1;\n    }\n    long[] f = new long[n];\n    long[] g = new long[n];\n    foreach(i;\
    \ 0 .. n)\n    {\n        f[i] = i == 0 ? d[i] : f[i - 1] + d[i];\n        g[i]\
    \ = i == 0 ? e[i] : g[i - 1] + e[i];\n    }\n    long ans = 0;\n    foreach(i;\
    \ 0 .. n)\n    {\n        if(b[i] == 0)\n            ans += f[i] * (f[i] - 1)\
    \ / 2;\n        else\n            ans += g[i] * (g[i] - 1) / 2;\n    }\n    return\
    \ ans;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7qvrpan7.d(62): unittest failure

    ----------------

    ??:? _d_unittestp [0x4286d5]

    ??:? void tmp7qvrpan7.__unittest_L58_C1() [0x4283e0]

    ??:? void tmp7qvrpan7.__modtest() [0x428458]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b566]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307f1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ca0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43077d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b53d]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428b98]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long sum = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return\
    \ 0;\n    long[] dp = new long[n];\n    dp[0] = 1;\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        dp[i] = dp[i - 1];\n        if (a[i] % 3 == 0)\n      \
    \      dp[i]++;\n    }\n    long res = 0;\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            if ((a[i]\
    \ + a[j]) % 3 == 0)\n            {\n                long k = j + 1;\n        \
    \        while (k < n && a[k] < a[i] + a[j])\n                    k++;\n     \
    \           if (k < n && a[k] == a[i] + a[j])\n                    res += dp[k\
    \ - 1] - dp[j];\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp60mq6u2c.d(56): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmp60mq6u2c.__unittest_L52_C1() [0x4280ac]

    ??:? void tmp60mq6u2c.__modtest() [0x428124]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3a3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b236]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4304c1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430970]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43044d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b20d]

    ??:? runModuleUnitTests [0x42c179]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428868]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long res = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        if (a[i] % 3 == 0)\n        {\n            res++;\n      \
    \  }\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j = i\
    \ + 1; j < n; j++)\n        {\n            if ((a[i] + a[j]) % 3 == 0)\n     \
    \       {\n                res += n - j - 1;\n                break;\n       \
    \     }\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8iqejs_t.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp8iqejs_t.__unittest_L41_C1() [0x427e69]

    ??:? void tmp8iqejs_t.__modtest() [0x427ec0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    foreach(i;\
    \ 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                    res++;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n \
    \   assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyd8qrtxc.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpyd8qrtxc.__unittest_L29_C1() [0x427e8c]

    ??:? void tmpyd8qrtxc.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long res = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        for (long j = i + 1; j < n; j++)\n        {\n            for\
    \ (long k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                {\n                    res++;\n         \
    \       }\n            }\n        }\n    }\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcedfwk8f.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x42811d]

    ??:? void tmpcedfwk8f.__unittest_L36_C1() [0x427e49]

    ??:? void tmpcedfwk8f.__modtest() [0x427ea0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c11b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430239]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306e8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301c5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af85]

    ??:? runModuleUnitTests [0x42bef1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285e0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n - 2; i++)\n        for (long j = i + 1; j <\
    \ n - 1; j++)\n            for (long k = j + 1; k < n; k++)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi5_26knc.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpi5_26knc.__unittest_L29_C1() [0x427e44]

    ??:? void tmpi5_26knc.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5oju6dii.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp5oju6dii.__unittest_L39_C1() [0x427e80]

    ??:? void tmp5oju6dii.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxqz9iu3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpyxqz9iu3.__unittest_L39_C1() [0x427e44]

    ??:? void tmpyxqz9iu3.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n - 2)\n        foreach(j; i + 1 .. n - 1)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoy8dmtom.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x42817d]

    ??:? void tmpoy8dmtom.__unittest_L29_C1() [0x427e84]

    ??:? void tmpoy8dmtom.__modtest() [0x427efc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c17b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b00e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430299]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430748]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430225]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]

    ??:? runModuleUnitTests [0x42bf51]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428640]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long sum = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return\
    \ 0;\n    long[] dp = new long[sum / 3 + 1];\n    dp[0] = 1;\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = sum / 3; j >= a[i]; j--)\n  \
    \      {\n            dp[j] += dp[j - a[i]];\n        }\n    }\n    return dp[sum\
    \ / 3];\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi3836qtw.d(42): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281f5]

    ??:? void tmpi3836qtw.__unittest_L38_C1() [0x427f00]

    ??:? void tmpi3836qtw.__modtest() [0x427f78]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1f3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b086]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430311]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4307c0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43029d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b05d]

    ??:? runModuleUnitTests [0x42bfc9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286b8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcwava8qb.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmpcwava8qb.__unittest_L39_C1() [0x427e40]

    ??:? void tmpcwava8qb.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    foreach(i;\
    \ 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                    res++;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n \
    \   assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyd8qrtxc.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpyd8qrtxc.__unittest_L29_C1() [0x427e8c]

    ??:? void tmpyd8qrtxc.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(int i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for(int i = 0; i < n; i++)\n    {\n        for(int j =\
    \ i + 1; j < n; j++)\n        {\n            for(int k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp62ba6x3d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42812d]

    ??:? void tmp62ba6x3d.__unittest_L39_C1() [0x427e34]

    ??:? void tmp62ba6x3d.__modtest() [0x427eac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c12b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afbe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430249]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af95]

    ??:? runModuleUnitTests [0x42bf01]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n - 2; i++)\n    {\n        for\
    \ (long j = i + 1; j < n - 1; j++)\n        {\n            for (long k = j + 1;\
    \ k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                {\n                    result++;\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptq8q5fj4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmptq8q5fj4.__unittest_L39_C1() [0x427e48]

    ??:? void tmptq8q5fj4.__modtest() [0x427ec0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf_ht_7ev.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpf_ht_7ev.__unittest_L39_C1() [0x427e44]

    ??:? void tmpf_ht_7ev.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxqz9iu3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpyxqz9iu3.__unittest_L39_C1() [0x427e44]

    ??:? void tmpyxqz9iu3.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n - 2)\n        foreach(j; i + 1 .. n - 1)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoy8dmtom.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x42817d]

    ??:? void tmpoy8dmtom.__unittest_L29_C1() [0x427e84]

    ??:? void tmpoy8dmtom.__modtest() [0x427efc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c17b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b00e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430299]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430748]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430225]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]

    ??:? runModuleUnitTests [0x42bf51]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428640]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxqz9iu3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpyxqz9iu3.__unittest_L39_C1() [0x427e44]

    ??:? void tmpyxqz9iu3.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long result = 0;\n  \
    \  foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         result++;\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkjpmxqab.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpkjpmxqab.__unittest_L29_C1() [0x427e7c]

    ??:? void tmpkjpmxqab.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxqz9iu3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpyxqz9iu3.__unittest_L39_C1() [0x427e44]

    ??:? void tmpyxqz9iu3.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long res = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n  \
    \              }\n            }\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfo07qai3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpfo07qai3.__unittest_L39_C1() [0x427e80]

    ??:? void tmpfo07qai3.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwu6f5_b9.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmpwu6f5_b9.__unittest_L39_C1() [0x427e80]

    ??:? void tmpwu6f5_b9.__modtest() [0x427ef8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n - 2; i++)\n        for (long j = i + 1; j <\
    \ n - 1; j++)\n            for (long k = j + 1; k < n; k++)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi5_26knc.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpi5_26knc.__unittest_L29_C1() [0x427e44]

    ??:? void tmpi5_26knc.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n - 2; i++)\n        for (long j = i + 1; j <\
    \ n - 1; j++)\n            for (long k = j + 1; k < n; k++)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi5_26knc.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpi5_26knc.__unittest_L29_C1() [0x427e44]

    ??:? void tmpi5_26knc.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long sum = 0;\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    if (sum % 3 !=\
    \ 0)\n        return 0;\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                    count++;\n            }\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp71xktx1k.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x42817d]

    ??:? void tmp71xktx1k.__unittest_L41_C1() [0x427e88]

    ??:? void tmp71xktx1k.__modtest() [0x427f00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c17b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b00e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430299]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430748]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430225]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]

    ??:? runModuleUnitTests [0x42bf51]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428640]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    long count = 0;\n    for (long i = 0; i < n - 2; i++) \n    {\n        for\
    \ (long j = i + 1; j < n - 1; j++) \n        {\n            for (long k = j +\
    \ 1; k < n; k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3\
    \ == 0) \n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjpu9z74o.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmpjpu9z74o.__unittest_L39_C1() [0x427e44]

    ??:? void tmpjpu9z74o.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n - 2)\n    {\n        foreach(j; i + 1 .. n\
    \ - 1)\n        {\n            foreach(k; j + 1 .. n)\n            {\n       \
    \         if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n             \
    \       result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfnm33p42.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42818d]

    ??:? void tmpfnm33p42.__unittest_L39_C1() [0x427e94]

    ??:? void tmpfnm33p42.__modtest() [0x427f0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c18b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b01e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430758]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430235]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff5]

    ??:? runModuleUnitTests [0x42bf61]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428650]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 ..\
    \ n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n         \
    \       if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpl76q7f0l.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428165]

    ??:? void tmpl76q7f0l.__unittest_L39_C1() [0x427e6c]

    ??:? void tmpl76q7f0l.__modtest() [0x427ee4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c163]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aff6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430281]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430730]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43020d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afcd]

    ??:? runModuleUnitTests [0x42bf39]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428628]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L)\
    \ == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1g01xxek.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp1g01xxek.__unittest_L39_C1() [0x427e44]

    ??:? void tmp1g01xxek.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long sum = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i\
    \ - i + 1;\n        sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return\
    \ 0;\n    long[] dp = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        if (a[i] % 3 == 0)\n            dp[i] = 1;\n    }\n    for (long i =\
    \ 1; i < n; i++)\n    {\n        dp[i] += dp[i - 1];\n    }\n    long result =\
    \ 0;\n    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j\
    \ < n; j++)\n        {\n            if ((a[i] + a[j]) % 3 == 0)\n            {\n\
    \                result += dp[j - 1] - dp[i];\n            }\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n\
    \    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptmhwbotp.d(54): unittest failure

    ----------------

    ??:? _d_unittestp [0x42829d]

    ??:? void tmptmhwbotp.__unittest_L50_C1() [0x427fa4]

    ??:? void tmptmhwbotp.__modtest() [0x42801c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c29b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b12e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303b9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430868]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430345]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b105]

    ??:? runModuleUnitTests [0x42c071]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428760]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp517id20d.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp517id20d.__unittest_L39_C1() [0x427e40]

    ??:? void tmp517id20d.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    \n    long count = 0;\n\
    \    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2ufr96l1.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp2ufr96l1.__unittest_L30_C1() [0x427e7c]

    ??:? void tmp2ufr96l1.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n\
    \    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L)\
    \ == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcoxdbss6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpcoxdbss6.__unittest_L39_C1() [0x427e8c]

    ??:? void tmpcoxdbss6.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long[] b = new long[n];\n    long[] c = new long[n];\n    long[] d = new long[n];\n\
    \    long[] e = new long[n];\n    long[] f = new long[n];\n    long[] g = new\
    \ long[n];\n    long[] h = new long[n];\n    long[] i = new long[n];\n    long[]\
    \ j = new long[n];\n    long[] k = new long[n];\n    long[] l = new long[n];\n\
    \    long[] m = new long[n];\n    long[] o = new long[n];\n    long[] p = new\
    \ long[n];\n    long[] q = new long[n];\n    long[] r = new long[n];\n    long[]\
    \ s = new long[n];\n    long[] t = new long[n];\n    long[] u = new long[n];\n\
    \    long[] v = new long[n];\n    long[] w = new long[n];\n    long[] x = new\
    \ long[n];\n    long[] y = new long[n];\n    long[] z = new long[n];\n    long[]\
    \ aa = new long[n];\n    long[] bb = new long[n];\n    long[] cc = new long[n];\n\
    \    long[] dd = new long[n];\n    long[] ee = new long[n];\n    long[] ff = new\
    \ long[n];\n    long[] gg = new long[n];\n    long[] hh = new long[n];\n    long[]\
    \ ii = new long[n];\n    long[] jj = new long[n];\n    long[] kk = new long[n];\n\
    \    long[] ll = new long[n];\n    long[] mm = new long[n];\n    long[] oo = new\
    \ long[n];\n    long[] pp = new long[n];\n    long[] qq = new long[n];\n    long[]\
    \ rr = new long[n];\n    long[] ss = new long[n];\n    long[] tt = new long[n];\n\
    \    long[] uu = new long[n];\n    long\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbe3d5nwl.d(64): Error: no identifier for declarator `long`

    /tmp/tmpbe3d5nwl.d(64): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe3d5nwl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp14g1eo94.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42813d]

    ??:? void tmp14g1eo94.__unittest_L39_C1() [0x427e44]

    ??:? void tmp14g1eo94.__modtest() [0x427ebc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c13b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430259]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430708]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa5]

    ??:? runModuleUnitTests [0x42bf11]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428600]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cjxddeq.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428175]

    ??:? void tmp9cjxddeq.__unittest_L29_C1() [0x427e7c]

    ??:? void tmp9cjxddeq.__modtest() [0x427ef4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c173]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b006]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430291]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430740]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43021d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]

    ??:? runModuleUnitTests [0x42bf49]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428638]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long res = 0;\n    long[] a =\
    \ new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    foreach(i;\
    \ 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                    res++;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\n \
    \   assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyd8qrtxc.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428185]

    ??:? void tmpyd8qrtxc.__unittest_L29_C1() [0x427e8c]

    ??:? void tmpyd8qrtxc.__modtest() [0x427f04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c183]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b016]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302a1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430750]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43022d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]

    ??:? runModuleUnitTests [0x42bf59]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428648]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = get_max_triples;\n\
    \n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L)\
    \ == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8go9cd5b.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmp8go9cd5b.__unittest_L39_C1() [0x427e40]

    ??:? void tmp8go9cd5b.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n        For each\
    \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n\n    Example :\n            Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \n*/\nlong get_max_triples(long n) \n{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n        for (long j = i + 1; j < n;\
    \ j++)\n            for (long k = j + 1; k < n; k++)\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
    \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
    \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpohvtegyi.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x428135]

    ??:? void tmpohvtegyi.__unittest_L29_C1() [0x427e40]

    ??:? void tmpohvtegyi.__modtest() [0x427eb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c133]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afc6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430251]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430700]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af9d]

    ??:? runModuleUnitTests [0x42bf09]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164103

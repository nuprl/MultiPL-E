language: d
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    foreach(a; 0 .. n)\n    {\n        foreach(b;\
    \ 0 .. n)\n        {\n            foreach(c; 0 .. n)\n            {\n        \
    \        foreach(d; 0 .. n)\n                {\n                    if(a + b +\
    \ c + d == n && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0)\n      \
    \              {\n                        result = true;\n                   \
    \     break;\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq03wiun0.d(12): Error: variable `a` is shadowing variable `tmpq03wiun0.is_equal_to_sum_even.a`

    /tmp/tmpq03wiun0.d(14): Error: variable `b` is shadowing variable `tmpq03wiun0.is_equal_to_sum_even.b`

    /tmp/tmpq03wiun0.d(16): Error: variable `c` is shadowing variable `tmpq03wiun0.is_equal_to_sum_even.c`

    /tmp/tmpq03wiun0.d(18): Error: variable `d` is shadowing variable `tmpq03wiun0.is_equal_to_sum_even.d`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq03wiun0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Check if\
    \ n is even\n    if (n % 2 != 0)\n        return false;\n    \n    // Check if\
    \ n is divisible by 4\n    if (n % 4 != 0)\n        return false;\n    \n    //\
    \ Check if n is less than 8\n    if (n < 8)\n        return false;\n    \n   \
    \ // Check if n is divisible by 8\n    if (n % 8 == 0)\n        return true;\n\
    \    \n    // Check if n is divisible by 8\n    if (n % 8 != 0)\n        return\
    \ false;\n    \n    // Check if n is divisible by 8\n    if (n % 8 != 0)\n   \
    \     return false;\n    \n    // Check if n is divisible by 8\n    if (n % 8\
    \ != 0)\n        return false;\n    \n    // Check if n is divisible by 8\n  \
    \  if (n % 8 != 0)\n        return false;\n    \n    // Check if n is divisible\
    \ by 8\n    if (n % 8 != 0)\n        return false;\n    \n    // Check if n is\
    \ divisible by 8\n    if (n % 8 != 0)\n        return false;\n    \n    // Check\
    \ if n is divisible by 8\n    if (n % 8 != 0)\n        return false;\n    \n \
    \   // Check if n is divisible by 8\n    if (n % 8 != 0)\n        return false;\n\
    \    \n    // Check if n is divisible by 8\n    if (n % 8 != 0)\n        return\
    \ false;\n    \n    // Check if n is divisible by 8\n    if (n % 8 != 0)\n   \
    \     return false;\n    \n    // Check if n is divisible by 8\n    if (n % 8\
    \ != 0)\n        return false;\n    \n    // Check if n is divisible by 8\n  \
    \  if (n % 8 != 0)\n        return false;\n    \n    // Check if n is divisible\
    \ by 8\n    if (n % 8 != 0)\n        return false;\n    \n    // Check if n is\
    \ divisible by 8\n    if (n % 8 != 0)\n        return false;\n    \n    // Check\
    \ if n is divisible by 8\n\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa3hiav5z.d(84): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa3hiav5z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ == 2)\n        return false;\n    if (n == 4)\n        return true;\n    if\
    \ (n < 8)\n        return false;\n    long a = n / 4;\n    long b = n / 2;\n \
    \   long c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c + d;\n    while\
    \ (sum != n)\n    {\n        if (sum > n)\n        {\n            if (a > 2)\n\
    \            {\n                a -= 2;\n                sum -= 2;\n         \
    \   }\n            else if (b > 2)\n            {\n                b -= 2;\n \
    \               sum -= 2;\n            }\n            else if (c > 2)\n      \
    \      {\n                c -= 2;\n                sum -= 2;\n            }\n\
    \            else if (d > 2)\n            {\n                d -= 2;\n       \
    \         sum -= 2;\n            }\n            else\n                return false;\n\
    \        }\n        else\n        {\n            if (a < b)\n            {\n \
    \               a += 2;\n                sum += 2;\n            }\n          \
    \  else if (b < c)\n            {\n                b += 2;\n                sum\
    \ += 2;\n            }\n            else if (c < d)\n            {\n         \
    \       c += 2;\n                sum += 2;\n            }\n            else if\
    \ (d < n)\n            {\n                d += 2;\n                sum += 2;\n\
    \            }\n            else\n                return false;\n        }\n \
    \   }\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2o6lgn0n.d(84): unittest failure

    ----------------

    ??:? _d_unittestp [0x427f3d]

    ??:? void tmp2o6lgn0n.__unittest_L80_C1() [0x427bd2]

    ??:? void tmp2o6lgn0n.__modtest() [0x427cc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aaf6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430138]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fc15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aacd]

    ??:? runModuleUnitTests [0x42ba39]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42838c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int count =\
    \ 0;\n    for (int i = 2; i <= n; i += 2) \n    {\n        if (n % i == 0) \n\
    \        {\n            count++;\n        }\n    }\n    return count == 4;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfy0r0i26.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpfy0r0i26.__unittest_L20_C1() [0x427aaa]

    ??:? void tmpfy0r0i26.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    if(n%2!=0)\n        return false;\n    if(n<8)\n        return\
    \ false;\n    if(n==8)\n        return true;\n    if(n%4==0)\n        return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpu_nxy7ck.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpu_nxy7ck.__unittest_L21_C1() [0x427ad9]

    ??:? void tmpu_nxy7ck.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n\
    \    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n\
    \    long mmm = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long y\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq4sdfkk_.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpq4sdfkk_.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq4sdfkk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c + d;\n    while (sum\
    \ != n)\n    {\n        if (a == 0)\n            return false;\n        if (sum\
    \ > n)\n        {\n            a--;\n            b++;\n        }\n        else\n\
    \        {\n            a++;\n            b--;\n        }\n        sum = a + b\
    \ + c + d;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa833341o.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmpa833341o.__unittest_L39_C1() [0x427b3e]

    ??:? void tmpa833341o.__modtest() [0x427bec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb93]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa26]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430068]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9fd]

    ??:? runModuleUnitTests [0x42b969]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282bc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    if (n == 6)\n        return false;\n   \
    \ if (n == 8)\n        return true;\n    if (n == 10)\n        return false;\n\
    \    if (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n\
    \    if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_85gi_hv.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_85gi_hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long sum = 0;\n    bool\
    \ result = false;\n    for (i = 0; i <= n; i++)\n    {\n        for (j = 0; j\
    \ <= n; j++)\n        {\n            for (k = 0; k <= n; k++)\n            {\n\
    \                for (l = 0; l <= n; l++)\n                {\n               \
    \     sum = i + j + k + l;\n                    if (sum == n)\n              \
    \      {\n                        if (i % 2 == 0 && j % 2 == 0 && k % 2 == 0 &&\
    \ l % 2 == 0)\n                        {\n                            result =\
    \ true;\n                            break;\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpth1_kpgw.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ead]

    ??:? void tmpth1_kpgw.__unittest_L39_C1() [0x427b42]

    ??:? void tmpth1_kpgw.__modtest() [0x427c30]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbd3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa66]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300a8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa3d]

    ??:? runModuleUnitTests [0x42b9a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 4)\n        return true;\n    return\
    \ is_equal_to_sum_even(n - 4);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfily0a46.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpfily0a46.__unittest_L20_C1() [0x427a7a]

    ??:? void tmpfily0a46.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    long half = n / 2;\n    for (long a = 2; a <= half; a\
    \ += 2) \n    {\n        for (long b = 2; b <= half; b += 2) \n        {\n   \
    \         for (long c = 2; c <= half; c += 2) \n            {\n              \
    \  for (long d = 2; d <= half; d += 2) \n                {\n                 \
    \   if (a + b + c + d == n) \n                    {\n                        return\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n\
    \    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n\
    \    long mmm = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long y\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq4sdfkk_.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpq4sdfkk_.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq4sdfkk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            break;\n   \
    \     }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz5ko2wcn.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpz5ko2wcn.__unittest_L27_C1() [0x427aa5]

    ??:? void tmpz5ko2wcn.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // write your\
    \ code here\n    if (n % 2 != 0)\n        return false;\n    if (n == 0)\n   \
    \     return true;\n    if (n < 0)\n        return false;\n    long sum = 0;\n\
    \    for (long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        if (sum\
    \ == n)\n            return true;\n        if (sum > n)\n            return false;\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdem4gwcu.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e35]

    ??:? void tmpdem4gwcu.__unittest_L28_C1() [0x427ae5]

    ??:? void tmpdem4gwcu.__modtest() [0x427bb4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb5b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ee]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430030]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c5]

    ??:? runModuleUnitTests [0x42b931]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428284]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    for (a = 2; a <= n; a += 2)\n    {\n   \
    \     for (b = 2; b <= n; b += 2)\n        {\n            for (c = 2; c <= n;\
    \ c += 2)\n            {\n                for (d = 2; d <= n; d += 2)\n      \
    \          {\n                    if (a + b + c + d == n)\n                  \
    \  {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    long a = 0, b = 0, c = 0, d = 0;\n    for (a\
    \ = 2; a <= n / 4; a += 2)\n    {\n        for (b = a; b <= n / 3; b += 2)\n \
    \       {\n            for (c = b; c <= n / 2; c += 2)\n            {\n      \
    \          d = n - a - b - c;\n                if (d % 2 == 0 && d >= c)\n   \
    \                 return true;\n            }\n        }\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long count = 0;\n    long i = 0;\n    while(i\
    \ < n)\n    {\n        if(i % 2 == 0)\n        {\n            sum += i;\n    \
    \        count++;\n        }\n        if(sum == n && count == 4)\n        {\n\
    \            result = true;\n            break;\n        }\n        i++;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdn2gts16.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmpdn2gts16.__unittest_L30_C1() [0x427ada]

    ??:? void tmpdn2gts16.__modtest() [0x427b88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n    {\n \
    \       i += 2;\n        sum += i;\n    }\n    if (sum == n)\n        result =\
    \ true;\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzzfwu2z3.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpzzfwu2z3.__unittest_L22_C1() [0x427a91]

    ??:? void tmpzzfwu2z3.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ == 2)\n        return false;\n    if (n == 4)\n        return true;\n    if\
    \ (n == 6)\n        return true;\n    if (n == 8)\n        return true;\n    if\
    \ (n == 10)\n        return true;\n    if (n == 12)\n        return true;\n  \
    \  if (n == 14)\n        return true;\n    if (n == 16)\n        return true;\n\
    \    if (n == 18)\n        return true;\n    if (n == 20)\n        return true;\n\
    \    if (n == 22)\n        return true;\n    if (n == 24)\n        return true;\n\
    \    if (n == 26)\n        return true;\n    if (n == 28)\n        return true;\n\
    \    if (n == 30)\n        return true;\n    if (n == 32)\n        return true;\n\
    \    if (n == 34)\n        return true;\n    if (n == 36)\n        return true;\n\
    \    if (n == 38)\n        return true;\n    if (n == 40)\n        return true;\n\
    \    if (n == 42)\n        return true;\n    if (n == 44)\n        return true;\n\
    \    if (n == 46)\n        return true;\n    if (n == 48)\n        return true;\n\
    \    if (n == 50)\n        return true;\n    if (n == 52)\n        return true;\n\
    \    if (n == 54)\n        return true;\n    if (n == 56)\n        return true;\n\
    \    if (n == 58)\n        return true;\n    if (n == 60)\n        return true;\n\
    \    if (n == 62)\n        return true;\n    if (n == 64)\n        return true;\n\
    \    if (n == 66)\n        return true;\n    if (n == 68)\n        return true;\n\
    \    if (n == 70)\n        return true;\n    if (n == 72)\n        return true;\n\
    \    if (n == 74)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaeunv7_4.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaeunv7_4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0) \n    {\n        long sum = 0;\n        long i\
    \ = 0;\n        while (sum < n) \n        {\n            sum += 2 * i;\n     \
    \       i++;\n        }\n        if (sum == n) \n        {\n            result\
    \ = true;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6a0qnf3k.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmp6a0qnf3k.__unittest_L27_C1() [0x427aa9]

    ??:? void tmp6a0qnf3k.__modtest() [0x427b78]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n < 8) return\
    \ false;\n    if (n % 2 != 0) return false;\n    if (n == 8) return true;\n  \
    \  if (n == 10) return false;\n    if (n == 12) return true;\n    if (n == 14)\
    \ return false;\n    if (n == 16) return true;\n    if (n == 18) return false;\n\
    \    if (n == 20) return true;\n    if (n == 22) return false;\n    if (n == 24)\
    \ return true;\n    if (n == 26) return false;\n    if (n == 28) return true;\n\
    \    if (n == 30) return false;\n    if (n == 32) return true;\n    if (n == 34)\
    \ return false;\n    if (n == 36) return true;\n    if (n == 38) return false;\n\
    \    if (n == 40) return true;\n    if (n == 42) return false;\n    if (n == 44)\
    \ return true;\n    if (n == 46) return false;\n    if (n == 48) return true;\n\
    \    if (n == 50) return false;\n    if (n == 52) return true;\n    if (n == 54)\
    \ return false;\n    if (n == 56) return true;\n    if (n == 58) return false;\n\
    \    if (n == 60) return true;\n    if (n == 62) return false;\n    if (n == 64)\
    \ return true;\n    if (n == 66) return false;\n    if (n == 68) return true;\n\
    \    if (n == 70) return false;\n    if (n == 72) return true;\n    if (n == 74)\
    \ return false;\n    if (n == 76) return true;\n    if (n == 78) return false;\n\
    \    if (n == 80) return true;\n    if (n == 82) return false;\n    if (n == 84)\
    \ return true;\n    if (n == 86) return false;\n    if (n == 88) return true;\n\
    \    if (n == 90) return false;\n    if (n == 92) return true;\n    if (n == 94)\
    \ return false;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp45fyob_s.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45fyob_s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 4)\n        return true;\n    if (n\
    \ < 8)\n        return false;\n    long a = n / 2;\n    long b = 2;\n    long\
    \ c = 2;\n    long d = 2;\n    while (a >= b)\n    {\n        while (b >= c)\n\
    \        {\n            while (c >= d)\n            {\n                if (a +\
    \ b + c + d == n)\n                    return true;\n                d += 2;\n\
    \            }\n            c += 2;\n            d = 2;\n        }\n        b\
    \ += 2;\n        c = 2;\n        d = 2;\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp97d0x3l_.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmp97d0x3l_.__unittest_L39_C1() [0x427b02]

    ??:? void tmp97d0x3l_.__modtest() [0x427bf0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb93]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa26]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430068]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9fd]

    ??:? runModuleUnitTests [0x42b969]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282bc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    long sum = 0;\n    long i = 2;\n    while (sum < n)\n    {\n        sum +=\
    \ i;\n        i += 2;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr5k9euj3.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e15]

    ??:? void tmpr5k9euj3.__unittest_L22_C1() [0x427b05]

    ??:? void tmpr5k9euj3.__modtest() [0x427b94]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430010]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]

    ??:? runModuleUnitTests [0x42b911]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    for (i = 0; i < n; i++)\n    {\n        for (j = 0;\
    \ j < n; j++)\n        {\n            for (k = 0; k < n; k++)\n            {\n\
    \                for (l = 0; l < n; l++)\n                {\n                \
    \    sum = i + j + k + l;\n                    if (sum == n)\n               \
    \     {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz86q1em2.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpz86q1em2.__unittest_L36_C1() [0x427ace]

    ??:? void tmpz86q1em2.__modtest() [0x427bbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ == 2)\n        return false;\n    if (n == 4)\n        return true;\n    if\
    \ (n == 6)\n        return false;\n    if (n == 8)\n        return true;\n   \
    \ if (n == 10)\n        return false;\n    if (n == 12)\n        return true;\n\
    \    if (n == 14)\n        return false;\n    if (n == 16)\n        return true;\n\
    \    if (n == 18)\n        return false;\n    if (n == 20)\n        return true;\n\
    \    if (n == 22)\n        return false;\n    if (n == 24)\n        return true;\n\
    \    if (n == 26)\n        return false;\n    if (n == 28)\n        return true;\n\
    \    if (n == 30)\n        return false;\n    if (n == 32)\n        return true;\n\
    \    if (n == 34)\n        return false;\n    if (n == 36)\n        return true;\n\
    \    if (n == 38)\n        return false;\n    if (n == 40)\n        return true;\n\
    \    if (n == 42)\n        return false;\n    if (n == 44)\n        return true;\n\
    \    if (n == 46)\n        return false;\n    if (n == 48)\n        return true;\n\
    \    if (n == 50)\n        return false;\n    if (n == 52)\n        return true;\n\
    \    if (n == 54)\n        return false;\n    if (n == 56)\n        return true;\n\
    \    if (n == 58)\n        return false;\n    if (n == 60)\n        return true;\n\
    \    if (n == 62)\n        return false;\n    if (n == 64)\n        return true;\n\
    \    if (n == 66)\n        return false;\n    if (n == 68)\n        return true;\n\
    \    if (n == 70)\n        return false;\n    if (n == 72)\n        return true;\n\
    \    if (n == 74)\n        return false;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz0rs32b2.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz0rs32b2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n == 0) return true;\n    if (n == 2) return false;\n\
    \    if (n == 4) return true;\n    if (n == 6) return true;\n    if (n == 8) return\
    \ true;\n    if (n == 10) return true;\n    if (n == 12) return true;\n    if\
    \ (n == 14) return true;\n    if (n == 16) return true;\n    if (n == 18) return\
    \ true;\n    if (n == 20) return true;\n    if (n == 22) return true;\n    if\
    \ (n == 24) return true;\n    if (n == 26) return true;\n    if (n == 28) return\
    \ true;\n    if (n == 30) return true;\n    if (n == 32) return true;\n    if\
    \ (n == 34) return true;\n    if (n == 36) return true;\n    if (n == 38) return\
    \ true;\n    if (n == 40) return true;\n    if (n == 42) return true;\n    if\
    \ (n == 44) return true;\n    if (n == 46) return true;\n    if (n == 48) return\
    \ true;\n    if (n == 50) return true;\n    if (n == 52) return true;\n    if\
    \ (n == 54) return true;\n    if (n == 56) return true;\n    if (n == 58) return\
    \ true;\n    if (n == 60) return true;\n    if (n == 62) return true;\n    if\
    \ (n == 64) return true;\n    if (n == 66) return true;\n    if (n == 68) return\
    \ true;\n    if (n == 70) return true;\n    if (n == 72) return true;\n    if\
    \ (n == 74) return true;\n    if (n == 76) return true;\n    if (n == 78) return\
    \ true;\n    if (n == 80) return true;\n    if (n == 82) return true;\n    if\
    \ (n == 84) return true;\n    if (n == 86) return true;\n    if (n == 88) return\
    \ true;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj2yvqlfo.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj2yvqlfo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    while (a > 0)\n    {\n        while (b\
    \ > 0)\n        {\n            while (c > 0)\n            {\n                while\
    \ (d > 0)\n                {\n                    if (a + b + c + d == n)\n  \
    \                      return true;\n                    d--;\n              \
    \  }\n                c--;\n                d = c;\n            }\n          \
    \  b--;\n            c = b;\n            d = c;\n        }\n        a--;\n   \
    \     b = a;\n        c = b;\n        d = c;\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c + d;\n    if (sum\
    \ == n)\n        return true;\n    else\n        return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplu2g_gdz.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmplu2g_gdz.__unittest_L22_C1() [0x427ace]

    ??:? void tmplu2g_gdz.__modtest() [0x427b7c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n\
    \    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n\
    \    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpar1f7u9x.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpar1f7u9x.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpar1f7u9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i, j, k,\
    \ l;\n    bool result = false;\n    for (i = 1; i <= n; i++) \n    {\n       \
    \ for (j = 1; j <= n; j++) \n        {\n            for (k = 1; k <= n; k++) \n\
    \            {\n                for (l = 1; l <= n; l++) \n                {\n\
    \                    if (i + j + k + l == n && i % 2 == 0 && j % 2 == 0 && k %\
    \ 2 == 0 && l % 2 == 0) \n                    {\n                        result\
    \ = true;\n                        break;\n                    }\n           \
    \     }\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    foreach(a; iota(1, n / 4 + 1))\n    {\n\
    \        foreach(b; iota(a, n / 3 + 1))\n        {\n            foreach(c; iota(b,\
    \ n / 2 + 1))\n            {\n                foreach(d; iota(c, n + 1))\n   \
    \             {\n                    if (a + b + c + d == n)\n               \
    \     {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n                if (result)\n     \
    \               break;\n            }\n            if (result)\n             \
    \   break;\n        }\n        if (result)\n            break;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n   \
    \ assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L)\
    \ == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) ==\
    \ false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n\
    \    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbgo0w9vt.d(12): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbgo0w9vt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if(n % 2 !=\
    \ 0) return false;\n    if(n < 8) return false;\n    if(n == 8) return true;\n\
    \    if(n == 10) return false;\n    if(n == 12) return true;\n    if(n == 14)\
    \ return false;\n    if(n == 16) return true;\n    if(n == 18) return false;\n\
    \    if(n == 20) return true;\n    if(n == 22) return false;\n    if(n == 24)\
    \ return true;\n    if(n == 26) return false;\n    if(n == 28) return true;\n\
    \    if(n == 30) return false;\n    if(n == 32) return true;\n    if(n == 34)\
    \ return false;\n    if(n == 36) return true;\n    if(n == 38) return false;\n\
    \    if(n == 40) return true;\n    if(n == 42) return false;\n    if(n == 44)\
    \ return true;\n    if(n == 46) return false;\n    if(n == 48) return true;\n\
    \    if(n == 50) return false;\n    if(n == 52) return true;\n    if(n == 54)\
    \ return false;\n    if(n == 56) return true;\n    if(n == 58) return false;\n\
    \    if(n == 60) return true;\n    if(n == 62) return false;\n    if(n == 64)\
    \ return true;\n    if(n == 66) return false;\n    if(n == 68) return true;\n\
    \    if(n == 70) return false;\n    if(n == 72) return true;\n    if(n == 74)\
    \ return false;\n    if(n == 76) return true;\n    if(n == 78) return false;\n\
    \    if(n == 80) return true;\n    if(n == 82) return false;\n    if(n == 84)\
    \ return true;\n    if(n == 86) return false;\n    if(n == 88) return true;\n\
    \    if(n == 90) return false;\n    if(n == 92) return true;\n    if(n == 94)\
    \ return false;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ggrjwt1.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ggrjwt1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long sum = 0;\n    for (i = 2; i <= n; i += 2)\n    {\n        for (j = 2;\
    \ j <= n; j += 2)\n        {\n            for (k = 2; k <= n; k += 2)\n      \
    \      {\n                for (l = 2; l <= n; l += 2)\n                {\n   \
    \                 sum = i + j + k + l;\n                    if (sum == n)\n  \
    \                  {\n                        result = true;\n               \
    \         break;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    for (a = 2; a <= n; a += 2)\n    {\n        for (b = 2;\
    \ b <= n; b += 2)\n        {\n            for (c = 2; c <= n; c += 2)\n      \
    \      {\n                for (d = 2; d <= n; d += 2)\n                {\n   \
    \                 sum = a + b + c + d;\n                    if (sum == n)\n  \
    \                  {\n                        result = true;\n               \
    \         break;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    auto nn = n / 2;\n    for (long i = 2; i <=\
    \ nn; i += 2)\n    {\n        for (long j = 2; j <= nn; j += 2)\n        {\n \
    \           for (long k = 2; k <= nn; k += 2)\n            {\n               \
    \ for (long l = 2; l <= nn; l += 2)\n                {\n                    if\
    \ (i + j + k + l == nn)\n                        return true;\n              \
    \  }\n            }\n        }\n    }\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1orz09wf.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e75]

    ??:? void tmp1orz09wf.__unittest_L33_C1() [0x427b69]

    ??:? void tmp1orz09wf.__modtest() [0x427bf8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa2e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbc1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430070]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa05]

    ??:? runModuleUnitTests [0x42b971]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    if (n == 10) return false;\n    if (n == 12) return true;\n    if (n == 14)\
    \ return false;\n    if (n == 16) return true;\n    if (n == 18) return false;\n\
    \    if (n == 20) return true;\n    if (n == 22) return false;\n    if (n == 24)\
    \ return true;\n    if (n == 26) return false;\n    if (n == 28) return true;\n\
    \    if (n == 30) return false;\n    if (n == 32) return true;\n    if (n == 34)\
    \ return false;\n    if (n == 36) return true;\n    if (n == 38) return false;\n\
    \    if (n == 40) return true;\n    if (n == 42) return false;\n    if (n == 44)\
    \ return true;\n    if (n == 46) return false;\n    if (n == 48) return true;\n\
    \    if (n == 50) return false;\n    if (n == 52) return true;\n    if (n == 54)\
    \ return false;\n    if (n == 56) return true;\n    if (n == 58) return false;\n\
    \    if (n == 60) return true;\n    if (n == 62) return false;\n    if (n == 64)\
    \ return true;\n    if (n == 66) return false;\n    if (n == 68) return true;\n\
    \    if (n == 70) return false;\n    if (n == 72) return true;\n    if (n == 74)\
    \ return false;\n    if (n == 76) return true;\n    if (n == 78) return false;\n\
    \    if (n == 80) return true;\n    if (n == 82) return false;\n    if (n == 84)\
    \ return true;\n    if (n == 86) return false;\n    if (n == 88) return true;\n\
    \    if (n == 90) return false;\n    if (n == 92) return true;\n    if (n == 94)\
    \ return false;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpch9bk6lt.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch9bk6lt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long\
    \ u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n\
    \    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long\
    \ ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah =\
    \ 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n\
    \    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long\
    \ aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au =\
    \ 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n\
    \    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long\
    \ bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh =\
    \ 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n\
    \    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long\
    \ bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7qu34q3y.d(81): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7qu34q3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 4)\n        return true;\n    if (n\
    \ < 4)\n        return false;\n    auto evens = iota(2L, n / 2 + 1, 2L);\n   \
    \ auto sums = new int[evens.length];\n    sums[0] = evens[0];\n    for (int i\
    \ = 1; i < evens.length; i++)\n    {\n        sums[i] = sums[i - 1] + evens[i];\n\
    \    }\n    for (int i = 0; i < evens.length; i++)\n    {\n        for (int j\
    \ = i; j < evens.length; j++)\n        {\n            if (sums[j] - sums[i] +\
    \ evens[i] == n)\n                return true;\n        }\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz1zfugsr.d(16): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1zfugsr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    if (n % 4 == 0) return true;\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqx0uhwae.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpqx0uhwae.__unittest_L16_C1() [0x427ad9]

    ??:? void tmpqx0uhwae.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    long half = n / 2;\n    if (half % 2 != 0) half--;\n \
    \   for (long i = half; i >= 2; i -= 2) \n    {\n        long rest = n - i;\n\
    \        if (rest % 2 != 0) continue;\n        long half_rest = rest / 2;\n  \
    \      if (half_rest % 2 != 0) half_rest--;\n        for (long j = half_rest;\
    \ j >= 2; j -= 2) \n        {\n            long rest_rest = rest - j;\n      \
    \      if (rest_rest % 2 != 0) continue;\n            long half_rest_rest = rest_rest\
    \ / 2;\n            if (half_rest_rest % 2 != 0) half_rest_rest--;\n         \
    \   for (long k = half_rest_rest; k >= 2; k -= 2) \n            {\n          \
    \      long rest_rest_rest = rest_rest - k;\n                if (rest_rest_rest\
    \ % 2 != 0) continue;\n                if (rest_rest_rest == 2) return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if(n % 2 !=\
    \ 0)\n        return false;\n    if(n < 8)\n        return false;\n    if(n ==\
    \ 8)\n        return true;\n    if(n == 10)\n        return false;\n    if(n ==\
    \ 12)\n        return true;\n    if(n == 14)\n        return false;\n    if(n\
    \ == 16)\n        return true;\n    if(n == 18)\n        return false;\n    if(n\
    \ == 20)\n        return true;\n    if(n == 22)\n        return false;\n    if(n\
    \ == 24)\n        return true;\n    if(n == 26)\n        return false;\n    if(n\
    \ == 28)\n        return true;\n    if(n == 30)\n        return false;\n    if(n\
    \ == 32)\n        return true;\n    if(n == 34)\n        return false;\n    if(n\
    \ == 36)\n        return true;\n    if(n == 38)\n        return false;\n    if(n\
    \ == 40)\n        return true;\n    if(n == 42)\n        return false;\n    if(n\
    \ == 44)\n        return true;\n    if(n == 46)\n        return false;\n    if(n\
    \ == 48)\n        return true;\n    if(n == 50)\n        return false;\n    if(n\
    \ == 52)\n        return true;\n    if(n == 54)\n        return false;\n    if(n\
    \ == 56)\n        return true;\n    if(n == 58)\n        return false;\n    if(n\
    \ == 60)\n        return true;\n    if(n == 62)\n        return false;\n    if(n\
    \ == 64)\n        return true;\n    if(n == 66)\n        return false;\n    if(n\
    \ == 68)\n        return true;\n    if(n == 70)\n        return false;\n    if(n\
    \ == 72)\n        return true;\n    if(n == 74)\n        return false;\n    if(n\
    \ == 76)\n        return true;\n    if(n == 78)\n        return false;\n    if(n\
    \ == 80)\n        return true;\n\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqpk6_4y3.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqpk6_4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ == 2)\n        return false;\n    if (n == 4)\n        return true;\n    if\
    \ (n < 8)\n        return false;\n    if (n == 8)\n        return true;\n    if\
    \ (n == 10)\n        return false;\n    if (n == 12)\n        return true;\n \
    \   if (n == 14)\n        return false;\n    if (n == 16)\n        return true;\n\
    \    if (n == 18)\n        return false;\n    if (n == 20)\n        return true;\n\
    \    if (n == 22)\n        return false;\n    if (n == 24)\n        return true;\n\
    \    if (n == 26)\n        return false;\n    if (n == 28)\n        return true;\n\
    \    if (n == 30)\n        return false;\n    if (n == 32)\n        return true;\n\
    \    if (n == 34)\n        return false;\n    if (n == 36)\n        return true;\n\
    \    if (n == 38)\n        return false;\n    if (n == 40)\n        return true;\n\
    \    if (n == 42)\n        return false;\n    if (n == 44)\n        return true;\n\
    \    if (n == 46)\n        return false;\n    if (n == 48)\n        return true;\n\
    \    if (n == 50)\n        return false;\n    if (n == 52)\n        return true;\n\
    \    if (n == 54)\n        return false;\n    if (n == 56)\n        return true;\n\
    \    if (n == 58)\n        return false;\n    if (n == 60)\n        return true;\n\
    \    if (n == 62)\n        return false;\n    if (n == 64)\n        return true;\n\
    \    if (n == 66)\n        return false;\n    if (n == 68)\n        return true;\n\
    \    if (n == 70)\n        return false;\n    if (n == 72)\n        return true;\n\
    \    if (n == 74)\n        return false;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8xp1u2ra.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xp1u2ra.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ < 0) \n        return false;\n    long i = 0;\n    long j = n;\n    while (i\
    \ <= j) \n    {\n        long sum = i + j;\n        if (sum == n) \n         \
    \   return true;\n        if (sum < n) \n            i += 2;\n        else \n\
    \            j -= 2;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppcoqjo7h.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e2d]

    ??:? void tmppcoqjo7h.__unittest_L30_C1() [0x427ac2]

    ??:? void tmppcoqjo7h.__modtest() [0x427bb0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb53]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9e6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb79]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430028]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb05]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9bd]

    ??:? runModuleUnitTests [0x42b929]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42827c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long sum = 0;\n    long i = 0;\n    while (sum\
    \ < n)\n    {\n        sum += 2 * i;\n        i++;\n    }\n    if (sum == n)\n\
    \        return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpd7cp007r.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e1d]

    ??:? void tmpd7cp007r.__unittest_L27_C1() [0x427acd]

    ??:? void tmpd7cp007r.__modtest() [0x427b9c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430018]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faf5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]

    ??:? runModuleUnitTests [0x42b919]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    else if (n == 0)\n        return true;\n    else\n\
    \    {\n        long a = 0;\n        long b = 0;\n        long c = 0;\n      \
    \  long d = 0;\n        for (long i = 0; i < n / 2; i++)\n        {\n        \
    \    for (long j = 0; j < n / 2; j++)\n            {\n                for (long\
    \ k = 0; k < n / 2; k++)\n                {\n                    for (long l =\
    \ 0; l < n / 2; l++)\n                    {\n                        if (i + j\
    \ + k + l == n)\n                        {\n                            a = i;\n\
    \                            b = j;\n                            c = k;\n    \
    \                        d = l;\n                            return true;\n  \
    \                      }\n                    }\n                }\n         \
    \   }\n        }\n        return false;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppirujgh7.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e9d]

    ??:? void tmppirujgh7.__unittest_L43_C1() [0x427b2e]

    ??:? void tmppirujgh7.__modtest() [0x427c1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbc3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa56]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbe9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430098]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa2d]

    ??:? runModuleUnitTests [0x42b999]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int count =\
    \ 0;\n    for (int i = 2; i <= n; i += 2) \n    {\n        if (n % i == 0) \n\
    \        {\n            count++;\n        }\n    }\n    return count == 4;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfy0r0i26.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpfy0r0i26.__unittest_L20_C1() [0x427aaa]

    ??:? void tmpfy0r0i26.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if(n % 2 !=\
    \ 0) return false;\n    if(n < 8) return false;\n    if(n == 8) return true;\n\
    \    if(n == 10) return false;\n    if(n == 12) return true;\n    if(n == 14)\
    \ return false;\n    if(n == 16) return true;\n    if(n == 18) return false;\n\
    \    if(n == 20) return true;\n    if(n == 22) return false;\n    if(n == 24)\
    \ return true;\n    if(n == 26) return false;\n    if(n == 28) return true;\n\
    \    if(n == 30) return false;\n    if(n == 32) return true;\n    if(n == 34)\
    \ return false;\n    if(n == 36) return true;\n    if(n == 38) return false;\n\
    \    if(n == 40) return true;\n    if(n == 42) return false;\n    if(n == 44)\
    \ return true;\n    if(n == 46) return false;\n    if(n == 48) return true;\n\
    \    if(n == 50) return false;\n    if(n == 52) return true;\n    if(n == 54)\
    \ return false;\n    if(n == 56) return true;\n    if(n == 58) return false;\n\
    \    if(n == 60) return true;\n    if(n == 62) return false;\n    if(n == 64)\
    \ return true;\n    if(n == 66) return false;\n    if(n == 68) return true;\n\
    \    if(n == 70) return false;\n    if(n == 72) return true;\n    if(n == 74)\
    \ return false;\n    if(n == 76) return true;\n    if(n == 78) return false;\n\
    \    if(n == 80) return true;\n    if(n == 82) return false;\n    if(n == 84)\
    \ return true;\n    if(n == 86) return false;\n    if(n == 88) return true;\n\
    \    if(n == 90) return false;\n    if(n == 92) return true;\n    if(n == 94)\
    \ return false;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ggrjwt1.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ggrjwt1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i, j, k,\
    \ l;\n    bool result = false;\n    for (i = 1; i <= n; i++)\n    {\n        for\
    \ (j = 1; j <= n; j++)\n        {\n            for (k = 1; k <= n; k++)\n    \
    \        {\n                for (l = 1; l <= n; l++)\n                {\n    \
    \                if (i + j + k + l == n && i % 2 == 0 && j % 2 == 0 && k % 2 ==\
    \ 0 && l % 2 == 0)\n                    {\n                        result = true;\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n\
    \    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n\
    \    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpar1f7u9x.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpar1f7u9x.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpar1f7u9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int count =\
    \ 0;\n    for (int i = 2; i <= n; i += 2) \n    {\n        if (n % i == 0) \n\
    \        {\n            count++;\n        }\n    }\n    return count == 4;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfy0r0i26.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpfy0r0i26.__unittest_L20_C1() [0x427aaa]

    ??:? void tmpfy0r0i26.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 4)\n        return true;\n    return\
    \ is_equal_to_sum_even(n - 4);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfily0a46.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpfily0a46.__unittest_L20_C1() [0x427a7a]

    ??:? void tmpfily0a46.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    if (n % 4 == 0) \n        return true;\n \
    \   if (n % 4 == 2) \n        return false;\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq18r0a0g.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmpq18r0a0g.__unittest_L22_C1() [0x427af9]

    ??:? void tmpq18r0a0g.__modtest() [0x427b88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    int count = 0;\n    for(int i = 2; i <= n; i += 2)\n    {\n \
    \       if(n % i == 0)\n        {\n            count++;\n        }\n    }\n  \
    \  return count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpujnwfkur.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpujnwfkur.__unittest_L21_C1() [0x427aaa]

    ??:? void tmpujnwfkur.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // write your\
    \ code here\n    long n_copy = n;\n    long count = 0;\n    long sum = 0;\n  \
    \  while (n_copy > 0)\n    {\n        if (n_copy % 2 == 0)\n        {\n      \
    \      count++;\n            sum += n_copy;\n        }\n        n_copy /= 2;\n\
    \    }\n    if (count == 4 && sum == n)\n        return true;\n    else\n    \
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpotxbhrew.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmpotxbhrew.__unittest_L28_C1() [0x427ad6]

    ??:? void tmpotxbhrew.__modtest() [0x427b84]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n\
    \    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n\
    \    long mmm = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long y\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq4sdfkk_.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpq4sdfkk_.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq4sdfkk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // write your\
    \ code here\n    if(n % 2 != 0)\n        return false;\n    if(n == 0)\n     \
    \   return true;\n    if(n == 2)\n        return false;\n    if(n == 4)\n    \
    \    return true;\n    if(n == 6)\n        return true;\n    if(n == 8)\n    \
    \    return true;\n    if(n == 10)\n        return true;\n    if(n == 12)\n  \
    \      return true;\n    if(n == 14)\n        return true;\n    if(n == 16)\n\
    \        return true;\n    if(n == 18)\n        return true;\n    if(n == 20)\n\
    \        return true;\n    if(n == 22)\n        return true;\n    if(n == 24)\n\
    \        return true;\n    if(n == 26)\n        return true;\n    if(n == 28)\n\
    \        return true;\n    if(n == 30)\n        return true;\n    if(n == 32)\n\
    \        return true;\n    if(n == 34)\n        return true;\n    if(n == 36)\n\
    \        return true;\n    if(n == 38)\n        return true;\n    if(n == 40)\n\
    \        return true;\n    if(n == 42)\n        return true;\n    if(n == 44)\n\
    \        return true;\n    if(n == 46)\n        return true;\n    if(n == 48)\n\
    \        return true;\n    if(n == 50)\n        return true;\n    if(n == 52)\n\
    \        return true;\n    if(n == 54)\n        return true;\n    if(n == 56)\n\
    \        return true;\n    if(n == 58)\n        return true;\n    if(n == 60)\n\
    \        return true;\n    if(n == 62)\n        return true;\n    if(n == 64)\n\
    \        return true;\n    if(n == 66)\n        return true;\n    if(n == 68)\n\
    \        return true;\n    if(n == 70)\n        return true;\n    if(n == 72)\n\
    \        return true;\n    if(n == 74\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn62raabp.d(88): Error: found `unittest` when expecting `)`

    /tmp/tmpn62raabp.d(101): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn62raabp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 4)\n        return true;\n    if (n\
    \ < 8)\n        return false;\n    long a = 2;\n    long b = 2;\n    long c =\
    \ 2;\n    long d = n - 6;\n    while (d > a)\n    {\n        if (d % 2 != 0)\n\
    \        {\n            d -= 2;\n            continue;\n        }\n        while\
    \ (c < d)\n        {\n            if (a + b + c + d == n)\n                return\
    \ true;\n            c += 2;\n        }\n        c = 2;\n        b += 2;\n   \
    \     if (b > d)\n        {\n            b = 2;\n            a += 2;\n       \
    \ }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_k9d_q8s.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e7d]

    ??:? void tmp_k9d_q8s.__unittest_L43_C1() [0x427b0e]

    ??:? void tmp_k9d_q8s.__modtest() [0x427bfc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bba3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbc9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430078]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]

    ??:? runModuleUnitTests [0x42b979]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    if (n % 4 == 0) \n        return true;\n \
    \   if (n % 4 == 2) \n        return false;\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq18r0a0g.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmpq18r0a0g.__unittest_L22_C1() [0x427af9]

    ??:? void tmpq18r0a0g.__modtest() [0x427b88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    bool result = false;\n    long sum = 0;\n    long count = 0;\n\
    \    for(long i = 2; i <= n; i += 2)\n    {\n        sum += i;\n        count++;\n\
    \        if(sum == n)\n        {\n            result = true;\n            break;\n\
    \        }\n        else if(sum > n)\n        {\n            break;\n        }\n\
    \    }\n    if(count == 4)\n    {\n        result = true;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4fkmblkx.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmp4fkmblkx.__unittest_L34_C1() [0x427ab5]

    ??:? void tmp4fkmblkx.__modtest() [0x427b84]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0)\n    {\n        for (long i = 2; i <= n / 2; i\
    \ += 2)\n        {\n            for (long j = 2; j <= n / 2; j += 2)\n       \
    \     {\n                for (long k = 2; k <= n / 2; k += 2)\n              \
    \  {\n                    for (long l = 2; l <= n / 2; l += 2)\n             \
    \       {\n                        if (i + j + k + l == n)\n                 \
    \       {\n                            result = true;\n                      \
    \      break;\n                        }\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    long count = 0;\n    long i = 0;\n    long j = 0;\n  \
    \  long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p\
    \ = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n \
    \   long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y\
    \ = 0;\n    long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n\
    \    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long\
    \ hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll =\
    \ 0;\n    long mm = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n\
    \    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long\
    \ vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz =\
    \ 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd =\
    \ 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh =\
    \ 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll =\
    \ 0;\n    long mmm = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq =\
    \ 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp60o2dw06.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60o2dw06.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    return is_equal_to_sum_even(n - 8);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwhjc5amn.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmpwhjc5amn.__unittest_L15_C1() [0x427ac1]

    ??:? void tmpwhjc5amn.__modtest() [0x427b50]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    // To print results to the standard output you can use print(\"\
    Hello world!\");\n    // Example: print(\"Test test test\");\n    if(n<8)\n  \
    \      return false;\n    if(n%2!=0)\n        return false;\n    if(n%4==0)\n\
    \        return true;\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphnccg2n4.d(28): unittest failure

    ----------------'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    while (i < n)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            sum += i;\n            if (sum ==\
    \ n)\n            {\n                result = true;\n                break;\n\
    \            }\n        }\n        i++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq4fkdde0.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpq4fkdde0.__unittest_L28_C1() [0x427aa9]

    ??:? void tmpq4fkdde0.__modtest() [0x427b78]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    int count = 0;\n    for(int i = 2; i <= n; i += 2)\n    {\n \
    \       if(n % i == 0)\n        {\n            count++;\n        }\n    }\n  \
    \  if(count == 4)\n    {\n        return true;\n    }\n    else\n    {\n     \
    \   return false;\n    }\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp44mr56f5.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp44mr56f5.__unittest_L28_C1() [0x427ab2]

    ??:? void tmp44mr56f5.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i = 0,\
    \ j = 0, k = 0, l = 0;\n    bool result = false;\n    for (i = 1; i <= n / 4;\
    \ i++) \n    {\n        for (j = 1; j <= n / 4; j++) \n        {\n           \
    \ for (k = 1; k <= n / 4; k++) \n            {\n                for (l = 1; l\
    \ <= n / 4; l++) \n                {\n                    if (i + j + k + l ==\
    \ n) \n                    {\n                        if (i % 2 == 0 && j % 2\
    \ == 0 && k % 2 == 0 && l % 2 == 0) \n                        {\n            \
    \                result = true;\n                            break;\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfk48bkl7.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427eed]

    ??:? void tmpfk48bkl7.__unittest_L34_C1() [0x427bdd]

    ??:? void tmpfk48bkl7.__modtest() [0x427c6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aaa6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300e8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbc5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa7d]

    ??:? runModuleUnitTests [0x42b9e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42833c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        if\
    \ (n - sum >= i) \n        {\n            sum += i;\n            count++;\n  \
    \      }\n    }\n    return count == 4;\n}\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppxjlbb0l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmppxjlbb0l.__unittest_L22_C1() [0x427abe]

    ??:? void tmppxjlbb0l.__modtest() [0x427b6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: -1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long n_copy\
    \ = n;\n    long sum = 0;\n    long count = 0;\n    long i = 2;\n    while (n_copy\
    \ > 0) \n    {\n        if (n_copy % i == 0) \n        {\n            sum += i;\n\
    \            count++;\n            n_copy -= i;\n        }\n        i += 2;\n\
    \    }\n    return count == 4 && sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660164350
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i, j, k,\
    \ l;\n    for (i = 2; i <= n / 4; i += 2) \n    {\n        for (j = i; j <= n\
    \ / 3; j += 2) \n        {\n            for (k = j; k <= n / 2; k += 2) \n   \
    \         {\n                for (l = k; l <= n; l += 2) \n                {\n\
    \                    if (i + j + k + l == n) \n                    {\n       \
    \                 return true;\n                    }\n                }\n   \
    \         }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            sum = 0;\n \
    \           count = 0;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqvd7f7c3.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpqvd7f7c3.__unittest_L28_C1() [0x427ab1]

    ??:? void tmpqvd7f7c3.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    int count = 0;\n    for(int i = 2; i <= n; i += 2)\n    {\n \
    \       if(n % i == 0)\n        {\n            count++;\n        }\n    }\n  \
    \  return count == 4;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpujnwfkur.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpujnwfkur.__unittest_L21_C1() [0x427aaa]

    ??:? void tmpujnwfkur.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if(n % 2 !=\
    \ 0)\n        return false;\n    if(n < 8)\n        return false;\n    if(n ==\
    \ 8)\n        return true;\n    long x = n / 2;\n    long y = n / 4;\n    long\
    \ z = n / 8;\n    long w = n / 16;\n    return x + y + z + w == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppoxnn4ig.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e35]

    ??:? void tmppoxnn4ig.__unittest_L22_C1() [0x427b25]

    ??:? void tmppoxnn4ig.__modtest() [0x427bb4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb5b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ee]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430030]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c5]

    ??:? runModuleUnitTests [0x42b931]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428284]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long sum = 0;\n    long i = 0;\n    while (sum\
    \ < n)\n    {\n        i += 2;\n        sum += i;\n    }\n    return sum == n;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpps8ovj9k.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpps8ovj9k.__unittest_L25_C1() [0x427ac1]

    ??:? void tmpps8ovj9k.__modtest() [0x427b90]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    if (n == 6)\n        return false;\n   \
    \ if (n == 8)\n        return true;\n    if (n == 10)\n        return false;\n\
    \    if (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n\
    \    if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_85gi_hv.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_85gi_hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 4)\n        return true;\n    return\
    \ is_equal_to_sum_even(n - 4);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfily0a46.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpfily0a46.__unittest_L20_C1() [0x427a7a]

    ??:? void tmpfily0a46.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if(n % 2 == 0)\n    {\n        long a = n / 4;\n        long b\
    \ = n / 2;\n        long c = n / 2;\n        long d = n / 2;\n        if(a + b\
    \ + c + d == n)\n        {\n            result = true;\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp53kqsleu.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmp53kqsleu.__unittest_L24_C1() [0x427ad6]

    ??:? void tmp53kqsleu.__modtest() [0x427b84]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    if (n % 4 == 0) \n        return true;\n \
    \   return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpodclqabb.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpodclqabb.__unittest_L20_C1() [0x427ad9]

    ??:? void tmpodclqabb.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ count == 4;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp036gj4gv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmp036gj4gv.__unittest_L23_C1() [0x427ac2]

    ??:? void tmp036gj4gv.__modtest() [0x427b70]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            sum = 0;\n \
    \           count = 0;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqvd7f7c3.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpqvd7f7c3.__unittest_L28_C1() [0x427ab1]

    ??:? void tmpqvd7f7c3.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    foreach(a; iota(1, n / 4 + 1)) {\n     \
    \   foreach(b; iota(a, n / 3 + 1)) {\n            foreach(c; iota(b, n / 2 + 1))\
    \ {\n                d = n - a - b - c;\n                if (d >= c && d % 2 ==\
    \ 0) {\n                    result = true;\n                    break;\n     \
    \           }\n            }\n            if (result) {\n                break;\n\
    \            }\n        }\n        if (result) {\n            break;\n       \
    \ }\n    }\n    return result;\n}\n/*\nEvaluate whether the given number n can\
    \ be written as the sum of exactly 4 positive even numbers\n    Example\n    \
    \            \n*/\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3p_5epix.d(12): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p_5epix.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    long i = 2;\n    while (i <= n) \n    {\n        if\
    \ (n % i == 0) \n        {\n            sum += i;\n            count++;\n    \
    \    }\n        i += 2;\n    }\n    return count == 4 && sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsuvgf1ty.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpsuvgf1ty.__unittest_L24_C1() [0x427ad2]

    ??:? void tmpsuvgf1ty.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    while (sum < n) \n    {\n\
    \        sum += 2 * i;\n        i++;\n    }\n    if (sum == n) \n    {\n     \
    \   result = true;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcybyfanm.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpcybyfanm.__unittest_L24_C1() [0x427a91]

    ??:? void tmpcybyfanm.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    if (n % 4 == 0) \n        return true;\n \
    \   return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpodclqabb.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpodclqabb.__unittest_L20_C1() [0x427ad9]

    ??:? void tmpodclqabb.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ == 2) \n        return false;\n    if (n == 4) \n        return true;\n    long\
    \ a = n / 2;\n    long b = n / 2;\n    long c = n / 2;\n    long d = n / 2;\n\
    \    long max = n / 4;\n    long min = 2;\n    long sum = 0;\n    while (true)\
    \ \n    {\n        if (a > max) \n            return false;\n        if (b > max)\
    \ \n            return false;\n        if (c > max) \n            return false;\n\
    \        if (d > max) \n            return false;\n        if (a < min) \n   \
    \         return false;\n        if (b < min) \n            return false;\n  \
    \      if (c < min) \n            return false;\n        if (d < min) \n     \
    \       return false;\n        sum = a + b + c + d;\n        if (sum == n) \n\
    \            return true;\n        if (sum > n) \n        {\n            if (a\
    \ > b) \n                a--;\n            else \n                b--;\n     \
    \   }\n        else \n        {\n            if (c < d) \n                c++;\n\
    \            else \n                d++;\n        }\n    }\n}\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoaabp55t.d(66): unittest failure

    ----------------

    ??:? _d_unittestp [0x427f25]

    ??:? void tmpoaabp55t.__unittest_L62_C1() [0x427bba]

    ??:? void tmpoaabp55t.__modtest() [0x427ca8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc4b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aade]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc71]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430120]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbfd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aab5]

    ??:? runModuleUnitTests [0x42ba21]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428374]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    if (n == 6)\n        return false;\n   \
    \ if (n == 8)\n        return true;\n    if (n == 10)\n        return false;\n\
    \    if (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n\
    \    if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_85gi_hv.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_85gi_hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    long a = 2;\n    long b\
    \ = 2;\n    long c = 2;\n    long d = 2;\n    long sum = a + b + c + d;\n    while\
    \ (sum != n) \n    {\n        if (sum < n) \n        {\n            if (a < b\
    \ && a < c && a < d) \n            {\n                a += 2;\n            } \n\
    \            else if (b < a && b < c && b < d) \n            {\n             \
    \   b += 2;\n            } \n            else if (c < a && c < b && c < d) \n\
    \            {\n                c += 2;\n            } \n            else \n \
    \           {\n                d += 2;\n            }\n        } \n        else\
    \ \n        {\n            if (a > b && a > c && a > d) \n            {\n    \
    \            a -= 2;\n            } \n            else if (b > a && b > c && b\
    \ > d) \n            {\n                b -= 2;\n            } \n            else\
    \ if (c > a && c > b && c > d) \n            {\n                c -= 2;\n    \
    \        } \n            else \n            {\n                d -= 2;\n     \
    \       }\n        }\n        sum = a + b + c + d;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long w = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long\
    \ jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long pp =\
    \ 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n\
    \    long uu = 0;\n    long vv = 0;\n    long aa = 0;\n    long bb = 0;\n    long\
    \ cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg =\
    \ 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n\
    \    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n\
    \    long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n\
    \    long hhh = 0;\n    long iiii = 0;\n    long jjjj = 0;\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0vv9eojq.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0vv9eojq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0)\n    {\n        long a = n / 4;\n        long\
    \ b = a + 1;\n        long c = b + 1;\n        long d = c + 1;\n        if (a\
    \ + b + c + d == n)\n        {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpioa8zvin.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpioa8zvin.__unittest_L24_C1() [0x427ac6]

    ??:? void tmpioa8zvin.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    // Return true if n can be written as the sum of exactly 4 positive\
    \ even numbers\n    // Return false otherwise\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\
    \    //\n    //\n    //\n    //\n    //\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprp26wd2n.d(173): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprp26wd2n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n == 0) return true;\n    if (n < 0) return false;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ sum = 0;\n    for (i = 0; i <= n; i += 2) \n    {\n        for (j = 0; j <=\
    \ n; j += 2) \n        {\n            for (k = 0; k <= n; k += 2) \n         \
    \   {\n                for (l = 0; l <= n; l += 2) \n                {\n     \
    \               sum = i + j + k + l;\n                    if (sum == n) return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeb6jtmdf.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e7d]

    ??:? void tmpeb6jtmdf.__unittest_L34_C1() [0x427b0e]

    ??:? void tmpeb6jtmdf.__modtest() [0x427bfc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bba3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbc9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430078]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]

    ??:? runModuleUnitTests [0x42b979]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n\
    \    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n\
    \    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpar1f7u9x.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpar1f7u9x.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpar1f7u9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    long a = n / 4;\n    long b = n / 2;\n    long\
    \ c = n / 4 * 3;\n    long d = n;\n    long sum = a + b + c + d;\n    return (sum\
    \ == n);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4leqrhxa.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e1d]

    ??:? void tmp4leqrhxa.__unittest_L23_C1() [0x427b11]

    ??:? void tmp4leqrhxa.__modtest() [0x427ba0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430018]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faf5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]

    ??:? runModuleUnitTests [0x42b919]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i, j, k,\
    \ l;\n    for (i = 2; i <= n / 4; i += 2) \n    {\n        for (j = i; j <= n\
    \ / 3; j += 2) \n        {\n            for (k = j; k <= n / 2; k += 2) \n   \
    \         {\n                for (l = k; l <= n; l += 2) \n                {\n\
    \                    if (i + j + k + l == n) \n                    {\n       \
    \                 return true;\n                    }\n                }\n   \
    \         }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool res = false;\n\
    \    long a = 0, b = 0, c = 0, d = 0;\n    for (a = 2; a <= n / 4; a += 2) \n\
    \    {\n        for (b = a; b <= n / 3; b += 2) \n        {\n            for (c\
    \ = b; c <= n / 2; c += 2) \n            {\n                d = n - a - b - c;\n\
    \                if (d % 2 == 0 && d >= c) \n                {\n             \
    \       res = true;\n                    break;\n                }\n         \
    \   }\n            if (res) \n            {\n                break;\n        \
    \    }\n        }\n        if (res) \n        {\n            break;\n        }\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int count =\
    \ 0;\n    for (int i = 2; i <= n; i += 2) \n    {\n        if (n % i == 0) \n\
    \        {\n            count++;\n        }\n    }\n    return count == 4;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfy0r0i26.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpfy0r0i26.__unittest_L20_C1() [0x427aaa]

    ??:? void tmpfy0r0i26.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i, j, k,\
    \ l;\n    for (i = 2; i <= n / 4; i += 2) \n    {\n        for (j = i; j <= n\
    \ / 3; j += 2) \n        {\n            for (k = j; k <= n / 2; k += 2) \n   \
    \         {\n                l = n - i - j - k;\n                if (l % 2 ==\
    \ 0 && l >= k) \n                {\n                    return true;\n       \
    \         }\n            }\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ < 0) \n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppddtt91s.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmppddtt91s.__unittest_L18_C1() [0x427a6e]

    ??:? void tmppddtt91s.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            sum = 0;\n \
    \           count = 0;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqvd7f7c3.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpqvd7f7c3.__unittest_L28_C1() [0x427ab1]

    ??:? void tmpqvd7f7c3.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long count = 0;\n    for (long i = 0; i < n;\
    \ i++) \n    {\n        if (i % 2 == 0) \n        {\n            sum += i;\n \
    \           count++;\n            if (sum == n) \n            {\n            \
    \    if (count == 4) \n                {\n                    result = true;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptrlig043.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmptrlig043.__unittest_L31_C1() [0x427ada]

    ??:? void tmptrlig043.__modtest() [0x427b88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int sum = 0;\n    bool result\
    \ = false;\n    for (i = 1; i <= n; i++)\n    {\n        for (j = 1; j <= n; j++)\n\
    \        {\n            for (k = 1; k <= n; k++)\n            {\n            \
    \    for (l = 1; l <= n; l++)\n                {\n                    sum = i\
    \ + j + k + l;\n                    if (sum == n)\n                    {\n   \
    \                     if (i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0)\n\
    \                        {\n                            result = true;\n     \
    \                       break;\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long i = 2;\n    long j = n - 2;\n    while (i <= j) \n    {\n\
    \        if (i + j == n) \n        {\n            if (i % 2 == 0 && j % 2 == 0)\
    \ \n            {\n                result = true;\n                break;\n  \
    \          }\n        }\n        i += 2;\n        j -= 2;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_l9_v3pq.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp_l9_v3pq.__unittest_L28_C1() [0x427aa2]

    ??:? void tmp_l9_v3pq.__modtest() [0x427b90]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    // Write your\
    \ code here\n    if (n % 2 != 0)\n        return false;\n    if (n == 4)\n   \
    \     return true;\n    if (n < 4)\n        return false;\n    return is_equal_to_sum_even(n\
    \ - 2);\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn34u0xxx.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmpn34u0xxx.__unittest_L19_C1() [0x427a62]

    ??:? void tmpn34u0xxx.__modtest() [0x427b50]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0) \n    {\n        long a = n / 2;\n        long\
    \ b = a - 2;\n        long c = b - 2;\n        long d = c - 2;\n        if (a\
    \ % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0) \n        {\n          \
    \  result = true;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcye_lnyl.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e45]

    ??:? void tmpcye_lnyl.__unittest_L24_C1() [0x427ad6]

    ??:? void tmpcye_lnyl.__modtest() [0x427bc4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430040]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb1d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]

    ??:? runModuleUnitTests [0x42b941]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long a, b, c, d;\n    for (a = 0; a <= n; a\
    \ += 2)\n    {\n        for (b = 0; b <= n; b += 2)\n        {\n            for\
    \ (c = 0; c <= n; c += 2)\n            {\n                for (d = 0; d <= n;\
    \ d += 2)\n                {\n                    if (a + b + c + d == n)\n  \
    \                      return true;\n                }\n            }\n      \
    \  }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp13smukfo.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e7d]

    ??:? void tmp13smukfo.__unittest_L33_C1() [0x427b0e]

    ??:? void tmp13smukfo.__modtest() [0x427bfc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bba3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbc9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430078]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]

    ??:? runModuleUnitTests [0x42b979]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    int count = 0;\n    for (int i = 1; i <= n; i++) \n    {\n   \
    \     if (n % i == 0) \n        {\n            count++;\n        }\n    }\n  \
    \  if (count == 4) \n    {\n        result = true;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpslpfv5n_.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpslpfv5n_.__unittest_L25_C1() [0x427a95]

    ??:? void tmpslpfv5n_.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    foreach(a; iota(0, n))\n    {\n        foreach(b;\
    \ iota(0, n))\n        {\n            foreach(c; iota(0, n))\n            {\n\
    \                foreach(d; iota(0, n))\n                {\n                 \
    \   if(a + b + c + d == n && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 ==\
    \ 0)\n                    {\n                        result = true;\n        \
    \                break;\n                    }\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbs849hsf.d(12): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbs849hsf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n <= 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    long a = n / 4;\n    long b = n / 2;\n    long\
    \ c = n / 4;\n    long d = 0;\n    return (a + b + c + d) == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpod6l_1pt.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e1d]

    ??:? void tmpod6l_1pt.__unittest_L22_C1() [0x427aee]

    ??:? void tmpod6l_1pt.__modtest() [0x427b9c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430018]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faf5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]

    ??:? runModuleUnitTests [0x42b919]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n == 0) return true;\n    if (n < 0) return false;\n\
    \    long sum = 0;\n    long i = 0;\n    while (sum < n)\n    {\n        i +=\
    \ 2;\n        sum += i;\n    }\n    return sum == n;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph87s4_uh.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmph87s4_uh.__unittest_L22_C1() [0x427ac1]

    ??:? void tmph87s4_uh.__modtest() [0x427b90]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n == 0) return true;\n    if (n < 0) return false;\n\
    \    if (n == 2) return false;\n    if (n == 4) return true;\n    if (n == 6)\
    \ return true;\n    if (n == 8) return true;\n    if (n == 10) return true;\n\
    \    if (n == 12) return true;\n    if (n == 14) return true;\n    if (n == 16)\
    \ return true;\n    if (n == 18) return true;\n    if (n == 20) return true;\n\
    \    if (n == 22) return true;\n    if (n == 24) return true;\n    if (n == 26)\
    \ return true;\n    if (n == 28) return true;\n    if (n == 30) return true;\n\
    \    if (n == 32) return true;\n    if (n == 34) return true;\n    if (n == 36)\
    \ return true;\n    if (n == 38) return true;\n    if (n == 40) return true;\n\
    \    if (n == 42) return true;\n    if (n == 44) return true;\n    if (n == 46)\
    \ return true;\n    if (n == 48) return true;\n    if (n == 50) return true;\n\
    \    if (n == 52) return true;\n    if (n == 54) return true;\n    if (n == 56)\
    \ return true;\n    if (n == 58) return true;\n    if (n == 60) return true;\n\
    \    if (n == 62) return true;\n    if (n == 64) return true;\n    if (n == 66)\
    \ return true;\n    if (n == 68) return true;\n    if (n == 70) return true;\n\
    \    if (n == 72) return true;\n    if (n == 74) return true;\n    if (n == 76)\
    \ return true;\n    if (n == 78) return true;\n    if (n == 80) return true;\n\
    \    if (n == 82) return true;\n    if (n == 84) return true;\n    if (n == 86)\
    \ return true;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8rfhajtg.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8rfhajtg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long n2 = n\
    \ / 2;\n    long n3 = n / 3;\n    long n4 = n / 4;\n    long n5 = n / 5;\n   \
    \ long n6 = n / 6;\n    long n7 = n / 7;\n    long n8 = n / 8;\n    long n9 =\
    \ n / 9;\n    long n10 = n / 10;\n    long n11 = n / 11;\n    long n12 = n / 12;\n\
    \    long n13 = n / 13;\n    long n14 = n / 14;\n    long n15 = n / 15;\n    long\
    \ n16 = n / 16;\n    long n17 = n / 17;\n    long n18 = n / 18;\n    long n19\
    \ = n / 19;\n    long n20 = n / 20;\n    long n21 = n / 21;\n    long n22 = n\
    \ / 22;\n    long n23 = n / 23;\n    long n24 = n / 24;\n    long n25 = n / 25;\n\
    \    long n26 = n / 26;\n    long n27 = n / 27;\n    long n28 = n / 28;\n    long\
    \ n29 = n / 29;\n    long n30 = n / 30;\n    long n31 = n / 31;\n    long n32\
    \ = n / 32;\n    long n33 = n / 33;\n    long n34 = n / 34;\n    long n35 = n\
    \ / 35;\n    long n36 = n / 36;\n    long n37 = n / 37;\n    long n38 = n / 38;\n\
    \    long n39 = n / 39;\n    long n40 = n / 40;\n    long n41 = n / 41;\n    long\
    \ n42 = n / 42;\n    long n43 = n / 43;\n    long n44 = n / 44;\n    long n45\
    \ = n / 45;\n    long n46 = n / 46;\n    long n47 = n / 47;\n    long n48 = n\
    \ / 48;\n    long n49 = n / 49;\n    long n50 = n / 50;\n    long n51 = n / 51;\n\
    \    long n52 = n / 52;\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn94dm1ew.d(61): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn94dm1ew.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            sum = 0;\n \
    \           count = 0;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqvd7f7c3.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpqvd7f7c3.__unittest_L28_C1() [0x427ab1]

    ??:? void tmpqvd7f7c3.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    if (n == 6)\n        return false;\n   \
    \ if (n == 8)\n        return true;\n    if (n == 10)\n        return false;\n\
    \    if (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n\
    \    if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_85gi_hv.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_85gi_hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ == 2)\n        return false;\n    if (n == 4)\n        return true;\n    if\
    \ (n == 6)\n        return true;\n    if (n == 8)\n        return true;\n    if\
    \ (n == 10)\n        return true;\n    if (n == 12)\n        return true;\n  \
    \  if (n == 14)\n        return true;\n    if (n == 16)\n        return true;\n\
    \    if (n == 18)\n        return true;\n    if (n == 20)\n        return true;\n\
    \    if (n == 22)\n        return true;\n    if (n == 24)\n        return true;\n\
    \    if (n == 26)\n        return true;\n    if (n == 28)\n        return true;\n\
    \    if (n == 30)\n        return true;\n    if (n == 32)\n        return true;\n\
    \    if (n == 34)\n        return true;\n    if (n == 36)\n        return true;\n\
    \    if (n == 38)\n        return true;\n    if (n == 40)\n        return true;\n\
    \    if (n == 42)\n        return true;\n    if (n == 44)\n        return true;\n\
    \    if (n == 46)\n        return true;\n    if (n == 48)\n        return true;\n\
    \    if (n == 50)\n        return true;\n    if (n == 52)\n        return true;\n\
    \    if (n == 54)\n        return true;\n    if (n == 56)\n        return true;\n\
    \    if (n == 58)\n        return true;\n    if (n == 60)\n        return true;\n\
    \    if (n == 62)\n        return true;\n    if (n == 64)\n        return true;\n\
    \    if (n == 66)\n        return true;\n    if (n == 68)\n        return true;\n\
    \    if (n == 70)\n        return true;\n    if (n == 72)\n        return true;\n\
    \    if (n == 74)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaeunv7_4.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaeunv7_4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int sum = 0;\n    int count\
    \ = 0;\n    int even_count = 0;\n    int odd_count = 0;\n    int even_sum = 0;\n\
    \    int odd_sum = 0;\n    int even_sum_count = 0;\n    int odd_sum_count = 0;\n\
    \    int sum_count = 0;\n    int sum_even_count = 0;\n    int sum_odd_count =\
    \ 0;\n    int sum_even_sum = 0;\n    int sum_odd_sum = 0;\n    int sum_even_sum_count\
    \ = 0;\n    int sum_odd_sum_count = 0;\n    int sum_even_sum_count_count = 0;\n\
    \    int sum_odd_sum_count_count = 0;\n    int sum_even_sum_count_count_count\
    \ = 0;\n    int sum_odd_sum_count_count_count = 0;\n    int sum_even_sum_count_count_count_count\
    \ = 0;\n    int sum_odd_sum_count_count_count_count = 0;\n    int sum_even_sum_count_count_count_count_count\
    \ = 0;\n    int sum_odd_sum_count_count_count_count_count = 0;\n    int sum_even_sum_count_count_count_count_count_count\
    \ = 0;\n    int sum_odd_sum_count_count_count_count_count_count = 0;\n    int\
    \ sum_even_sum_count_count_count_count_count_count_count = 0;\n    int sum_odd_sum_count_count_count_count_count_count_count\
    \ = 0;\n    int sum_even_sum_count_count_count_count_count_count_count_count =\
    \ 0;\n    int sum_odd_sum_count_count_count_count_count_count_count_count = 0;\n\
    \    int sum_even_sum_count_count_count_count_count_count_count_count_count =\
    \ 0;\n    int sum_odd_sum\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0r7n6mm1.d(45): Error: semicolon expected, not `unittest`

    /tmp/tmp0r7n6mm1.d(45): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0r7n6mm1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    return is_equal_to_sum_even(n - 8);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphpi90uzw.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmphpi90uzw.__unittest_L18_C1() [0x427ac1]

    ??:? void tmphpi90uzw.__modtest() [0x427b50]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    long a = n / 4;\n    long b = n / 2;\n    long\
    \ c = n - a - b;\n    if (a % 2 != 0 || b % 2 != 0 || c % 2 != 0)\n        return\
    \ false;\n    return true;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7j0421r4.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp7j0421r4.__unittest_L23_C1() [0x427b2d]

    ??:? void tmp7j0421r4.__modtest() [0x427bbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n <= 0)\n\
    \        return false;\n    if (n % 2 != 0)\n        return false;\n    if (n\
    \ % 4 != 0)\n        return false;\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyc5arqjp.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpyc5arqjp.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpyc5arqjp.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long n_copy\
    \ = n;\n    long sum = 0;\n    long count = 0;\n    while (n_copy > 0) \n    {\n\
    \        if (n_copy % 2 == 0) \n        {\n            sum += n_copy;\n      \
    \      count++;\n        }\n        n_copy--;\n    }\n    return count == 4 &&\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvwpzcty1.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpvwpzcty1.__unittest_L24_C1() [0x427aca]

    ??:? void tmpvwpzcty1.__modtest() [0x427b78]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long sum = 0;\n    for\
    \ (i = 0; i <= n; i++)\n    {\n        for (j = 0; j <= n; j++)\n        {\n \
    \           for (k = 0; k <= n; k++)\n            {\n                for (l =\
    \ 0; l <= n; l++)\n                {\n                    sum = i + j + k + l;\n\
    \                    if (sum == n)\n                    {\n                  \
    \      if ((i % 2 == 0) && (j % 2 == 0) && (k % 2 == 0) && (l % 2 == 0))\n   \
    \                     {\n                            return true;\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7gq4vsr7.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ead]

    ??:? void tmp7gq4vsr7.__unittest_L37_C1() [0x427b3e]

    ??:? void tmp7gq4vsr7.__modtest() [0x427c2c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbd3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa66]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300a8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa3d]

    ??:? runModuleUnitTests [0x42b9a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ == 2) \n        return false;\n    if (n == 4) \n        return true;\n    long\
    \ a = 2;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long sum = a\
    \ + b + c + d;\n    while (sum < n) \n    {\n        if (sum == n) \n        \
    \    return true;\n        if (a < n / 4) \n            a += 2;\n        else\
    \ if (b < n / 4) \n            b += 2;\n        else if (c < n / 4) \n       \
    \     c += 2;\n        else if (d < n / 4) \n            d += 2;\n        else\
    \ \n            return false;\n        sum = a + b + c + d;\n    }\n    return\
    \ false;\n}\n/*\nEvaluate whether the given number n can be written as the sum\
    \ of exactly 4 positive odd numbers\n    Example\n                \n*/\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxc_2_wkw.d(50): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ee5]

    ??:? void tmpxc_2_wkw.__unittest_L46_C1() [0x427b7a]

    ??:? void tmpxc_2_wkw.__modtest() [0x427c68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300e0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbbd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa75]

    ??:? runModuleUnitTests [0x42b9e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428334]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0)\n    {\n        long a = n / 4;\n        long\
    \ b = a + 1;\n        long c = b + 1;\n        long d = c + 1;\n        if (a\
    \ + b + c + d == n)\n        {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpioa8zvin.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpioa8zvin.__unittest_L24_C1() [0x427ac6]

    ??:? void tmpioa8zvin.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    long sum;\n    for (a = 2; a <= n; a +=\
    \ 2) \n    {\n        for (b = 2; b <= n; b += 2) \n        {\n            for\
    \ (c = 2; c <= n; c += 2) \n            {\n                for (d = 2; d <= n;\
    \ d += 2) \n                {\n                    sum = a + b + c + d;\n    \
    \                if (sum == n) \n                    {\n                     \
    \   result = true;\n                        break;\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    else \n    {\n        long a = n / 2;\n     \
    \   long b = n / 2;\n        long c = n / 2;\n        long d = n / 2;\n      \
    \  long sum = a + b + c + d;\n        if (sum == n)\n            return true;\n\
    \        else \n        {\n            for (int i = 0; i < n / 2; i++) \n    \
    \        {\n                a = n / 2 - i;\n                b = n / 2 - i;\n \
    \               c = n / 2 - i;\n                d = n / 2 - i;\n             \
    \   sum = a + b + c + d;\n                if (sum == n)\n                    return\
    \ true;\n            }\n            return false;\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplga58s46.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e5d]

    ??:? void tmplga58s46.__unittest_L37_C1() [0x427aee]

    ??:? void tmplga58s46.__modtest() [0x427bdc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb83]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa16]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430058]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]

    ??:? runModuleUnitTests [0x42b959]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ac]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n\
    \        sum += i;\n        if (sum == n) \n        {\n            result = true;\n\
    \            break;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmps0cpcxox.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmps0cpcxox.__unittest_L23_C1() [0x427a91]

    ??:? void tmps0cpcxox.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    long\
    \ a = n / 2;\n    long b = n / 2;\n    long c = n / 2;\n    long d = n / 2;\n\
    \    while (a >= 0) \n    {\n        while (b >= 0) \n        {\n            while\
    \ (c >= 0) \n            {\n                while (d >= 0) \n                {\n\
    \                    if (a + b + c + d == n) \n                        return\
    \ true;\n                    d--;\n                }\n                c--;\n \
    \               d = n / 2;\n            }\n            b--;\n            c = n\
    \ / 2;\n            d = n / 2;\n        }\n        a--;\n        b = n / 2;\n\
    \        c = n / 2;\n        d = n / 2;\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgz5zsbhs.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e95]

    ??:? void tmpgz5zsbhs.__unittest_L44_C1() [0x427b2a]

    ??:? void tmpgz5zsbhs.__modtest() [0x427c18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbbb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa4e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbe1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430090]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]

    ??:? runModuleUnitTests [0x42b991]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    if (n == 12) \n        return true;\n    if\
    \ (n == 16) \n        return true;\n    if (n == 20) \n        return true;\n\
    \    if (n == 24) \n        return true;\n    if (n == 28) \n        return true;\n\
    \    if (n == 32) \n        return true;\n    if (n == 36) \n        return true;\n\
    \    if (n == 40) \n        return true;\n    if (n == 44) \n        return true;\n\
    \    if (n == 48) \n        return true;\n    if (n == 52) \n        return true;\n\
    \    if (n == 56) \n        return true;\n    if (n == 60) \n        return true;\n\
    \    if (n == 64) \n        return true;\n    if (n == 68) \n        return true;\n\
    \    if (n == 72) \n        return true;\n    if (n == 76) \n        return true;\n\
    \    if (n == 80) \n        return true;\n    if (n == 84) \n        return true;\n\
    \    if (n == 88) \n        return true;\n    if (n == 92) \n        return true;\n\
    \    if (n == 96) \n        return true;\n    if (n == 100) \n        return true;\n\
    \    if (n == 104) \n        return true;\n    if (n == 108) \n        return\
    \ true;\n    if (n == 112) \n        return true;\n    if (n == 116) \n      \
    \  return true;\n    if (n == 120) \n        return true;\n    if (n == 124) \n\
    \        return true;\n    if (n == 128) \n        return true;\n    if (n ==\
    \ 132) \n        return true;\n    if (n == 136) \n        return true;\n    if\
    \ (n == 140) \n        return true;\n    if (\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkiu_ssl.d(83): Error: expression expected, not `unittest`

    /tmp/tmpvkiu_ssl.d(84): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkiu_ssl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    long\
    \ a = 2;\n    long b = 2;\n    long c = 2;\n    long d = n - 6;\n    while (d\
    \ >= a) \n    {\n        while (d >= b) \n        {\n            while (d >= c)\
    \ \n            {\n                if (a + b + c + d == n) \n                \
    \    return true;\n                c += 2;\n            }\n            b += 2;\n\
    \            c = 2;\n        }\n        a += 2;\n        b = 2;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n == 10)\n        return false;\n    if\
    \ (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n \
    \   if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n    if (n == 74)\n        return false;\n\
    \    if (n == 76)\n        return true;\n    if (n == 78)\n        return false;\n\
    \    if (n == 80)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ri2g3y.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ri2g3y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i = 2;\n\
    \    long j = 2;\n    long k = 2;\n    long l = 2;\n    long sum = 0;\n    for\
    \ (; i <= n/4; i += 2) \n    {\n        for (; j <= n/3; j += 2) \n        {\n\
    \            for (; k <= n/2; k += 2) \n            {\n                for (;\
    \ l <= n; l += 2) \n                {\n                    sum = i + j + k + l;\n\
    \                    if (sum == n) \n                    {\n                 \
    \       return true;\n                    }\n                }\n             \
    \   l = 2;\n            }\n            k = 2;\n        }\n        j = 2;\n   \
    \ }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0) \n    {\n        long a = 0;\n        long b =\
    \ 0;\n        long c = 0;\n        long d = 0;\n        long sum = 0;\n      \
    \  long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n\
    \        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q\
    \ = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n      \
    \  long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long aa = 0;\n        long\
    \ bb = 0;\n        long cc = 0;\n        long dd = 0;\n        long ee = 0;\n\
    \        long ff = 0;\n        long gg = 0;\n        long hh = 0;\n        long\
    \ ii = 0;\n        long jj = 0;\n        long kk = 0;\n        long ll = 0;\n\
    \        long mm = 0;\n        long oo = 0;\n        long pp = 0;\n        long\
    \ qq = 0;\n        long rr = 0;\n        long ss = 0;\n        long tt = 0;\n\
    \        long uu = 0;\n        long vv = 0;\n        long ww = 0;\n        long\
    \ xx = 0;\n        long yy = 0;\n        long zz = 0;\n        long aaa = 0;\n\
    \        long bbb = 0;\n        long ccc = 0;\n        long ddd = 0;\n       \
    \ long eee = 0;\n        long fff = 0;\n        long ggg = 0;\n        long hhh\
    \ = 0;\n        long iii = 0;\n        long jjj = 0;\n        long kkk = 0;\n\
    \        long lll = 0;\n        long mmm = 0;\n        long ooo = 0;\n       \
    \ long ppp = 0;\n        long qqq = 0;\n        long rrr = 0;\n        long sss\
    \ = 0;\n\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptr2wipc1.d(79): Error: found `unittest` instead of statement

    /tmp/tmptr2wipc1.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptr2wipc1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long a = 0;\n    long b = n;\n    long c =\
    \ 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n   \
    \ long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l =\
    \ 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n   \
    \ long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v =\
    \ 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n   \
    \ long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long\
    \ ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai =\
    \ 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n\
    \    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long\
    \ ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av =\
    \ 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n\
    \    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long\
    \ be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi =\
    \ 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n\
    \    long bn = 0\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9lyg8y7s.d(81): Error: semicolon expected, not `unittest`

    /tmp/tmp9lyg8y7s.d(81): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9lyg8y7s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164335
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    long a = n / 2;\n    long b = n / 2;\n    while (a > 0) {\n        if (a\
    \ % 2 == 0 && b % 2 == 0) return true;\n        a--;\n        b++;\n    }\n  \
    \  return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n\
    \    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n\
    \    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpar1f7u9x.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpar1f7u9x.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpar1f7u9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    for (long i = 1; i <= n / 4; i++) \n    {\n        for (long j\
    \ = i; j <= n / 3; j++) \n        {\n            for (long k = j; k <= n / 2;\
    \ k++) \n            {\n                long l = n - i - j - k;\n            \
    \    if (l >= k && l % 2 == 0) \n                {\n                    result\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (result) \n            {\n                break;\n            }\n\
    \        }\n        if (result) \n        {\n            break;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvd6k8wrl.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e65]

    ??:? void tmpvd6k8wrl.__unittest_L36_C1() [0x427b15]

    ??:? void tmpvd6k8wrl.__modtest() [0x427be4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb8b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa1e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430060]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]

    ??:? runModuleUnitTests [0x42b961]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282b4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ < 0) \n        return false;\n    long sum = 0;\n    long count = 0;\n    for\
    \ (long i = 2; i <= n; i += 2) \n    {\n        sum += i;\n        count++;\n\
    \        if (sum == n) \n            return true;\n        if (sum > n) \n   \
    \         return false;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpbxab6ole.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e35]

    ??:? void tmpbxab6ole.__unittest_L29_C1() [0x427ae9]

    ??:? void tmpbxab6ole.__modtest() [0x427bb8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb5b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ee]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430030]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9c5]

    ??:? runModuleUnitTests [0x42b931]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428284]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 4)\n        return true;\n    if (n\
    \ < 4)\n        return false;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    long sum = a + b + c + d;\n    long diff\
    \ = n - sum;\n    while (diff != 0)\n    {\n        if (diff > 0)\n        {\n\
    \            if (a > 2)\n                a -= 2;\n            else if (b > 2)\n\
    \                b -= 2;\n            else if (c > 2)\n                c -= 2;\n\
    \            else if (d > 2)\n                d -= 2;\n            else\n    \
    \            return false;\n        }\n        else\n        {\n            if\
    \ (a < n - 6)\n                a += 2;\n            else if (b < n - 6)\n    \
    \            b += 2;\n            else if (c < n - 6)\n                c += 2;\n\
    \            else if (d < n - 6)\n                d += 2;\n            else\n\
    \                return false;\n        }\n        sum = a + b + c + d;\n    \
    \    diff = n - sum;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvcy7l1bq.d(59): unittest failure

    ----------------

    ??:? _d_unittestp [0x427efd]

    ??:? void tmpvcy7l1bq.__unittest_L55_C1() [0x427b8e]

    ??:? void tmpvcy7l1bq.__modtest() [0x427c7c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aab6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbd5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa8d]

    ??:? runModuleUnitTests [0x42b9f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42834c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n \
    \   for (i = 1; i < n; i++) \n    {\n        for (j = 1; j < n; j++) \n      \
    \  {\n            for (k = 1; k < n; k++) \n            {\n                for\
    \ (l = 1; l < n; l++) \n                {\n                    if (i + j + k +\
    \ l == n && i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0) \n         \
    \           {\n                        result = true;\n                      \
    \  break;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long t = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long\
    \ d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long u = 0;\n    long o = 0;\n    long\
    \ count = 0;\n    long count1 = 0;\n    long count2 = 0;\n    long count3 = 0;\n\
    \    long count4 = 0;\n    long count5 = 0;\n    long count6 = 0;\n    long count7\
    \ = 0;\n    long count8 = 0;\n    long count9 = 0;\n    long count10 = 0;\n  \
    \  long count11 = 0;\n    long count12 = 0;\n    long count13 = 0;\n    long count14\
    \ = 0;\n    long count15 = 0;\n    long count16 = 0;\n    long count17 = 0;\n\
    \    long count18 = 0;\n    long count19 = 0;\n    long count20 = 0;\n    long\
    \ count21 = 0;\n    long count22 = 0;\n    long count23 = 0;\n    long count24\
    \ = 0;\n    long count25 = 0;\n    long count26 = 0;\n    long count27 = 0;\n\
    \    long count28 = 0;\n    long count29 = 0;\n    long count30 = 0;\n    long\
    \ count31 = 0;\n    long count32 = 0;\n    long count33 = 0;\n    long count34\
    \ = 0;\n    long count35 = 0;\n    long count36 = 0;\n    long count37 = 0;\n\
    \    long count38 = 0;\n    long count39 = 0;\n   \nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpubex4i6w.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpubex4i6w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    if (n == 10) return false;\n    if (n == 12) return true;\n    if (n == 14)\
    \ return false;\n    if (n == 16) return true;\n    if (n == 18) return false;\n\
    \    if (n == 20) return true;\n    if (n == 22) return false;\n    if (n == 24)\
    \ return true;\n    if (n == 26) return false;\n    if (n == 28) return true;\n\
    \    if (n == 30) return false;\n    if (n == 32) return true;\n    if (n == 34)\
    \ return false;\n    if (n == 36) return true;\n    if (n == 38) return false;\n\
    \    if (n == 40) return true;\n    if (n == 42) return false;\n    if (n == 44)\
    \ return true;\n    if (n == 46) return false;\n    if (n == 48) return true;\n\
    \    if (n == 50) return false;\n    if (n == 52) return true;\n    if (n == 54)\
    \ return false;\n    if (n == 56) return true;\n    if (n == 58) return false;\n\
    \    if (n == 60) return true;\n    if (n == 62) return false;\n    if (n == 64)\
    \ return true;\n    if (n == 66) return false;\n    if (n == 68) return true;\n\
    \    if (n == 70) return false;\n    if (n == 72) return true;\n    if (n == 74)\
    \ return false;\n    if (n == 76) return true;\n    if (n == 78) return false;\n\
    \    if (n == 80) return true;\n    if (n == 82) return false;\n    if (n == 84)\
    \ return true;\n    if (n == 86) return false;\n    if (n == 88) return true;\n\
    \    if (n == 90) return false;\n    if (n == 92) return true;\n    if (n == 94)\
    \ return false;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpch9bk6lt.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch9bk6lt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    long sum = 0;\n    for (a = 2; a <= n; a\
    \ += 2) \n    {\n        for (b = 2; b <= n; b += 2) \n        {\n           \
    \ for (c = 2; c <= n; c += 2) \n            {\n                for (d = 2; d <=\
    \ n; d += 2) \n                {\n                    sum = a + b + c + d;\n \
    \                   if (sum == n) \n                    {\n                  \
    \      result = true;\n                        break;\n                    }\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ == 2) \n        return false;\n    if (n == 4) \n        return true;\n    if\
    \ (n == 6) \n        return false;\n    if (n == 8) \n        return true;\n \
    \   if (n == 10) \n        return false;\n    if (n == 12) \n        return true;\n\
    \    if (n == 14) \n        return false;\n    if (n == 16) \n        return true;\n\
    \    if (n == 18) \n        return false;\n    if (n == 20) \n        return true;\n\
    \    if (n == 22) \n        return false;\n    if (n == 24) \n        return true;\n\
    \    if (n == 26) \n        return false;\n    if (n == 28) \n        return true;\n\
    \    if (n == 30) \n        return false;\n    if (n == 32) \n        return true;\n\
    \    if (n == 34) \n        return false;\n    if (n == 36) \n        return true;\n\
    \    if (n == 38) \n        return false;\n    if (n == 40) \n        return true;\n\
    \    if (n == 42) \n        return false;\n    if (n == 44) \n        return true;\n\
    \    if (n == 46) \n        return false;\n    if (n == 48) \n        return true;\n\
    \    if (n == 50) \n        return false;\n    if (n == 52) \n        return true;\n\
    \    if (n == 54) \n        return false;\n    if (n == 56) \n        return true;\n\
    \    if (n == 58) \n        return false;\n    if (n == 60) \n        return true;\n\
    \    if (n == 62) \n        return false;\n    if (n == 64) \n        return true;\n\
    \    if (n == 66) \n        return false;\n    if (n == 68) \n        return true;\n\
    \    if (\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpog3sp4_a.d(83): Error: expression expected, not `unittest`

    /tmp/tmpog3sp4_a.d(84): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpog3sp4_a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    long a = 2;\n    long b = n / 2;\n    long c\
    \ = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n \
    \   long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l\
    \ = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n \
    \   long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v\
    \ = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n \
    \   long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long\
    \ ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai =\
    \ 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n\
    \    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long\
    \ ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av =\
    \ 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n\
    \    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long\
    \ be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi =\
    \ 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n\
    \    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy1ixea2p.d(80): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy1ixea2p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ == 2)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplmpmgta7.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmplmpmgta7.__unittest_L18_C1() [0x427aae]

    ??:? void tmplmpmgta7.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i = 2;\n\
    \    long j = n - i;\n    while (i <= j) \n    {\n        if (i % 2 == 0 && j\
    \ % 2 == 0) \n        {\n            return true;\n        }\n        i += 1;\n\
    \        j -= 1;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnbqzi4cx.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpnbqzi4cx.__unittest_L23_C1() [0x427a86]

    ??:? void tmpnbqzi4cx.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n < 8) return\
    \ false;\n    if (n % 2 != 0) return false;\n    if (n % 4 == 0) return true;\n\
    \    return is_equal_to_sum_even(n - 4);\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpbriiojde.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpbriiojde.__unittest_L15_C1() [0x427ad5]

    ??:? void tmpbriiojde.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i, j, k,\
    \ l;\n    for (i = 2; i <= n / 4; i += 2) \n    {\n        for (j = i; j <= n\
    \ / 3; j += 2) \n        {\n            for (k = j; k <= n / 2; k += 2) \n   \
    \         {\n                l = n - i - j - k;\n                if (l % 2 ==\
    \ 0 && l >= k) \n                {\n                    return true;\n       \
    \         }\n            }\n        }\n    }\n    return false;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool ret = false;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ sum = 0;\n    long max = n / 4;\n    for (i = 0; i <= max; i++)\n    {\n   \
    \     for (j = 0; j <= max; j++)\n        {\n            for (k = 0; k <= max;\
    \ k++)\n            {\n                for (l = 0; l <= max; l++)\n          \
    \      {\n                    sum = i + j + k + l;\n                    if (sum\
    \ == n)\n                    {\n                        ret = true;\n        \
    \                break;\n                    }\n                }\n          \
    \      if (ret)\n                {\n                    break;\n             \
    \   }\n            }\n            if (ret)\n            {\n                break;\n\
    \            }\n        }\n        if (ret)\n        {\n            break;\n \
    \       }\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprmgv4xz9.d(53): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e75]

    ??:? void tmprmgv4xz9.__unittest_L49_C1() [0x427b06]

    ??:? void tmprmgv4xz9.__modtest() [0x427bf4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa2e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbc1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430070]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa05]

    ??:? runModuleUnitTests [0x42b971]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n\
    \    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n\
    \    long mmm = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long y\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq4sdfkk_.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpq4sdfkk_.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq4sdfkk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long count =\
    \ 0;\n    long sum = 0;\n    long i = 2;\n    while (i <= n) \n    {\n       \
    \ if (n % i == 0) \n        {\n            count++;\n            sum += i;\n \
    \       }\n        i += 2;\n    }\n    return count == 4 && sum == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz2jnhwyv.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpz2jnhwyv.__unittest_L24_C1() [0x427ad2]

    ??:? void tmpz2jnhwyv.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    long sum = 0;\n    for (long i = 2; i <= n; i += 2) {\n\
    \        sum += i;\n        if (sum == n) return true;\n        if (sum > n) return\
    \ false;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgv93hah7.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e15]

    ??:? void tmpgv93hah7.__unittest_L19_C1() [0x427ac5]

    ??:? void tmpgv93hah7.__modtest() [0x427b94]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430010]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]

    ??:? runModuleUnitTests [0x42b911]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long w = 0;\n\
    \    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm =\
    \ 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n\
    \    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long\
    \ aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee =\
    \ 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n   \nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj47aahsy.d(79): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj47aahsy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    foreach(a; iota(1, n))\n    {\n        foreach(b;\
    \ iota(1, n))\n        {\n            foreach(c; iota(1, n))\n            {\n\
    \                foreach(d; iota(1, n))\n                {\n                 \
    \   if(a + b + c + d == n && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 ==\
    \ 0)\n                    {\n                        result = true;\n        \
    \                break;\n                    }\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqdrb17n4.d(12): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqdrb17n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    return is_equal_to_sum_even(n - 4);\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgtldlz97.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpgtldlz97.__unittest_L22_C1() [0x427a86]

    ??:? void tmpgtldlz97.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long[] evens = [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,298,300,302,304,306,308,310,312,314,316,318,320,322,324,326,328,330,332,334,336,338,340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,372,374,376,378,380,382,384,386,388,390,392,394,396,398,400,402,404,406,408,410,412,414,416,418,420,422,424,426,428,430,432,434,436,438,440,442,444,446,448,450,452,454,456,458,460,462,464,466,468,470,472,474,476,478,480,482,484,486,488,490,492,494,496\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbq201c8m.d(12): Error: comma expected separating array initializers,
    not `unittest`

    /tmp/tmpbq201c8m.d(13): Error: semicolon expected, not `{`

    /tmp/tmpbq201c8m.d(25): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbq201c8m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 ==\
    \ 1) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ == 4) \n        return true;\n    if (n == 8) \n        return true;\n    if\
    \ (n == 12) \n        return true;\n    if (n == 16) \n        return true;\n\
    \    if (n == 20) \n        return true;\n    if (n == 24) \n        return true;\n\
    \    if (n == 28) \n        return true;\n    if (n == 32) \n        return true;\n\
    \    if (n == 36) \n        return true;\n    if (n == 40) \n        return true;\n\
    \    if (n == 44) \n        return true;\n    if (n == 48) \n        return true;\n\
    \    if (n == 52) \n        return true;\n    if (n == 56) \n        return true;\n\
    \    if (n == 60) \n        return true;\n    if (n == 64) \n        return true;\n\
    \    if (n == 68) \n        return true;\n    if (n == 72) \n        return true;\n\
    \    if (n == 76) \n        return true;\n    if (n == 80) \n        return true;\n\
    \    if (n == 84) \n        return true;\n    if (n == 88) \n        return true;\n\
    \    if (n == 92) \n        return true;\n    if (n == 96) \n        return true;\n\
    \    if (n == 100) \n        return true;\n    if (n == 104) \n        return\
    \ true;\n    if (n == 108) \n        return true;\n    if (n == 112) \n      \
    \  return true;\n    if (n == 116) \n        return true;\n    if (n == 120) \n\
    \        return true;\n    if (n == 124) \n        return true;\n    if (n ==\
    \ 128) \n        return true;\n    if (n == 132) \n        return true;\n    if\
    \ (n == 136) \n        return true;\n    if (\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_x0hafd4.d(83): Error: expression expected, not `unittest`

    /tmp/tmp_x0hafd4.d(84): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_x0hafd4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long i = 2;\n\
    \    long j = n - 2;\n    long k = 2;\n    long l = n - 2;\n    while (i <= j)\n\
    \    {\n        while (k <= l)\n        {\n            if (i + j + k + l == n)\n\
    \            {\n                return true;\n            }\n            k +=\
    \ 2;\n            l -= 2;\n        }\n        i += 2;\n        j -= 2;\n    }\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpucey2l4h.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e15]

    ??:? void tmpucey2l4h.__unittest_L30_C1() [0x427ae6]

    ??:? void tmpucey2l4h.__modtest() [0x427b94]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430010]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]

    ??:? runModuleUnitTests [0x42b911]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    long i = 2;\n    while (i <= n) \n    {\n        if\
    \ (n % i == 0) \n        {\n            if (i % 2 == 0) \n            {\n    \
    \            sum += i;\n                count++;\n            }\n            n\
    \ /= i;\n        }\n        else \n        {\n            i++;\n        }\n  \
    \  }\n    return count == 4 && sum == n;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8dlf9_fp.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e1d]

    ??:? void tmp8dlf9_fp.__unittest_L31_C1() [0x427af2]

    ??:? void tmp8dlf9_fp.__modtest() [0x427ba0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430018]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faf5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]

    ??:? runModuleUnitTests [0x42b919]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 4)\n        return true;\n    if (n\
    \ < 4)\n        return false;\n    long a = n / 2;\n    long b = n / 2;\n    long\
    \ c = n / 2;\n    long d = n / 2;\n    while (a + b + c + d != n)\n    {\n   \
    \     if (a == 0)\n            return false;\n        a--;\n        b++;\n   \
    \     if (b == n)\n        {\n            b--;\n            c++;\n        }\n\
    \        if (c == n)\n        {\n            c--;\n            d++;\n        }\n\
    \        if (d == n)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0isf_ezh.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e5d]

    ??:? void tmp0isf_ezh.__unittest_L41_C1() [0x427af2]

    ??:? void tmp0isf_ezh.__modtest() [0x427be0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb83]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa16]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430058]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]

    ??:? runModuleUnitTests [0x42b959]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ac]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            sum = 0;\n \
    \           count = 0;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqvd7f7c3.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpqvd7f7c3.__unittest_L28_C1() [0x427ab1]

    ??:? void tmpqvd7f7c3.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    while (sum < n)\n    {\n \
    \       sum += i;\n        i += 2;\n    }\n    if (sum == n)\n        result =\
    \ true;\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpiurxc8tz.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpiurxc8tz.__unittest_L22_C1() [0x427a91]

    ??:? void tmpiurxc8tz.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    else if (n % 2 == 0)\n    {\n        long sum\
    \ = 0;\n        for (long i = 0; i < n; i++)\n        {\n            if (i % 2\
    \ == 0)\n            {\n                sum += i;\n                if (sum ==\
    \ n)\n                    return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq37cy815.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e25]

    ??:? void tmpq37cy815.__unittest_L27_C1() [0x427ad9]

    ??:? void tmpq37cy815.__modtest() [0x427ba8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb4b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9de]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb71]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430020]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fafd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]

    ??:? runModuleUnitTests [0x42b921]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428274]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long n_copy\
    \ = n;\n    long sum = 0;\n    long count = 0;\n    while (n_copy > 0) \n    {\n\
    \        if (n_copy % 2 == 0) \n        {\n            sum += n_copy;\n      \
    \      count++;\n        }\n        n_copy--;\n    }\n    return count == 4 &&\
    \ sum == n;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n \
    \   assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n   \
    \ assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvwpzcty1.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpvwpzcty1.__unittest_L24_C1() [0x427aca]

    ??:? void tmpvwpzcty1.__modtest() [0x427b78]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long sum = 0;\n    for (i = 2; i <= n / 4; i += 2) \n    {\n        for (j\
    \ = 2; j <= n / 4; j += 2) \n        {\n            for (k = 2; k <= n / 4; k\
    \ += 2) \n            {\n                for (l = 2; l <= n / 4; l += 2) \n  \
    \              {\n                    sum = i + j + k + l;\n                 \
    \   if (sum == n) \n                    {\n                        result = true;\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplfdpwqb7.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e85]

    ??:? void tmplfdpwqb7.__unittest_L36_C1() [0x427b79]

    ??:? void tmplfdpwqb7.__modtest() [0x427c08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa3e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430080]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]

    ??:? runModuleUnitTests [0x42b981]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    if (n == 6)\n        return false;\n   \
    \ if (n == 8)\n        return true;\n    if (n == 10)\n        return false;\n\
    \    if (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n\
    \    if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_85gi_hv.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_85gi_hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long a = 0;\n    long b = 0;\n    long c =\
    \ 0;\n    long d = 0;\n    long sum = 0;\n    for (a = 0; a <= n; a += 2)\n  \
    \  {\n        for (b = 0; b <= n; b += 2)\n        {\n            for (c = 0;\
    \ c <= n; c += 2)\n            {\n                for (d = 0; d <= n; d += 2)\n\
    \                {\n                    sum = a + b + c + d;\n               \
    \     if (sum == n)\n                        return true;\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxq_qz06n.d(42): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e7d]

    ??:? void tmpxq_qz06n.__unittest_L38_C1() [0x427b0e]

    ??:? void tmpxq_qz06n.__modtest() [0x427bfc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bba3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbc9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430078]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]

    ??:? runModuleUnitTests [0x42b979]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long a = 0;\n    long b = 0;\n    long c =\
    \ 0;\n    long d = 0;\n    for (long i = 0; i <= n / 2; i += 2)\n    {\n     \
    \   a = i;\n        for (long j = 0; j <= n / 2; j += 2)\n        {\n        \
    \    b = j;\n            for (long k = 0; k <= n / 2; k += 2)\n            {\n\
    \                c = k;\n                for (long l = 0; l <= n / 2; l += 2)\n\
    \                {\n                    d = l;\n                    if (a + b\
    \ + c + d == n)\n                        return true;\n                }\n   \
    \         }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp44arl6n0.d(44): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ec5]

    ??:? void tmp44arl6n0.__unittest_L40_C1() [0x427b5a]

    ??:? void tmp44arl6n0.__modtest() [0x427c48]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc11]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300c0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb9d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa55]

    ??:? runModuleUnitTests [0x42b9c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428314]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ < 0) \n        return false;\n    if (n == 2) \n        return false;\n    if\
    \ (n == 4) \n        return true;\n    if (n == 6) \n        return false;\n \
    \   if (n == 8) \n        return true;\n    if (n == 10) \n        return false;\n\
    \    if (n == 12) \n        return true;\n    if (n == 14) \n        return false;\n\
    \    if (n == 16) \n        return true;\n    if (n == 18) \n        return false;\n\
    \    if (n == 20) \n        return true;\n    if (n == 22) \n        return false;\n\
    \    if (n == 24) \n        return true;\n    if (n == 26) \n        return false;\n\
    \    if (n == 28) \n        return true;\n    if (n == 30) \n        return false;\n\
    \    if (n == 32) \n        return true;\n    if (n == 34) \n        return false;\n\
    \    if (n == 36) \n        return true;\n    if (n == 38) \n        return false;\n\
    \    if (n == 40) \n        return true;\n    if (n == 42) \n        return false;\n\
    \    if (n == 44) \n        return true;\n    if (n == 46) \n        return false;\n\
    \    if (n == 48) \n        return true;\n    if (n == 50) \n        return false;\n\
    \    if (n == 52) \n        return true;\n    if (n == 54) \n        return false;\n\
    \    if (n == 56) \n        return true;\n    if (n == 58) \n        return false;\n\
    \    if (n == 60) \n        return true;\n    if (n == 62) \n        return false;\n\
    \    if (n == 64) \n        return true;\n    if (n == 66) \n        return false;\n\
    \    if (\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2m7jwiv0.d(83): Error: expression expected, not `unittest`

    /tmp/tmp2m7jwiv0.d(84): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2m7jwiv0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long count = 0;\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        if (i % 2 == 0)\n        {\n            sum += i;\n   \
    \         count++;\n            if (sum == n)\n            {\n               \
    \ result = true;\n                break;\n            }\n            else if (sum\
    \ > n)\n            {\n                break;\n            }\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqa7lyn3k.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpqa7lyn3k.__unittest_L32_C1() [0x427abd]

    ??:? void tmpqa7lyn3k.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    long sum = 0;\n\
    \    long count = 0;\n    for (long i = 2; i <= n; i += 2) \n    {\n        sum\
    \ += i;\n        count++;\n        if (sum == n) \n        {\n            return\
    \ true;\n        }\n        if (sum > n) \n        {\n            sum = 0;\n \
    \           count = 0;\n        }\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqvd7f7c3.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpqvd7f7c3.__unittest_L28_C1() [0x427ab1]

    ??:? void tmpqvd7f7c3.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long a = 0;\n    long b = n;\n    while (a\
    \ <= b)\n    {\n        long c = (a + b) / 2;\n        long d = n - c;\n     \
    \   if (c % 2 != 0)\n            c--;\n        if (d % 2 != 0)\n            d--;\n\
    \        if (c + d == n)\n            return true;\n        if (c + d > n)\n \
    \           b = c - 2;\n        else\n            a = c + 2;\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_xrdzwlr.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e9d]

    ??:? void tmp_xrdzwlr.__unittest_L35_C1() [0x427b32]

    ??:? void tmp_xrdzwlr.__modtest() [0x427c20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbc3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa56]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbe9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430098]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa2d]

    ??:? runModuleUnitTests [0x42b999]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    long n_half = n / 2;\n    long n_half_sqrt = cast(long)sqrt(n_half);\n  \
    \  for (long i = 2; i <= n_half_sqrt; i += 2) \n    {\n        if (n_half % i\
    \ == 0) \n        {\n            long j = n_half / i;\n            if (j % 2 ==\
    \ 0) return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvqt4f5h5.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvqt4f5h5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    if (n == 2)\n        return false;\n    if\
    \ (n == 4)\n        return true;\n    if (n == 6)\n        return false;\n   \
    \ if (n == 8)\n        return true;\n    if (n == 10)\n        return false;\n\
    \    if (n == 12)\n        return true;\n    if (n == 14)\n        return false;\n\
    \    if (n == 16)\n        return true;\n    if (n == 18)\n        return false;\n\
    \    if (n == 20)\n        return true;\n    if (n == 22)\n        return false;\n\
    \    if (n == 24)\n        return true;\n    if (n == 26)\n        return false;\n\
    \    if (n == 28)\n        return true;\n    if (n == 30)\n        return false;\n\
    \    if (n == 32)\n        return true;\n    if (n == 34)\n        return false;\n\
    \    if (n == 36)\n        return true;\n    if (n == 38)\n        return false;\n\
    \    if (n == 40)\n        return true;\n    if (n == 42)\n        return false;\n\
    \    if (n == 44)\n        return true;\n    if (n == 46)\n        return false;\n\
    \    if (n == 48)\n        return true;\n    if (n == 50)\n        return false;\n\
    \    if (n == 52)\n        return true;\n    if (n == 54)\n        return false;\n\
    \    if (n == 56)\n        return true;\n    if (n == 58)\n        return false;\n\
    \    if (n == 60)\n        return true;\n    if (n == 62)\n        return false;\n\
    \    if (n == 64)\n        return true;\n    if (n == 66)\n        return false;\n\
    \    if (n == 68)\n        return true;\n    if (n == 70)\n        return false;\n\
    \    if (n == 72)\n        return true;\n\nunittest\n{\n    alias candidate =\
    \ is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_85gi_hv.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_85gi_hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq3v8unug.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq3v8unug.__unittest_L18_C1() [0x427a6e]

    ??:? void tmpq3v8unug.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) return false;\n    if (n < 8) return false;\n    if (n == 8) return true;\n\
    \    if (n == 10) return false;\n    if (n == 12) return true;\n    if (n == 14)\
    \ return false;\n    if (n == 16) return true;\n    if (n == 18) return false;\n\
    \    if (n == 20) return true;\n    if (n == 22) return false;\n    if (n == 24)\
    \ return true;\n    if (n == 26) return false;\n    if (n == 28) return true;\n\
    \    if (n == 30) return false;\n    if (n == 32) return true;\n    if (n == 34)\
    \ return false;\n    if (n == 36) return true;\n    if (n == 38) return false;\n\
    \    if (n == 40) return true;\n    if (n == 42) return false;\n    if (n == 44)\
    \ return true;\n    if (n == 46) return false;\n    if (n == 48) return true;\n\
    \    if (n == 50) return false;\n    if (n == 52) return true;\n    if (n == 54)\
    \ return false;\n    if (n == 56) return true;\n    if (n == 58) return false;\n\
    \    if (n == 60) return true;\n    if (n == 62) return false;\n    if (n == 64)\
    \ return true;\n    if (n == 66) return false;\n    if (n == 68) return true;\n\
    \    if (n == 70) return false;\n    if (n == 72) return true;\n    if (n == 74)\
    \ return false;\n    if (n == 76) return true;\n    if (n == 78) return false;\n\
    \    if (n == 80) return true;\n    if (n == 82) return false;\n    if (n == 84)\
    \ return true;\n    if (n == 86) return false;\n    if (n == 88) return true;\n\
    \    if (n == 90) return false;\n    if (n == 92) return true;\n    if (n == 94)\
    \ return false;\n   \nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpch9bk6lt.d(57): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch9bk6lt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    long a = 0, b = 0, c = 0, d = 0;\n    for (a\
    \ = 2; a <= n / 4; a += 2) \n    {\n        for (b = a; b <= n / 3; b += 2) \n\
    \        {\n            for (c = b; c <= n / 2; c += 2) \n            {\n    \
    \            d = n - a - b - c;\n                if (d % 2 == 0 && d >= c)\n \
    \                   return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    if (n % 4 == 0) \n        return true;\n \
    \   return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpodclqabb.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpodclqabb.__unittest_L20_C1() [0x427ad9]

    ??:? void tmpodclqabb.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n == 0) \n        return true;\n    if (n\
    \ < 0) \n        return false;\n    return is_equal_to_sum_even(n - 2);\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppddtt91s.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmppddtt91s.__unittest_L18_C1() [0x427a6e]

    ??:? void tmppddtt91s.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    if (n % 2 == 0) \n    {\n        long a = n / 2;\n        long\
    \ b = n / 2;\n        long c = n / 2;\n        long d = n / 2;\n        long sum\
    \ = a + b + c + d;\n        if (sum == n) \n        {\n            result = true;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0nznk24w.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmp0nznk24w.__unittest_L25_C1() [0x427ac6]

    ??:? void tmp0nznk24w.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if(n % 2 !=\
    \ 0) return false;\n    if(n < 8) return false;\n    if(n == 8) return true;\n\
    \    long half = n / 2;\n    long half_sqrt = sqrt(half);\n    for(long i = 2;\
    \ i <= half_sqrt; i += 2)\n    {\n        long j = n - i;\n        if(j % 2 !=\
    \ 0) continue;\n        long j_sqrt = sqrt(j);\n        for(long k = 2; k <= j_sqrt;\
    \ k += 2)\n        {\n            long l = j - k;\n            if(l % 2 != 0)\
    \ continue;\n            long l_sqrt = sqrt(l);\n            for(long m = 2; m\
    \ <= l_sqrt; m += 2)\n            {\n                long o = l - m;\n       \
    \         if(o % 2 != 0) continue;\n                if(o > 0) return true;\n \
    \           }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n \
    \   assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L)\
    \ == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) ==\
    \ true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpazdu00vy.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    /tmp/tmpazdu00vy.d(19): Error: `std.math.sqrt` called with argument types `(long)`
    matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    /tmp/tmpazdu00vy.d(24): Error: `std.math.sqrt` called with argument ty'
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n\
    \    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n\
    \    long mmm = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n\
    \    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n\
    \    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long y\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq4sdfkk_.d(78): Error: semicolon expected, not `unittest`

    /tmp/tmpq4sdfkk_.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq4sdfkk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164334
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long sum = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long count = 0;\n    long temp = 0;\n\
    \    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5\
    \ = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long\
    \ temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n\
    \    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16\
    \ = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n   \
    \ long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23\
    \ = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n   \
    \ long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30\
    \ = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n   \
    \ long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37\
    \ = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n   \
    \ long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44\
    \ = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n   \
    \ long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51\
    \ = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n   \
    \ long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0\nunittest\n{\n \
    \   alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n   \
    \ assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L)\
    \ == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) ==\
    \ true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxw0i6gh8.d(75): Error: semicolon expected, not `unittest`

    /tmp/tmpxw0i6gh8.d(75): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxw0i6gh8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int sum =\
    \ 0;\n    bool result = false;\n    for (i = 1; i <= n; i++) \n    {\n       \
    \ for (j = 1; j <= n; j++) \n        {\n            for (k = 1; k <= n; k++) \n\
    \            {\n                for (l = 1; l <= n; l++) \n                {\n\
    \                    for (m = 1; m <= n; m++) \n                    {\n      \
    \                  sum = i + j + k + l + m;\n                        if (sum ==\
    \ n) \n                        {\n                            if (i % 2 == 0 &&\
    \ j % 2 == 0 && k % 2 == 0 && l % 2 == 0 && m % 2 == 0) \n                   \
    \         {\n                                result = true;\n                \
    \                break;\n                            }\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprhqautg7.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ec5]

    ??:? void tmprhqautg7.__unittest_L43_C1() [0x427b96]

    ??:? void tmprhqautg7.__modtest() [0x427c44]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc11]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300c0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb9d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa55]

    ??:? runModuleUnitTests [0x42b9c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428314]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n < 8)\n        return false;\n    if (n\
    \ == 8)\n        return true;\n    if (n % 4 == 0)\n        return true;\n   \
    \ if (n % 4 == 2)\n        return false;\n    long m = n / 2;\n    long a = 2;\n\
    \    long b = 2;\n    long c = m - 4;\n    long d = m - 4;\n    while (a <= m\
    \ / 2) \n    {\n        b = a;\n        while (b <= m / 2) \n        {\n     \
    \       c = m - a - b;\n            d = m - a - b;\n            if (c % 2 != 0)\n\
    \                c--;\n            if (d % 2 != 0)\n                d++;\n   \
    \         if (c < b)\n                break;\n            if (c < 0)\n       \
    \         break;\n            if (d < b)\n                break;\n           \
    \ if (d < 0)\n                break;\n            if (a + b + c + d == n)\n  \
    \              return true;\n            b += 2;\n        }\n        a += 2;\n\
    \    }\n    return false;\n}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\
    \n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n \
    \   assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L)\
    \ == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) ==\
    \ false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj6er4b9k.d(59): unittest failure

    ----------------

    ??:? _d_unittestp [0x427f2d]

    ??:? void tmpj6er4b9k.__unittest_L52_C1() [0x427c21]

    ??:? void tmpj6er4b9k.__modtest() [0x427cb0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc53]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aae6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc79]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430128]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fc05]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aabd]

    ??:? runModuleUnitTests [0x42ba29]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42837c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n\
    \ < 0)\n        return false;\n    long sum = 0;\n    long i = 0;\n    while (sum\
    \ < n)\n    {\n        i += 2;\n        sum += i;\n    }\n    return sum == n;\n\
    }\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpps8ovj9k.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpps8ovj9k.__unittest_L25_C1() [0x427ac1]

    ??:? void tmpps8ovj9k.__modtest() [0x427b90]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164335
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n % 2 !=\
    \ 0) \n        return false;\n    if (n < 8) \n        return false;\n    if (n\
    \ == 8) \n        return true;\n    long a = n / 4;\n    long b = n / 2;\n   \
    \ long c = n / 4 * 3;\n    long d = n;\n    return a + b + c + d == n;\n}\nunittest\n\
    {\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n\
    \    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n \
    \   assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n  \
    \  assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5_qwm2jv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e1d]

    ??:? void tmp5_qwm2jv.__unittest_L22_C1() [0x427b11]

    ??:? void tmp5_qwm2jv.__modtest() [0x427ba0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430018]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faf5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]

    ??:? runModuleUnitTests [0x42b919]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    bool result\
    \ = false;\n    long a, b, c, d;\n    foreach(a; 0 .. n)\n    {\n        foreach(b;\
    \ 0 .. n)\n        {\n            foreach(c; 0 .. n)\n            {\n        \
    \        foreach(d; 0 .. n)\n                {\n                    if(a + b +\
    \ c + d == n)\n                    {\n                        if(a % 2 == 0 &&\
    \ b % 2 == 0 && c % 2 == 0 && d % 2 == 0)\n                        {\n       \
    \                     result = true;\n                            break;\n   \
    \                     }\n                    }\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) ==\
    \ true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n\
    \    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp322x611y.d(12): Error: variable `a` is shadowing variable `tmp322x611y.is_equal_to_sum_even.a`

    /tmp/tmp322x611y.d(14): Error: variable `b` is shadowing variable `tmp322x611y.is_equal_to_sum_even.b`

    /tmp/tmp322x611y.d(16): Error: variable `c` is shadowing variable `tmp322x611y.is_equal_to_sum_even.c`

    /tmp/tmp322x611y.d(18): Error: variable `d` is shadowing variable `tmp322x611y.is_equal_to_sum_even.d`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp322x611y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nEvaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive even numbers\n    Example\n\
    \                \n*/\nbool is_equal_to_sum_even(long n) \n{\n    if (n < 8)\n\
    \        return false;\n    if (n % 2 != 0)\n        return false;\n    if (n\
    \ % 4 == 0)\n        return true;\n    return is_equal_to_sum_even(n - 4);\n}\n\
    unittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L)\
    \ == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) ==\
    \ true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n\
    \    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n \
    \   assert(candidate(16L) == true);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp10o5h_th.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp10o5h_th.__unittest_L18_C1() [0x427ad5]

    ??:? void tmp10o5h_th.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164337

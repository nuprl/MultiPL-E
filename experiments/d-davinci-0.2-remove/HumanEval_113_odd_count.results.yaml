language: d
name: HumanEval_113_odd_count
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6zkc5oc7.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp6zkc5oc7.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6zkc5oc7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, char; item)\n        {\n  \
    \          if(to!int(char) % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n        result[i] = to!string(count);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqao5_bwu.d(17): Error: no identifier for declarator `char`

    /tmp/tmpqao5_bwu.d(19): Error: found `)` when expecting `.` following char

    /tmp/tmpqao5_bwu.d(19): Error: found `%` when expecting identifier following `char`.

    /tmp/tmpqao5_bwu.d(19): Error: found `2` when expecting `,`

    /tmp/tmpqao5_bwu.d(19): Error: expression expected, not `!=`

    /tmp/tmpqao5_bwu.d(19): Error: found `0` when expecting `,`

    /tmp/tmpqao5_bwu.d(20): Error: found `{` when expecting `)`

    /tmp/tmpqao5_bwu.d(26): Error: declaration expected, not `return`

    /tmp/tmpqao5_bwu.d(27): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqao5_bwu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163133
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 != 0)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdh9b9iq7.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdh9b9iq7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        res ~= count.to!string;\n \
    \   }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n \
    \   assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdimo6xy7.d(19): Error: no property `to` for type `char`

    /tmp/tmpdimo6xy7.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimo6xy7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, char; item)\n        {\n  \
    \          if(char.to!int % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n        result[i] = count.to!string;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps3gtc5nl.d(17): Error: no identifier for declarator `char`

    /tmp/tmps3gtc5nl.d(19): Error: found `!` when expecting `)`

    /tmp/tmps3gtc5nl.d(19): Error: no identifier for declarator `int`

    /tmp/tmps3gtc5nl.d(19): Error: found `%` instead of statement

    /tmp/tmps3gtc5nl.d(26): Error: declaration expected, not `return`

    /tmp/tmps3gtc5nl.d(27): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3gtc5nl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163133
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if((c - '0') % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu0sd94hs.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0sd94hs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, v; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, k; v)\n        {\n        \
    \    if(k % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n        result[i] = to!string(count);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcbktpk_a.d(24): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcbktpk_a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp65yjuo8r.d(19): Error: no property `to` for type `char`

    /tmp/tmp65yjuo8r.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65yjuo8r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, elem; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; elem)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjjhs8ibq.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjjhs8ibq.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjjhs8ibq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, val; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; val)\n        {\n         \
    \   if(c.to!int % 2 == 1)\n                count++;\n        }\n        ret[i]\
    \ = count.to!string;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9x9oxk5s.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp9x9oxk5s.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9x9oxk5s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdhlis9k.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpkdhlis9k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhlis9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i,e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuk19873p.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpuk19873p.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuk19873p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, s; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int\
    \ % 2 != 0)\n                count++;\n        }\n        ret[i] = count.to!string;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfg8eo0yb.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpfg8eo0yb.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfg8eo0yb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        ret ~= count.to!string;\n \
    \   }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n \
    \   assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1xdtyqhn.d(19): Error: no property `to` for type `char`

    /tmp/tmp1xdtyqhn.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1xdtyqhn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(digit.to!int % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n        result[i] = count.to!string;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyf68cyky.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpyf68cyky.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyf68cyky.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzwwfy1iz.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpzwwfy1iz.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzwwfy1iz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyymnmp9p.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpyymnmp9p.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyymnmp9p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if((c - '0') % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu0sd94hs.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0sd94hs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int odd_count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           odd_count++;\n        }\n        result ~= to!string(odd_count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmnc59ny4.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpmnc59ny4.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmnc59ny4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_b1ay9eq.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp_b1ay9eq.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_b1ay9eq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        ret ~= count.to!string();\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9125a9rp.d(19): Error: no property `to` for type `char`

    /tmp/tmp9125a9rp.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9125a9rp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    int[] result = new int[lst.length];\n    foreach(int i, string s; lst)\n\
    \    {\n        int count = 0;\n        foreach(char c; s)\n        {\n      \
    \      if(c.isDigit)\n            {\n                if(c.to!int % 2 == 1)\n \
    \               {\n                    count++;\n                }\n         \
    \   }\n        }\n        result[i] = count;\n    }\n    return result.map!(a\
    \ => a.to!string).array;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw9kem0r9.d(19): Error: no property `isDigit` for type `char`

    /tmp/tmpw9kem0r9.d(21): Error: no property `to` for type `char`

    /tmp/tmpw9kem0r9.d(29): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9kem0r9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, x; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; x)\n        {\n           \
    \ if(c % 2 == 1)\n                count++;\n        }\n        result[i] = to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx8a5y8cr.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx8a5y8cr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, char; item)\n        {\n  \
    \          if(char.to!int % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n        result[i] = count.to!string;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps3gtc5nl.d(17): Error: no identifier for declarator `char`

    /tmp/tmps3gtc5nl.d(19): Error: found `!` when expecting `)`

    /tmp/tmps3gtc5nl.d(19): Error: no identifier for declarator `int`

    /tmp/tmps3gtc5nl.d(19): Error: found `%` instead of statement

    /tmp/tmps3gtc5nl.d(26): Error: declaration expected, not `return`

    /tmp/tmps3gtc5nl.d(27): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3gtc5nl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163133
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, element;\
    \ lst)\n    {\n        int count = 0;\n        foreach(j, digit; element)\n  \
    \      {\n            if(digit.to!int % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n        result[i] = count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1w6dmly7.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp1w6dmly7.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1w6dmly7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp65yjuo8r.d(19): Error: no property `to` for type `char`

    /tmp/tmp65yjuo8r.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65yjuo8r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzwwfy1iz.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpzwwfy1iz.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzwwfy1iz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(digit % 2 != 0)\n            {\n                count++;\n    \
    \        }\n        }\n        result[i] = to!string(count);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg2w4tjh4.d(24): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg2w4tjh4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    int count;\n    foreach(i,\
    \ s; lst)\n    {\n        count = 0;\n        foreach(c; s)\n        {\n     \
    \       if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33glx_0b.d(20): Error: no property `to` for type `immutable(char)`

    /tmp/tmp33glx_0b.d(23): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33glx_0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpske9z016.d(19): Error: no property `to` for type `char`

    /tmp/tmpske9z016.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpske9z016.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5w19pa92.d(19): Error: no property `to` for type `char`

    /tmp/tmp5w19pa92.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5w19pa92.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    int odd_count = 0;\n\
    \    foreach(i, elem; lst)\n    {\n        foreach(j, char; elem)\n        {\n\
    \            if(char.to!int % 2 == 1)\n            {\n                odd_count++;\n\
    \            }\n        }\n        result[i] = to!string(odd_count);\n       \
    \ odd_count = 0;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphttim4n_.d(17): Error: no identifier for declarator `char`

    /tmp/tmphttim4n_.d(19): Error: found `!` when expecting `)`

    /tmp/tmphttim4n_.d(19): Error: no identifier for declarator `int`

    /tmp/tmphttim4n_.d(19): Error: found `%` instead of statement

    /tmp/tmphttim4n_.d(27): Error: declaration expected, not `return`

    /tmp/tmphttim4n_.d(28): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphttim4n_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    int count = 0;\n   \
    \ foreach(string s; lst)\n    {\n        foreach(char c; s)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n            {\n                count++;\n     \
    \       }\n        }\n        result ~= count.to!string;\n        count = 0;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7vl2p3tn.d(19): Error: no property `to` for type `char`

    /tmp/tmp7vl2p3tn.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7vl2p3tn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        ret ~= to!string(count);\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfe4okvot.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfe4okvot.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdhlis9k.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpkdhlis9k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhlis9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, string s;\
    \ lst)\n    {\n        int count = 0;\n        foreach(c; s)\n        {\n    \
    \        if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpphanr5bf.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpphanr5bf.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpphanr5bf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, str; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; str)\n        {\n         \
    \   if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp47vm6j0g.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp47vm6j0g.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp47vm6j0g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    for (int i = 0; i <\
    \ lst.length; i++)\n    {\n        int count = 0;\n        foreach (char c; lst[i])\n\
    \        {\n            if (c % 2 == 1)\n                count++;\n        }\n\
    \        result[i] = to!string(count);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg9063vl3.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9063vl3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplntcgvn0.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmplntcgvn0.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplntcgvn0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(i; lst)\n    {\n        int count = 0;\n\
    \        foreach(j; i)\n        {\n            if(j % 2 == 1)\n              \
    \  count++;\n        }\n        ret ~= to!string(count);\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpndzkobvn.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndzkobvn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res = new string[lst.length];\n    foreach(i, s; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int\
    \ % 2 != 0)\n                count++;\n        }\n        res[i] = count.to!string;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwye8bdqk.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpwye8bdqk.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwye8bdqk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    int i = 0;\n    foreach(string\
    \ s; lst)\n    {\n        int count = 0;\n        foreach(char c; s)\n       \
    \ {\n            if(c % 2 == 1)\n                count++;\n        }\n       \
    \ result[i] = to!string(count);\n        i++;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyov87d4l.d(23): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyov87d4l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdhlis9k.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpkdhlis9k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhlis9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int() % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string();\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfghse1pf.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpfghse1pf.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfghse1pf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if (c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws548rmn.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpws548rmn.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws548rmn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 != 0)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdh9b9iq7.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdh9b9iq7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdhlis9k.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpkdhlis9k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhlis9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, char; item)\n        {\n  \
    \          if(j % 2 != 0)\n            {\n                count++;\n         \
    \   }\n        }\n        result[i] = to!string(count);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn1tn0i1r.d(17): Error: no identifier for declarator `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1tn0i1r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    int count = 0;\n   \
    \ foreach(string s; lst)\n    {\n        foreach(char c; s)\n        {\n     \
    \       if(c.to!int % 2 != 0)\n            {\n                count++;\n     \
    \       }\n        }\n        result ~= count.to!string;\n        count = 0;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp84f89dvr.d(19): Error: no property `to` for type `char`

    /tmp/tmp84f89dvr.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84f89dvr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c % 2 == 1)\n                count++;\n        }\n        result[i] = to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp718bqtj8.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp718bqtj8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(ch; item)\n        {\n       \
    \     if(ch.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3wdmoza7.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp3wdmoza7.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wdmoza7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmxbz0iuo.d(19): Error: no property `to` for type `char`

    /tmp/tmpmxbz0iuo.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxbz0iuo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, string s;\
    \ lst)\n    {\n        int count = 0;\n        foreach(char c; s)\n        {\n\
    \            if(c.to!int % 2 == 1)\n                count++;\n        }\n    \
    \    result[i] = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"\
    the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphd9ydhsl.d(19): Error: no property `to` for type `char`

    /tmp/tmphd9ydhsl.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphd9ydhsl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmvuzq7a.d(19): Error: no property `to` for type `char`

    /tmp/tmpsmvuzq7a.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmvuzq7a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    int i = 0;\n    foreach(string\
    \ s; lst)\n    {\n        int count = 0;\n        foreach(char c; s)\n       \
    \ {\n            if(c.to!int() % 2 != 0)\n            {\n                count++;\n\
    \            }\n        }\n        result[i] = count.to!string();\n        i++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4j5jkqnu.d(20): Error: no property `to` for type `char`

    /tmp/tmp4j5jkqnu.d(25): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4j5jkqnu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    auto ret = new string[];\n    foreach(i, s; lst)\n    {\n        int\
    \ count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int() % 2\
    \ == 1)\n                count++;\n        }\n        ret ~= count.to!string();\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk3ung5r_.d(13): Error: new can only create structs, dynamic arrays
    or class objects, not `string[]`''s

    /tmp/tmpk3ung5r_.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpk3ung5r_.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3ung5r_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(i; lst)\n    {\n        int count = 0;\n\
    \        foreach(j; i)\n        {\n            if(j % 2 == 1)\n              \
    \  count++;\n        }\n        result ~= to!string(count);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm41hil4f.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm41hil4f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpske9z016.d(19): Error: no property `to` for type `char`

    /tmp/tmpske9z016.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpske9z016.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyymnmp9p.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpyymnmp9p.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyymnmp9p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmvuzq7a.d(19): Error: no property `to` for type `char`

    /tmp/tmpsmvuzq7a.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmvuzq7a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c % 2 == 1)\n                count++;\n        }\n        result[i] = to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp718bqtj8.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp718bqtj8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzwwfy1iz.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpzwwfy1iz.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzwwfy1iz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c % 2 == 1)\n                count++;\n        }\n        result[i] = to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp718bqtj8.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp718bqtj8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res = new string[lst.length];\n    foreach(i, s; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int\
    \ % 2 == 1)\n                count++;\n        }\n        res[i] = count.to!string;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgj84lx60.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpgj84lx60.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgj84lx60.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 != 0)\n  \
    \              count++;\n        }\n        res ~= to!string(count);\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyj9ncey4.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyj9ncey4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmvuzq7a.d(19): Error: no property `to` for type `char`

    /tmp/tmpsmvuzq7a.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmvuzq7a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int odd_count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n            {\n                odd_count++;\n            }\n        }\n\
    \        result ~= to!string(odd_count);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_4nn0n0o.d(19): Error: no property `to` for type `char`

    /tmp/tmp_4nn0n0o.d(24): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_4nn0n0o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 != 0)\n            {\n                count++;\n     \
    \       }\n        }\n        result[i] = count.to!string;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwo58hh0.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpqwo58hh0.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwo58hh0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpske9z016.d(19): Error: no property `to` for type `char`

    /tmp/tmpske9z016.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpske9z016.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        ret ~= count.to!string;\n \
    \   }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n \
    \   assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp60a5u22k.d(19): Error: no property `to` for type `char`

    /tmp/tmp60a5u22k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60a5u22k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ph6qd3u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp7ph6qd3u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ph6qd3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c % 2 == 1)\n                count++;\n        }\n        result[i] = to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp718bqtj8.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp718bqtj8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res = new string[lst.length];\n    foreach(i, s; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int\
    \ % 2 == 1)\n                count++;\n        }\n        res[i] = count.to!string;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgj84lx60.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpgj84lx60.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgj84lx60.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, elem; lst)\n\
    \    {\n        int count = 0;\n        foreach(ch; elem)\n        {\n       \
    \     if(ch.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm_o3ywqu.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpm_o3ywqu.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm_o3ywqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(to!int(digit) % 2 == 1)\n                count++;\n        }\n\
    \        result[i] = to!string(count);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5si5xk5v.d(19): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmp5si5xk5v.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5si5xk5v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, ch; item)\n        {\n    \
    \        if(ch.to!int % 2 == 1)\n                count++;\n        }\n       \
    \ result[i] = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"\
    the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5466ya24.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp5466ya24.d(22): Error: no property `to` for type `int`

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 != 0)\n            {\n                count++;\n     \
    \       }\n        }\n        result[i] = count.to!string;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwo58hh0.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpqwo58hh0.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwo58hh0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, str; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; str)\n        {\n         \
    \   if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp974b3725.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp974b3725.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp974b3725.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpske9z016.d(19): Error: no property `to` for type `char`

    /tmp/tmpske9z016.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpske9z016.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           count++;\n        }\n        result ~= count.to!string;\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgzl3jqdh.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpgzl3jqdh.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzl3jqdh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res = new string[lst.length];\n    foreach(i, e; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; e)\n        {\n            if(c.to!int\
    \ % 2 != 0)\n                count++;\n        }\n        res[i] = count.to!string;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8j4v19bf.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp8j4v19bf.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8j4v19bf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    for (int i = 0; i <\
    \ lst.length; i++)\n    {\n        int count = 0;\n        foreach (c; lst[i])\n\
    \        {\n            if (c.to!int % 2 == 1)\n                count++;\n   \
    \     }\n        result[i] = count.to!string;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpplap9a5m.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpplap9a5m.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpplap9a5m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n        result[i] = count.to!string;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mcwwf3_.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp6mcwwf3_.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mcwwf3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmxbz0iuo.d(19): Error: no property `to` for type `char`

    /tmp/tmpmxbz0iuo.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxbz0iuo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        res ~= to!string(count);\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx91sixgo.d(19): Error: no property `to` for type `char`

    /tmp/tmpx91sixgo.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx91sixgo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] res = new string[lst.length];\n    foreach(i, e; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; e)\n        {\n            if(c\
    \ % 2 == 1)\n                count++;\n        }\n        res[i] = to!string(count);\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphy_wkckp.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphy_wkckp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, ch; item)\n        {\n    \
    \        if(ch.to!int % 2 == 1)\n                count++;\n        }\n       \
    \ result[i] = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"\
    the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5466ya24.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp5466ya24.d(22): Error: no property `to` for type `int`

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, char; item)\n        {\n  \
    \          if(to!int(char) % 2 == 1)\n                count++;\n        }\n  \
    \      result[i] = to!string(count);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ai_x6p2.d(17): Error: no identifier for declarator `char`

    /tmp/tmp0ai_x6p2.d(19): Error: found `)` when expecting `.` following char

    /tmp/tmp0ai_x6p2.d(19): Error: found `%` when expecting identifier following `char`.

    /tmp/tmp0ai_x6p2.d(19): Error: found `2` when expecting `,`

    /tmp/tmp0ai_x6p2.d(19): Error: expression expected, not `==`

    /tmp/tmp0ai_x6p2.d(19): Error: found `1` when expecting `,`

    /tmp/tmp0ai_x6p2.d(20): Error: found `count` when expecting `)`

    /tmp/tmp0ai_x6p2.d(20): Error: expression expected, not `;`

    /tmp/tmp0ai_x6p2.d(21): Error: found `}` when expecting `;` following statement

    /tmp/tmp0ai_x6p2.d(26): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ai_x6p2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmvuzq7a.d(19): Error: no property `to` for type `char`

    /tmp/tmpsmvuzq7a.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmvuzq7a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(digit % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc27f5iu2.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc27f5iu2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdhlis9k.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpkdhlis9k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhlis9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c % 2 == 1)\n                count++;\n        }\n        result[i] = to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp718bqtj8.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp718bqtj8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, ch; item)\n        {\n    \
    \        if(ch.to!int() % 2 != 0)\n                count++;\n        }\n     \
    \   result[i] = count.to!string();\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"\
    the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvj3byyst.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpvj3byyst.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvj3byyst.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n        result[i] = count.to!string;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mcwwf3_.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp6mcwwf3_.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mcwwf3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpske9z016.d(19): Error: no property `to` for type `char`

    /tmp/tmpske9z016.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpske9z016.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(digit % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc27f5iu2.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc27f5iu2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(digit % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc27f5iu2.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc27f5iu2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmxbz0iuo.d(19): Error: no property `to` for type `char`

    /tmp/tmpmxbz0iuo.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxbz0iuo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(ch; item)\n        {\n       \
    \     if(ch.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3wdmoza7.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp3wdmoza7.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wdmoza7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, e; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; e)\n        {\n            if(c.to!int\
    \ % 2 == 1)\n                count++;\n        }\n        ret[i] = count.to!string;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiox35br8.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpiox35br8.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiox35br8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, digit; item)\n        {\n \
    \           if(digit.to!int % 2 == 1)\n                count++;\n        }\n \
    \       result[i] = count.to!string;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbchh3y06.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpbchh3y06.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbchh3y06.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp65yjuo8r.d(19): Error: no property `to` for type `char`

    /tmp/tmp65yjuo8r.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65yjuo8r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    for (int i = 0; i <\
    \ lst.length; i++)\n    {\n        int count = 0;\n        foreach (char c; lst[i])\n\
    \        {\n            if (c % 2 == 1)\n                count++;\n        }\n\
    \        result[i] = to!string(count);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg9063vl3.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9063vl3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, elem; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; elem)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        ret[i]\
    \ = count.to!string;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx18p5yir.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpx18p5yir.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx18p5yir.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, s; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int\
    \ % 2 != 0)\n                count++;\n        }\n        ret[i] = count.to!string;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfg8eo0yb.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpfg8eo0yb.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfg8eo0yb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n        result[i] = count.to!string;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mcwwf3_.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp6mcwwf3_.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mcwwf3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmvuzq7a.d(19): Error: no property `to` for type `char`

    /tmp/tmpsmvuzq7a.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmvuzq7a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n        result[i] = count.to!string;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mcwwf3_.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp6mcwwf3_.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mcwwf3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; item)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = to!string(count);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_b1ay9eq.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp_b1ay9eq.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_b1ay9eq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n        result[i] = count.to!string;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mcwwf3_.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp6mcwwf3_.d(24): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mcwwf3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, e; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; e)\n        {\n            if(c.to!int\
    \ % 2 != 0)\n                count++;\n        }\n        ret[i] = count.to!string;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwrz0q34u.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpwrz0q34u.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwrz0q34u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           count++;\n        }\n        ret ~= to!string(count);\n    }\n   \
    \ return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqs86l_ta.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpqs86l_ta.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqs86l_ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int odd_count = 0;\n        foreach(j, digit; item)\n        {\n\
    \            if(digit % 2 == 1)\n            {\n                odd_count++;\n\
    \            }\n        }\n        result[i] = to!string(odd_count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmyzbk9_h.d(24): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmyzbk9_h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, elem; lst)\n\
    \    {\n        int count = 0;\n        foreach(j, c; elem)\n        {\n     \
    \       if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjjhs8ibq.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjjhs8ibq.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjjhs8ibq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 ==\
    \ 1)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn8tw1v2.d(19): Error: no property `to` for type `char`

    /tmp/tmpnn8tw1v2.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn8tw1v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyymnmp9p.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpyymnmp9p.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyymnmp9p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, v; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; v)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw0aa4z4h.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpw0aa4z4h.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw0aa4z4h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, e; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; e)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdhlis9k.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpkdhlis9k.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhlis9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, s; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; s)\n        {\n            if(c.to!int\
    \ % 2 == 1)\n                count++;\n        }\n        ret[i] = count.to!string;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfpf2a3lb.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpfpf2a3lb.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfpf2a3lb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 ==\
    \ 1)\n                count++;\n        }\n        ret ~= count.to!string();\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpub8xjgt3.d(19): Error: no property `to` for type `char`

    /tmp/tmpub8xjgt3.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpub8xjgt3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret = new string[lst.length];\n    foreach(i, e; lst)\n  \
    \  {\n        int count = 0;\n        foreach(c; e)\n        {\n            if(c\
    \ % 2 == 1)\n                count++;\n        }\n        ret[i] = to!string(count);\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkxrfivfk.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkxrfivfk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst) {\n\
    \        int count = 0;\n        foreach(c; s) {\n            if(c.to!int % 2\
    \ != 0) {\n                count++;\n            }\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa6k9w06d.d(17): Error: no property `to` for type `immutable(char)`

    /tmp/tmpa6k9w06d.d(21): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6k9w06d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    int[] result = new int[lst.length];\n    foreach(i, item; lst)\n  \
    \  {\n        foreach(j, c; item)\n        {\n            if(c.to!int % 2 != 0)\n\
    \            {\n                result[i]++;\n            }\n        }\n    }\n\
    \    return result.map!(a => a.to!string);\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1jl8732g.d(18): Error: no property `to` for type `immutable(char)`

    /tmp/tmp1jl8732g.d(24): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1jl8732g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] ret;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int() % 2 ==\
    \ 1)\n                count++;\n        }\n        ret ~= count.to!string();\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n\
    \    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the\
    \ number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\",\
    \ \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpub8xjgt3.d(19): Error: no property `to` for type `char`

    /tmp/tmpub8xjgt3.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpub8xjgt3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 == 1)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44najv7p.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44najv7p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int odd_count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if (c.to!int % 2 ==\
    \ 1)\n                odd_count++;\n        }\n        result ~= to!string(odd_count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu86cklcl.d(19): Error: no property `to` for type `char`

    /tmp/tmpu86cklcl.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu86cklcl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= to!string(count);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5w19pa92.d(19): Error: no property `to` for type `char`

    /tmp/tmp5w19pa92.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5w19pa92.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.isOdd)\n     \
    \           count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyymnmp9p.d(19): Error: no property `isOdd` for type `char`

    /tmp/tmpyymnmp9p.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyymnmp9p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c % 2 != 0)\n  \
    \              count++;\n        }\n        result ~= to!string(count);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n\
    \    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"\
    the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd\
    \ elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the\
    \ str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdh9b9iq7.d(22): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdh9b9iq7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result;\n    foreach(string s; lst)\n    {\n        int count\
    \ = 0;\n        foreach(char c; s)\n        {\n            if(c.to!int % 2 !=\
    \ 0)\n                count++;\n        }\n        result ~= count.to!string;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = odd_count;\n\
    \n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) ==\
    \ [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hg2wqtv.d(19): Error: no property `to` for type `char`

    /tmp/tmp3hg2wqtv.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hg2wqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    return lst.map!(a => a.count!(b => b % 2 == 1).to!string)();\n}\nunittest\n\
    {\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplolvpfx6.d(13): Error: no property `map` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplolvpfx6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, item; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; item)\n        {\n        \
    \    if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp24g5rk86.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp24g5rk86.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24g5rk86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 == 1)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxs9azro.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmpjxs9azro.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxs9azro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven a list of strings, where\
    \ each string consists of only digits, return a list.\n    Each element i of the\
    \ output should be \"the number of odd elements in the\n    string i of the input.\"\
    \ where all the i's should be replaced by the number\n    of odd digits in the\
    \ i'th string of the input.\n\n            \n*/\nstring[] odd_count(string[] lst)\
    \ \n{\n    string[] result = new string[lst.length];\n    foreach(i, s; lst)\n\
    \    {\n        int count = 0;\n        foreach(c; s)\n        {\n           \
    \ if(c.to!int % 2 != 0)\n                count++;\n        }\n        result[i]\
    \ = count.to!string;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h6xw3be.d(19): Error: no property `to` for type `immutable(char)`

    /tmp/tmp0h6xw3be.d(22): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h6xw3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163134

language: d
name: HumanEval_140_fix_spaces
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjjykt1ka.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpjjykt1ka.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpjjykt1ka.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp87gezcjr.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp87gezcjr.__unittest_L33_C1() [0x427c6c]

    ??:? void tmp87gezcjr.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmwem8g9b.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpmwem8g9b.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpmwem8g9b.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            result ~= c;\n   \
    \         spaces = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt0yu3qd5.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428005]

    ??:? void tmpt0yu3qd5.__unittest_L34_C1() [0x427bf5]

    ??:? void tmpt0yu3qd5.__modtest() [0x427d88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c69b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5aa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430430]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b581]

    ??:? runModuleUnitTests [0x42c471]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428454]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    for (int i = 0; i < text.length; i++)\
    \ \n    {\n        if (text[i] == ' ') \n        {\n            count++;\n   \
    \         if (count == 1) \n            {\n                result ~= \"_\";\n\
    \            }\n            else if (count > 2) \n            {\n            \
    \    result ~= \"-\";\n            }\n        }\n        else \n        {\n  \
    \          result ~= text[i];\n            count = 0;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjufbyznu.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpjufbyznu.__unittest_L37_C1() [0x427c70]

    ??:? void tmpjufbyznu.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c7ef]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b6fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430025]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304d4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffb1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b6d5]

    ??:? runModuleUnitTests [0x42c5c5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4284f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    for (int i = 0; i < text.length;\
    \ i++) \n    {\n        if (text[i] == ' ') \n        {\n            consecutive_spaces++;\n\
    \            if (consecutive_spaces == 1) \n            {\n                result\
    \ += \"_\";\n            }\n            else if (consecutive_spaces == 2) \n \
    \           {\n                result += \"-\";\n            }\n        }\n  \
    \      else \n        {\n            consecutive_spaces = 0;\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzzurg5ot.d(22): Error: slice `result` is not mutable

    /tmp/tmpzzurg5ot.d(26): Error: slice `result` is not mutable

    /tmp/tmpzzurg5ot.d(32): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzzurg5ot.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    string[] words = text.split(\" \");\n    foreach(word; words)\n\
    \    {\n        if(word.length > 0)\n        {\n            result ~= word ~ \"\
    \ \";\n        }\n    }\n    return result.replace(\" \", \"_\").replace(\"__\"\
    , \"-\");\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnj139igu.d(14): Error: no property `split` for type `string`

    /tmp/tmpnj139igu.d(22): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnj139igu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"_\");\n    result = result.replace(\"\
    ____\", \"_\");\n    result = result.replace(\"_____\", \"_\");\n    result =\
    \ result.replace(\"______\", \"_\");\n    result = result.replace(\"_______\"\
    , \"_\");\n    result = result.replace(\"________\", \"_\");\n    result = result.replace(\"\
    _________\", \"_\");\n    result = result.replace(\"__________\", \"_\");\n  \
    \  result = result.replace(\"___________\", \"_\");\n    result = result.replace(\"\
    ____________\", \"_\");\n    result = result.replace(\"_____________\", \"_\"\
    );\n    result = result.replace(\"______________\", \"_\");\n    result = result.replace(\"\
    _______________\", \"_\");\n    result = result.replace(\"________________\",\
    \ \"_\");\n    result = result.replace(\"_________________\", \"_\");\n    result\
    \ = result.replace(\"__________________\", \"_\");\n    result = result.replace(\"\
    ___________________\", \"_\");\n    result = result.replace(\"____________________\"\
    , \"_\");\n    result = result.replace(\"_____________________\", \"_\");\n  \
    \  result = result.replace(\"______________________\", \"_\");\n    result = result.replace(\"\
    _______________________\", \"_\");\n    result = result.replace(\"________________________\"\
    , \"_\");\n    result = result.replace(\"_________________________\", \"_\");\n\
    \    result = result.replace(\"__________________________\", \"_\");\n    result\
    \ = result.replace(\"___________________________\", \"_\");\n    result = result.replace(\"\
    ____________________________\", \"_\");\n    result = result.replace(\"_____________________________\"\
    , \"_\");\n    result = result.replace(\"______________________________\", \"\
    _\");\n    result = result.replace(\"_______________________________\", \"_\"\
    );\n    result = result.replace(\"________________________________\", \"_\");\n\
    \    result = result.replace(\"_________________________________\", \"_\");\n\
    \    result = result.replace(\"__________________________________\", \"_\");\n\
    \    result = result.replace(\"___________________________________\", \"_\");\n\
    \    result = result.replace(\"____________________________________\", \"_\");\n\
    \    result = result.replace(\"_____________________________________\", \"_\"\
    );\n    result = result.replace(\"______________________________________\", \"\
    _\");\n    result = result.replace(\"_______________________________________\"\
    , \"_\");\n    result = result.replace(\"________________________________________\"\
    , \"_\");\n\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph0s2idqu.d(54): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0s2idqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count > 2)\n           \
    \ {\n                result ~= '-';\n                count = 0;\n            }\n\
    \            else\n            {\n                result ~= '_';\n           \
    \ }\n        }\n        else\n        {\n            result ~= c;\n          \
    \  count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqcpm7qps.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpqcpm7qps.__unittest_L38_C1() [0x427cb7]

    ??:? void tmpqcpm7qps.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool prev_space = false;\n    foreach(c; text)\n    {\n       \
    \ if(c == ' ')\n        {\n            if(prev_space)\n            {\n       \
    \         result ~= '-';\n            }\n            else\n            {\n   \
    \             result ~= '_';\n            }\n            prev_space = true;\n\
    \        }\n        else\n        {\n            result ~= c;\n            prev_space\
    \ = false;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp31yu5i69.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp31yu5i69.__unittest_L37_C1() [0x427c64]

    ??:? void tmp31yu5i69.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            if(spaces > 0)\n \
    \           {\n                result ~= '_';\n                spaces = 0;\n \
    \           }\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv4c2yexx.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpv4c2yexx.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpv4c2yexx.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb0n1s_el.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpb0n1s_el.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpb0n1s_el.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool space_found = false;\n    foreach(char c; text)\n    {\n \
    \       if(c == ' ')\n        {\n            if(space_found)\n            {\n\
    \                result ~= '-';\n            }\n            else\n           \
    \ {\n                result ~= '_';\n                space_found = true;\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          space_found = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpklvobe55.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpklvobe55.__unittest_L37_C1() [0x427c64]

    ??:? void tmpklvobe55.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool consecutive = false;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            if(consecutive)\n            {\n\
    \                result ~= '-';\n            }\n            else\n           \
    \ {\n                result ~= '_';\n            }\n            consecutive =\
    \ true;\n        }\n        else\n        {\n            result ~= c;\n      \
    \      consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmf62gdzb.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpmf62gdzb.__unittest_L37_C1() [0x427c64]

    ??:? void tmpmf62gdzb.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            if(count == 0)\n            {\n                result\
    \ ~= '_';\n                count = 1;\n            }\n            else if(count\
    \ == 1)\n            {\n                result ~= '-';\n                count\
    \ = 2;\n            }\n            else\n            {\n                count\
    \ = 2;\n            }\n        }\n        else\n        {\n            result\
    \ ~= c;\n            count = 0;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa62w34ze.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x42804d]

    ??:? void tmpa62w34ze.__unittest_L42_C1() [0x427c84]

    ??:? void tmpa62w34ze.__modtest() [0x427dcc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6e3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffc9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430478]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5c9]

    ??:? runModuleUnitTests [0x42c4b9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42849c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int consecutive_spaces = 0;\n    foreach(c; text)\n    {\n    \
    \    if(c == ' ')\n        {\n            consecutive_spaces++;\n            if(consecutive_spaces\
    \ == 1)\n                result ~= '_';\n            else if(consecutive_spaces\
    \ == 2)\n                result ~= '-';\n        }\n        else\n        {\n\
    \            consecutive_spaces = 0;\n            result ~= c;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n\
    \    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdq5htiaw.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpdq5htiaw.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpdq5htiaw.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces == 1)\n   \
    \             result ~= '_';\n            else if(spaces > 2)\n              \
    \  result ~= '-';\n        }\n        else\n        {\n            spaces = 0;\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph2os4y6f.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmph2os4y6f.__unittest_L33_C1() [0x427c6c]

    ??:? void tmph2os4y6f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmwem8g9b.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpmwem8g9b.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpmwem8g9b.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 2)\n     \
    \       {\n                result ~= '-';\n                count = 0;\n      \
    \      }\n        }\n        else\n        {\n            if(count == 1)\n   \
    \         {\n                result ~= '_';\n                count = 0;\n    \
    \        }\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwyf47spp.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpwyf47spp.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpwyf47spp.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool consecutive_spaces = false;\n    foreach(c; text)\n\
    \    {\n        if(c == ' ')\n        {\n            if(consecutive_spaces)\n\
    \            {\n                result ~= '-';\n            }\n            else\n\
    \            {\n                result ~= '_';\n                consecutive_spaces\
    \ = true;\n            }\n        }\n        else\n        {\n            result\
    \ ~= c;\n            consecutive_spaces = false;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp25qkx60c.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp25qkx60c.__unittest_L37_C1() [0x427c64]

    ??:? void tmp25qkx60c.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 2)\n     \
    \       {\n                result ~= '-';\n                count = 0;\n      \
    \      }\n        }\n        else\n        {\n            if(count == 1)\n   \
    \         {\n                result ~= '_';\n                count = 0;\n    \
    \        }\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwyf47spp.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpwyf47spp.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpwyf47spp.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int i = 0;\n    int len = text.length;\n    int count = 0;\n  \
    \  while (i < len)\n    {\n        if (text[i] == ' ')\n        {\n          \
    \  if (count == 0)\n            {\n                result ~= '_';\n          \
    \      count++;\n            }\n            else if (count == 1)\n           \
    \ {\n                result ~= '-';\n                count++;\n            }\n\
    \            else\n            {\n                count++;\n            }\n  \
    \      }\n        else\n        {\n            result ~= text[i];\n          \
    \  count = 0;\n        }\n        i++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn9km9au3.d(15): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn9km9au3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, count;\n    import std.range : zip;\n    import std.typecons\
    \ : tuple;\n    import std.conv : to;\n    import std.string : toStringz;\n  \
    \  import std.array : array;\n    import std.math : max;\n    import std.range\
    \ : iota;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvgfhx91a.d(65): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvgfhx91a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    foreach(c; text)\n    {\n        if(c == ' ')\n        {\n    \
    \        result ~= '_';\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdyd1vzw1.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427fdd]

    ??:? void tmpdyd1vzw1.__unittest_L27_C1() [0x427c63]

    ??:? void tmpdyd1vzw1.__modtest() [0x427d60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c673]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b582]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430408]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fee5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b559]

    ??:? runModuleUnitTests [0x42c449]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42842c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptflgc4y3.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptflgc4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count > 2)\n           \
    \ {\n                result ~= '-';\n                count = 0;\n            }\n\
    \            else\n            {\n                result ~= '_';\n           \
    \ }\n        }\n        else\n        {\n            count = 0;\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq6drdls2.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpq6drdls2.__unittest_L38_C1() [0x427cb7]

    ??:? void tmpq6drdls2.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.idup;\n    auto i = 0;\n    auto len = text.length;\n    auto count =\
    \ 0;\n    while (i < len)\n    {\n        if (result[i] == ' ')\n        {\n \
    \           count++;\n            if (count > 2)\n            {\n            \
    \    result[i] = '-';\n            }\n            else\n            {\n      \
    \          result[i] = '_';\n            }\n        }\n        else\n        {\n\
    \            count = 0;\n        }\n        i++;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppkzsocpo.d(24): Error: cannot modify `immutable` expression `result[cast(ulong)i]`

    /tmp/tmppkzsocpo.d(28): Error: cannot modify `immutable` expression `result[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppkzsocpo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            if(count == 0)\n            {\n                result\
    \ ~= '_';\n                count++;\n            }\n            else if(count\
    \ == 1)\n            {\n                result ~= '-';\n                count++;\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \            count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppn47oz0j.d(44): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmppn47oz0j.__unittest_L38_C1() [0x427c70]

    ??:? void tmppn47oz0j.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool space = false;\n    foreach(c; text)\n    {\n     \
    \   if(c == ' ')\n        {\n            if(space)\n            {\n          \
    \      result ~= '-';\n            }\n            else\n            {\n      \
    \          result ~= '_';\n                space = true;\n            }\n    \
    \    }\n        else\n        {\n            result ~= c;\n            space =\
    \ false;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpro6tyb0s.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpro6tyb0s.__unittest_L37_C1() [0x427c64]

    ??:? void tmpro6tyb0s.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    for (int i = 0; i < text.length;\
    \ i++) \n    {\n        if (text[i] == ' ') \n        {\n            consecutive_spaces++;\n\
    \            if (consecutive_spaces == 1) \n            {\n                result\
    \ += '_';\n            }\n            else if (consecutive_spaces > 2) \n    \
    \        {\n                result += '-';\n            }\n        }\n       \
    \ else \n        {\n            consecutive_spaces = 0;\n            result +=\
    \ text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeajp42he.d(22): Error: slice `result` is not mutable

    /tmp/tmpeajp42he.d(26): Error: slice `result` is not mutable

    /tmp/tmpeajp42he.d(32): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeajp42he.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool space_found = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(space_found)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                space_found = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     space_found = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzy60cz5j.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpzy60cz5j.__unittest_L37_C1() [0x427c64]

    ??:? void tmpzy60cz5j.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, count;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.range : take;\n    import std.string : join;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n   \nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpptxnxk8l.d(65): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptxnxk8l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            consecutive_spaces++;\n        \
    \    if(consecutive_spaces == 1)\n            {\n                result ~= \"\
    _\";\n            }\n            else if(consecutive_spaces == 2)\n          \
    \  {\n                result ~= \"-\";\n            }\n        }\n        else\n\
    \        {\n            consecutive_spaces = 0;\n            result ~= c;\n  \
    \      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp09y5son7.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42801d]

    ??:? void tmp09y5son7.__unittest_L37_C1() [0x427c54]

    ??:? void tmp09y5son7.__modtest() [0x427d9c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c763]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b672]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff99]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430448]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff25]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b649]

    ??:? runModuleUnitTests [0x42c539]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42846c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int space_count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            space_count++;\n            if(space_count >\
    \ 2)\n                continue;\n            else\n                result ~= '_';\n\
    \        }\n        else\n        {\n            space_count = 0;\n          \
    \  result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgzre295c.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ffd]

    ??:? void tmpgzre295c.__unittest_L33_C1() [0x427c83]

    ??:? void tmpgzre295c.__modtest() [0x427d80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c693]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff79]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430428]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff05]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b579]

    ??:? runModuleUnitTests [0x42c469]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42844c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool space = false;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            if(space)\n            {\n                result\
    \ ~= '-';\n            }\n            else\n            {\n                result\
    \ ~= '_';\n                space = true;\n            }\n        }\n        else\n\
    \        {\n            result ~= c;\n            space = false;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmprnqr_rh3.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmprnqr_rh3.__unittest_L37_C1() [0x427c64]

    ??:? void tmprnqr_rh3.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 2)\n     \
    \       {\n                result ~= '-';\n                count = 0;\n      \
    \      }\n        }\n        else\n        {\n            if(count == 1)\n   \
    \         {\n                result ~= '_';\n                count = 0;\n    \
    \        }\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwyf47spp.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpwyf47spp.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpwyf47spp.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"_ _\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_d54d24_.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_d54d24_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptflgc4y3.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptflgc4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    for (int i = 0; i < text.length; i++) \n  \
    \  {\n        if (text[i] == ' ') \n        {\n            count++;\n        \
    \    if (count == 1) \n            {\n                result ~= '_';\n       \
    \     }\n            else if (count == 2) \n            {\n                result\
    \ ~= '-';\n            }\n        }\n        else \n        {\n            count\
    \ = 0;\n            result ~= text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoi5vdav6.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428055]

    ??:? void tmpoi5vdav6.__unittest_L37_C1() [0x427c90]

    ??:? void tmpoi5vdav6.__modtest() [0x427dd8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c75f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b66e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430045]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304f4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffd1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b645]

    ??:? runModuleUnitTests [0x42c535]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428518]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int i = 0;\n    int spaces = 0;\n    while (i < text.length)\n\
    \    {\n        if (text[i] == ' ')\n        {\n            spaces++;\n      \
    \      if (spaces > 2)\n            {\n                result += '-';\n      \
    \          spaces = 0;\n            }\n        }\n        else\n        {\n  \
    \          result += text[i];\n            spaces = 0;\n        }\n        i++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp17q9_j1v.d(23): Error: slice `result` is not mutable

    /tmp/tmp17q9_j1v.d(29): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17q9_j1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count > 2)\n           \
    \ {\n                result ~= '-';\n                count = 0;\n            }\n\
    \            else\n            {\n                result ~= '_';\n           \
    \ }\n        }\n        else\n        {\n            count = 0;\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq6drdls2.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpq6drdls2.__unittest_L38_C1() [0x427cb7]

    ??:? void tmpq6drdls2.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    for (int i = 0; i < text.length;\
    \ i++) \n    {\n        if (text[i] == ' ') \n        {\n            if (consecutive)\
    \ \n            {\n                result ~= '-';\n            } \n          \
    \  else \n            {\n                result ~= '_';\n                consecutive\
    \ = true;\n            }\n        } \n        else \n        {\n            result\
    \ ~= text[i];\n            consecutive = false;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5r9uembs.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42804d]

    ??:? void tmp5r9uembs.__unittest_L37_C1() [0x427c88]

    ??:? void tmp5r9uembs.__modtest() [0x427dd0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c757]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b666]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43003d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304ec]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffc9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b63d]

    ??:? runModuleUnitTests [0x42c52d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428510]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptflgc4y3.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptflgc4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            consecutive_spaces++;\n        \
    \    if(consecutive_spaces == 1)\n            {\n                result ~= '_';\n\
    \            }\n            else if(consecutive_spaces == 2)\n            {\n\
    \                result ~= '-';\n            }\n        }\n        else\n    \
    \    {\n            consecutive_spaces = 0;\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp18cqwp0x.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp18cqwp0x.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp18cqwp0x.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    foreach(immutable ch; text)\n    {\n        if(ch == ' ')\n   \
    \     {\n            if(result.length > 0 && result[$-1] == '_')\n           \
    \ {\n                result ~= '-';\n            }\n            else\n       \
    \     {\n                result ~= '_';\n            }\n        }\n        else\n\
    \        {\n            result ~= ch;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgle8w76b.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x42804d]

    ??:? void tmpgle8w76b.__unittest_L34_C1() [0x427c88]

    ??:? void tmpgle8w76b.__modtest() [0x427dd0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c757]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b666]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43003d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304ec]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffc9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b63d]

    ??:? runModuleUnitTests [0x42c52d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428510]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb0n1s_el.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpb0n1s_el.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpb0n1s_el.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb0n1s_el.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpb0n1s_el.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpb0n1s_el.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int space_count = 0;\n    foreach(c; text)\n    {\n    \
    \    if(c == ' ')\n        {\n            space_count++;\n            if(space_count\
    \ == 1)\n            {\n                result ~= '_';\n            }\n      \
    \      else if(space_count == 2)\n            {\n                result ~= '-';\n\
    \            }\n        }\n        else\n        {\n            space_count =\
    \ 0;\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppxz2hdq4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmppxz2hdq4.__unittest_L37_C1() [0x427c6c]

    ??:? void tmppxz2hdq4.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            result ~= c;\n   \
    \         spaces = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt0yu3qd5.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428005]

    ??:? void tmpt0yu3qd5.__unittest_L34_C1() [0x427bf5]

    ??:? void tmpt0yu3qd5.__modtest() [0x427d88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c69b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5aa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430430]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b581]

    ??:? runModuleUnitTests [0x42c471]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428454]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmwem8g9b.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpmwem8g9b.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpmwem8g9b.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmwem8g9b.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpmwem8g9b.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpmwem8g9b.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, replaceInPlace;\n    import std.range : join;\n   \
    \ import std.array : array;\n    import std.conv : to;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : T\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2ka1cbep.d(62): Error: `;` expected

    /tmp/tmp2ka1cbep.d(72): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ka1cbep.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptflgc4y3.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptflgc4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjjykt1ka.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpjjykt1ka.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpjjykt1ka.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"__\"\
    , \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00d4bhcz.d(56): Error: identifier expected following `.`, not `unittest`

    /tmp/tmp00d4bhcz.d(57): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00d4bhcz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= \"-\";\n                count = 0;\n     \
    \       }\n            else\n            {\n                result ~= \"_\";\n\
    \            }\n        }\n        else\n        {\n            result ~= c;\n\
    \            count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp7bmx246.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x42801d]

    ??:? void tmpp7bmx246.__unittest_L38_C1() [0x427c9f]

    ??:? void tmpp7bmx246.__modtest() [0x427d9c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c763]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b672]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff99]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430448]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff25]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b649]

    ??:? runModuleUnitTests [0x42c539]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42846c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    foreach(c; text) \n   \
    \ {\n        if(c == ' ') \n        {\n            consecutive_spaces++;\n   \
    \         if(consecutive_spaces == 1) \n            {\n                result\
    \ ~= '_';\n            }\n            else if(consecutive_spaces == 2) \n    \
    \        {\n                result ~= '-';\n            }\n        }\n       \
    \ else \n        {\n            consecutive_spaces = 0;\n            result ~=\
    \ c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3c_qbkng.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp3c_qbkng.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp3c_qbkng.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    foreach(immutable c; text)\n    {\n        if(c == ' ')\n     \
    \   {\n            if(result.back == '_')\n            {\n                result\
    \ ~= '-';\n            }\n            else\n            {\n                result\
    \ ~= '_';\n            }\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxf2aoyoa.d(18): Error: no property `back` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxf2aoyoa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, replaceInPlace;\n    import std.range : filter;\n \
    \   import std.array : array;\n    import std.conv : to;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.range : map;\n  \
    \  import std.range : zip;\n    import std.range : chain;\n    import std.range\
    \ : cycle;\n    import std.range : take;\n    import std.range : drop;\n    import\
    \ std.range : takeExactly;\n    import std.range : dropExactly;\n    import std.range\
    \ : takeExactly;\n    import std.range : dropExactly;\n    import std.range :\
    \ takeExactly;\n    import std.range : dropExactly;\n    import std.range : takeExactly;\n\
    \    import std.range : dropExactly;\n    import std.range : takeExactly;\n  \
    \  import std.range : dropExactly;\n    import std.range : takeExactly;\n    import\
    \ std.range : dropExactly;\n    import std.range : takeExactly;\n    import std.range\
    \ : dropExactly;\n    import std.range : takeExactly;\n    import std.range :\
    \ dropExactly;\n    import std.range : takeExactly;\n    import std.range : dropExactly;\n\
    \    import std.range : takeExactly;\n    import std.range : dropExactly;\n  \
    \  import std.range : takeExactly;\n    import std.range : dropExactly;\n    import\
    \ std.range : takeExactly;\n    import std.range : dropExactly;\n    import std.range\
    \ : takeExactly;\n    import std.range : dropExactly;\n    import std.range :\
    \ takeExactly;\n    import std.range : dropExactly;\n    import std.range : takeExactly;\n\
    \    import std.range : dropExactly;\n    import std.range : takeExactly;\n  \
    \  import std.range : dropExactly;\n    import std.range : takeExactly;\n    import\
    \ std.range : dropExactly;\n    import std.range : takeExactly;\n    import std.range\
    \ : dropExactly;\n    import std.range : takeExactly;\n    import std.range :\
    \ dropExactly;\n    import std.range : takeExactly;\n    import std.range\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnm0xf2eo.d(65): Error: `;` expected

    /tmp/tmpnm0xf2eo.d(75): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnm0xf2eo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, replaceInPlace;\n    import std.range : filter;\n \
    \   import std.array : array;\n    import std.conv : to;\n    import std.string\
    \ : toStringz;\n    import std.typecons : tuple;\n    import std.range : take;\n\
    \    import std.range : drop;\n    import std.range : zip;\n    import std.range\
    \ : cycle;\n    import std.range : retro;\n    import std.range : retroCycle;\n\
    \    import std.range : retroZip;\n    import std.range : retroFilter;\n    import\
    \ std.range : retroMap;\n    import std.range : retroTake;\n    import std.range\
    \ : retroDrop;\n    import std.range : retroChunks;\n    import std.range : retroChunksOf;\n\
    \    import std.range : retroChunksUntil;\n    import std.range : retroChunksWhile;\n\
    \    import std.range : retroFilter!\"a == ' '\";\n    import std.range : retroMap!\"\
    a == ' ' ? '_' : a\";\n    import std.range : retroTake!\"a == ' '\";\n    import\
    \ std.range : retroDrop!\"a == ' '\";\n    import std.range : retroChunks!\"a\
    \ == ' '\";\n    import std.range : retroChunksOf!\"a == ' '\";\n    import std.range\
    \ : retroChunksUntil!\"a == ' '\";\n    import std.range : retroChunksWhile!\"\
    a == ' '\";\n    import std.range : retroFilter!\"a == ' '\";\n    import std.range\
    \ : retroMap!\"a == ' ' ? '_' : a\";\n    import std.range : retroTake!\"a ==\
    \ ' '\";\n    import std.range : retroDrop!\"a == ' '\";\n    import std.range\
    \ : retroChunks!\"a == ' '\";\n    import std.range : retroChunksOf!\"a == ' '\"\
    ;\n    import std.range : retroChunksUntil!\"a == ' '\";\n    import std.range\
    \ : retroChunksWhile!\"a == ' '\";\n    import std.range : retroFilter!\"a ==\
    \ ' '\";\n    import std.range : retroMap!\"a == ' '\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_pvbrul.d(34): Error: `;` expected

    /tmp/tmpq_pvbrul.d(35): Error: `;` expected

    /tmp/tmpq_pvbrul.d(36): Error: `;` expected

    /tmp/tmpq_pvbrul.d(37): Error: `;` expected

    /tmp/tmpq_pvbrul.d(38): Error: `;` expected

    /tmp/tmpq_pvbrul.d(39): Error: `;` expected

    /tmp/tmpq_pvbrul.d(40): Error: `;` expected

    /tmp/tmpq_pvbrul.d(41): Error: `;` expected

    /tmp/tmpq_pvbrul.d(42): Error: `;` expected

    /tmp/tmpq_pvbrul.d(43): Error: `;` expected

    /tmp/tmpq_pvbrul.d(44): Error: `;` expected

    /tmp/tmpq_pvbrul.d(45): Error: `;` expected

    /tmp/tmpq_pvbrul.d(46): Error: `;` expected

    /tmp/tmpq_pvbrul.d(47): Error: `;` expected

    /tmp/tmpq_pvbrul.d(48): Error: `;` expected

    /tmp/tmpq_pvbrul.d(49): Error: `;` expected

    /tmp/tmpq_pvbrul.d(50): Error: `;` expected

    /tmp/tmpq_pvbrul.d(51): Error: `;` expected

    /tmp/tmpq_pvbrul.d(56): Error: found `Example` when expecting `;` following statement

    /tmp/tmpq_pvbrul.d(56): Error: found `Example` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_pvbrul.'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmwem8g9b.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpmwem8g9b.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpmwem8g9b.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool space_found = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(space_found)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                space_found = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     space_found = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzy60cz5j.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpzy60cz5j.__unittest_L37_C1() [0x427c64]

    ??:? void tmpzy60cz5j.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int n = text.length;\n    int i = 0;\n    while (i < n) \n    {\n\
    \        if (text[i] == ' ') \n        {\n            result ~= '_';\n       \
    \     int j = i + 1;\n            while (j < n && text[j] == ' ')\n          \
    \      j++;\n            if (j - i > 2)\n                result ~= '-';\n    \
    \        i = j;\n        } \n        else \n        {\n            result ~= text[i];\n\
    \            i++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi40b2h_p.d(14): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi40b2h_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb0n1s_el.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpb0n1s_el.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpb0n1s_el.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"__\"\
    , \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.replace(\"__\", \"_\");\n    result = result.replace(\"\
    __\", \"_\");\n    result = result.\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00d4bhcz.d(56): Error: identifier expected following `.`, not `unittest`

    /tmp/tmp00d4bhcz.d(57): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00d4bhcz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            result ~= c;\n   \
    \         spaces = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt0yu3qd5.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428005]

    ??:? void tmpt0yu3qd5.__unittest_L34_C1() [0x427bf5]

    ??:? void tmpt0yu3qd5.__modtest() [0x427d88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c69b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5aa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430430]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b581]

    ??:? runModuleUnitTests [0x42c471]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428454]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    // replace\
    \ all spaces with underscores\n    text = text.replace(\" \", \"_\");\n    //\
    \ replace all consecutive spaces with -\n    text = text.replace(\"_+\", \"-\"\
    );\n    return text;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n  \
    \  assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvjp9zber.d(14): Error: no property `replace` for type `string`

    /tmp/tmpvjp9zber.d(16): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvjp9zber.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= \"-\";\n                spaces = 0;\n  \
    \          }\n        }\n        else\n        {\n            result ~= c;\n \
    \           spaces = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0fu8_31i.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ffd]

    ??:? void tmp0fu8_31i.__unittest_L34_C1() [0x427be9]

    ??:? void tmp0fu8_31i.__modtest() [0x427d7c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c743]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b652]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff79]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430428]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff05]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b629]

    ??:? runModuleUnitTests [0x42c519]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42844c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.idup;\n    size_t i = 0;\n    while (i < result.length)\n    {\n    \
    \    if (result[i] == ' ')\n        {\n            result[i] = '_';\n        \
    \    if (i + 1 < result.length && result[i + 1] == ' ')\n            {\n     \
    \           result[i] = '-';\n                while (i + 1 < result.length &&\
    \ result[i + 1] == ' ')\n                {\n                    result.remove(i\
    \ + 1);\n                }\n            }\n        }\n        i++;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplcpjl_57.d(19): Error: cannot modify `immutable` expression `result[i]`

    /tmp/tmplcpjl_57.d(22): Error: cannot modify `immutable` expression `result[i]`

    /tmp/tmplcpjl_57.d(25): Error: no property `remove` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplcpjl_57.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjjykt1ka.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpjjykt1ka.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpjjykt1ka.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces == 1)\n   \
    \             result ~= '_';\n            else if(spaces == 2)\n             \
    \   result ~= '-';\n        }\n        else\n        {\n            spaces = 0;\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlle7qp.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp_wlle7qp.__unittest_L33_C1() [0x427c6c]

    ??:? void tmp_wlle7qp.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp87gezcjr.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp87gezcjr.__unittest_L33_C1() [0x427c6c]

    ??:? void tmp87gezcjr.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool consecutive = false;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            if(consecutive)\n            {\n\
    \                result ~= '-';\n            }\n            else\n           \
    \ {\n                result ~= '_';\n            }\n            consecutive =\
    \ true;\n        }\n        else\n        {\n            result ~= c;\n      \
    \      consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmf62gdzb.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpmf62gdzb.__unittest_L37_C1() [0x427c64]

    ??:? void tmpmf62gdzb.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(char c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \           result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            result ~= c;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnrry7p30.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpnrry7p30.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpnrry7p30.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, replaceInPlace;\n    import std.range : join;\n   \
    \ import std.array : array;\n    import std.conv : to;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tupleOf;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tupleOf;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tupleOf;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tupleOf;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tupleOf;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tupleOf;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tupleOf;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tupleOf;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tupleOf;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tupleOf;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tupleOf;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tupleOf;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tupleOf;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tupleOf;\n    import std.typecons : tuple;\n   \nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpauo6i7zr.d(62): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpauo6i7zr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"_\");\n    result = result.replace(\"\
    ____\", \"_\");\n    result = result.replace(\"_____\", \"_\");\n    result =\
    \ result.replace(\"______\", \"_\");\n    result = result.replace(\"_______\"\
    , \"_\");\n    result = result.replace(\"________\", \"_\");\n    result = result.replace(\"\
    _________\", \"_\");\n    result = result.replace(\"__________\", \"_\");\n  \
    \  result = result.replace(\"___________\", \"_\");\n    result = result.replace(\"\
    ____________\", \"_\");\n    result = result.replace(\"_____________\", \"_\"\
    );\n    result = result.replace(\"______________\", \"_\");\n    result = result.replace(\"\
    _______________\", \"_\");\n    result = result.replace(\"________________\",\
    \ \"_\");\n    result = result.replace(\"_________________\", \"_\");\n    result\
    \ = result.replace(\"__________________\", \"_\");\n    result = result.replace(\"\
    ___________________\", \"_\");\n    result = result.replace(\"____________________\"\
    , \"_\");\n    result = result.replace(\"_____________________\", \"_\");\n  \
    \  result = result.replace(\"______________________\", \"_\");\n    result = result.replace(\"\
    _______________________\", \"_\");\n    result = result.replace(\"________________________\"\
    , \"_\");\n    result = result.replace(\"_________________________\", \"_\");\n\
    \    result = result.replace(\"__________________________\", \"_\");\n    result\
    \ = result.replace(\"___________________________\", \"_\");\n    result = result.replace(\"\
    ____________________________\", \"_\");\n    result = result.replace(\"_____________________________\"\
    , \"_\");\n    result = result.replace(\"______________________________\", \"\
    _\");\n    result = result.replace(\"_______________________________\", \"_\"\
    );\n    result = result.replace(\"________________________________\", \"_\");\n\
    \    result = result.replace(\"_________________________________\", \"_\");\n\
    \    result = result.replace(\"__________________________________\", \"_\");\n\
    \    result = result.replace(\"___________________________________\", \"_\");\n\
    \    result = result.replace(\"____________________________________\", \"_\");\n\
    \    result = result.replace(\"_____________________________________\", \"_\"\
    );\n    result = result.replace(\"______________________________________\", \"\
    _\");\n    result = result.replace(\"_______________________________________\"\
    , \"_\");\n    result = result.replace(\"________________________________________\"\
    , \"_\");\n\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph0s2idqu.d(54): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0s2idqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count > 2)\n           \
    \ {\n                result ~= '-';\n                count = 0;\n            }\n\
    \            else\n            {\n                result ~= '_';\n           \
    \ }\n        }\n        else\n        {\n            result ~= c;\n          \
    \  count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqcpm7qps.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpqcpm7qps.__unittest_L38_C1() [0x427cb7]

    ??:? void tmpqcpm7qps.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp87gezcjr.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp87gezcjr.__unittest_L33_C1() [0x427c6c]

    ??:? void tmp87gezcjr.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb0n1s_el.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpb0n1s_el.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpb0n1s_el.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int space_count = 0;\n    foreach(c; text) {\n        if(c == '\
    \ ') {\n            space_count++;\n            if(space_count == 1) {\n     \
    \           result ~= '_';\n            }\n        } else {\n            if(space_count\
    \ > 1) {\n                result ~= '-';\n            }\n            result ~=\
    \ c;\n            space_count = 0;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmp45ywmn.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpmp45ywmn.__unittest_L31_C1() [0x427c70]

    ??:? void tmpmp45ywmn.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool space_flag = false;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            if(space_flag)\n            {\n\
    \                result ~= '-';\n            }\n            else\n           \
    \ {\n                result ~= '_';\n                space_flag = true;\n    \
    \        }\n        }\n        else\n        {\n            result ~= c;\n   \
    \         space_flag = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjlgdb87w.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpjlgdb87w.__unittest_L37_C1() [0x427c64]

    ??:? void tmpjlgdb87w.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptflgc4y3.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptflgc4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(ch; text)\n    {\n        if(ch ==\
    \ ' ')\n        {\n            count++;\n            if(count > 2)\n         \
    \   {\n                result ~= '-';\n                count = 0;\n          \
    \  }\n            else\n            {\n                result ~= '_';\n      \
    \      }\n        }\n        else\n        {\n            result ~= ch;\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9vc2uc3v.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9vc2uc3v.__unittest_L38_C1() [0x427cb7]

    ??:? void tmp9vc2uc3v.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"-\");\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8y6757_b.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8y6757_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    foreach(char c; text)\n    {\n        if(c == ' ')\n        {\n\
    \            result ~= '_';\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxni84nd8.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427fdd]

    ??:? void tmpxni84nd8.__unittest_L27_C1() [0x427c63]

    ??:? void tmpxni84nd8.__modtest() [0x427d60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c673]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b582]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430408]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fee5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b559]

    ??:? runModuleUnitTests [0x42c449]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42842c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            spaces = 0;\n    \
    \        result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpexeyfyk3.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428005]

    ??:? void tmpexeyfyk3.__unittest_L34_C1() [0x427bf5]

    ??:? void tmpexeyfyk3.__modtest() [0x427d88]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c69b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5aa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff81]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430430]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff0d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b581]

    ??:? runModuleUnitTests [0x42c471]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428454]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count > 2)\n           \
    \ {\n                result ~= '-';\n                count = 0;\n            }\n\
    \            else\n            {\n                result ~= '_';\n           \
    \ }\n        }\n        else\n        {\n            result ~= c;\n          \
    \  count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqcpm7qps.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpqcpm7qps.__unittest_L38_C1() [0x427cb7]

    ??:? void tmpqcpm7qps.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    for (int i = 0; i < text.length; i++) \n  \
    \  {\n        if (text[i] == ' ') \n        {\n            count++;\n        \
    \    if (count == 1) \n            {\n                result ~= '_';\n       \
    \     } \n            else if (count > 2) \n            {\n                result\
    \ ~= '-';\n            }\n        } \n        else \n        {\n            count\
    \ = 0;\n            result ~= text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_okrg4bo.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428055]

    ??:? void tmp_okrg4bo.__unittest_L37_C1() [0x427c90]

    ??:? void tmp_okrg4bo.__modtest() [0x427dd8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c75f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b66e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430045]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304f4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffd1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b645]

    ??:? runModuleUnitTests [0x42c535]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428518]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    // your\
    \ code goes here\n    string result;\n    int count = 0;\n    foreach(c; text)\n\
    \    {\n        if(c == ' ')\n        {\n            count++;\n            if(count\
    \ == 1)\n            {\n                result ~= '_';\n            }\n      \
    \      else if(count > 2)\n            {\n                result ~= '-';\n   \
    \         }\n        }\n        else\n        {\n            count = 0;\n    \
    \        result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2fojy0eh.d(44): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp2fojy0eh.__unittest_L38_C1() [0x427c6c]

    ??:? void tmp2fojy0eh.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    for (int i = 0; i < text.length; i++)\
    \ \n    {\n        if (text[i] == ' ') \n        {\n            count++;\n   \
    \         if (count > 2) \n            {\n                result += '-';\n   \
    \             count = 0;\n            }\n            else \n            {\n  \
    \              result += '_';\n            }\n        }\n        else \n     \
    \   {\n            result += text[i];\n            count = 0;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n\
    \    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3_0w169t.d(22): Error: slice `result` is not mutable

    /tmp/tmp3_0w169t.d(27): Error: slice `result` is not mutable

    /tmp/tmp3_0w169t.d(32): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_0w169t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    auto it = text.begin;\n    auto end = text.end;\n    int count\
    \ = 0;\n    while (it != end)\n    {\n        if (*it == ' ')\n        {\n   \
    \         count++;\n            if (count == 1)\n            {\n             \
    \   result ~= '_';\n            }\n            else if (count > 2)\n         \
    \   {\n                result ~= '-';\n            }\n        }\n        else\n\
    \        {\n            count = 0;\n            result ~= *it;\n        }\n  \
    \      it++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqaj0kz_k.d(14): Error: no property `begin` for type `string`

    /tmp/tmpqaj0kz_k.d(15): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqaj0kz_k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            if(spaces > 0)\n \
    \           {\n                result ~= '_';\n                spaces = 0;\n \
    \           }\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv4c2yexx.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpv4c2yexx.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpv4c2yexx.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool space_found = false;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            if(space_found)\n            {\n\
    \                result ~= '-';\n            }\n            else\n           \
    \ {\n                result ~= '_';\n                space_found = true;\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          space_found = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqpu0esaz.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpqpu0esaz.__unittest_L37_C1() [0x427c64]

    ??:? void tmpqpu0esaz.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool space_found = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(space_found)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                space_found = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     space_found = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzy60cz5j.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpzy60cz5j.__unittest_L37_C1() [0x427c64]

    ??:? void tmpzy60cz5j.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    // your\
    \ code here\n    string[] words = text.split(\" \");\n    string result = \"\"\
    ;\n    foreach(word; words)\n    {\n        if(word.length > 0)\n        {\n \
    \           result ~= word ~ \" \";\n        }\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp54dqxc5t.d(14): Error: no property `split` for type `string`

    /tmp/tmp54dqxc5t.d(23): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp54dqxc5t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text) \n    {\n        if(c\
    \ == ' ') \n        {\n            if(count == 0) \n            {\n          \
    \      result ~= '_';\n                count = 1;\n            } \n          \
    \  else if(count == 1) \n            {\n                result ~= '-';\n     \
    \           count = 2;\n            }\n        } \n        else \n        {\n\
    \            result ~= c;\n            count = 0;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmps3dpd7ob.d(44): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmps3dpd7ob.__unittest_L38_C1() [0x427c78]

    ??:? void tmps3dpd7ob.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text;\n    auto spaces = 0;\n    for (size_t i = 0; i < text.length; i++)\n\
    \    {\n        if (text[i] == ' ')\n        {\n            spaces++;\n      \
    \      if (spaces > 2)\n            {\n                result[i] = '-';\n    \
    \        }\n            else\n            {\n                result[i] = '_';\n\
    \            }\n        }\n        else\n        {\n            spaces = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps134r3sg.d(22): Error: cannot modify `immutable` expression `result[i]`

    /tmp/tmps134r3sg.d(26): Error: cannot modify `immutable` expression `result[i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps134r3sg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    for (int i = 0; i < text.length; i++)\n   \
    \ {\n        if (text[i] == ' ')\n        {\n            count++;\n          \
    \  if (count == 1)\n            {\n                result ~= '_';\n          \
    \  }\n            else if (count == 2)\n            {\n                result\
    \ ~= '-';\n            }\n        }\n        else\n        {\n            result\
    \ ~= text[i];\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppj6lw94i.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428055]

    ??:? void tmppj6lw94i.__unittest_L37_C1() [0x427c90]

    ??:? void tmppj6lw94i.__modtest() [0x427dd8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c75f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b66e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430045]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304f4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffd1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b645]

    ??:? runModuleUnitTests [0x42c535]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428518]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, replaceInPlace;\n    import std.range : join;\n   \
    \ import std.string : split;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.typecons : tuple;\n    import std.math : max;\n    import\
    \ std.range : iota;\n    import std.algorithm : map;\n    import std.typecons\
    \ : tuple;\n    import std.range : zip;\n    import std.typecons : tuple;\n  \
    \  import std.range : zip;\n    import std.algorithm : map;\n    import std.range\
    \ : iota;\n    import std.typecons : tuple;\n    import std.range : zip;\n   \
    \ import std.algorithm : map;\n    import std.range : iota;\n    import std.typecons\
    \ : tuple;\n    import std.range : zip;\n    import std.algorithm : map;\n   \
    \ import std.range : iota;\n    import std.typecons : tuple;\n    import std.range\
    \ : zip;\n    import std.algorithm : map;\n    import std.range : iota;\n    import\
    \ std.typecons : tuple;\n    import std.range : zip;\n    import std.algorithm\
    \ : map;\n    import std.range : iota;\n    import std.typecons : tuple;\n   \
    \ import std.range : zip;\n    import std.algorithm : map;\n    import std.range\
    \ : iota;\n    import std.typecons : tuple;\n    import std.range : zip;\n   \
    \ import std.algorithm : map;\n    import std.range : iota;\n    import std.typecons\
    \ : tuple;\n    import std.range : zip;\n    import std.algorithm : map;\n   \
    \ import std.range : iota;\n    import std.typecons : tuple;\n    import std.range\
    \ : zip;\n    import std.algorithm : map;\n    import std.range : iota;\n    import\
    \ std.typecons : tuple;\n    import std.range : zip;\n    import std.algorithm\
    \ : map;\n    import std.range : iota;\n    import std.typecons : tuple;\n   \n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp5_l84by.d(66): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp5_l84by.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"-\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptflgc4y3.d(13): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptflgc4y3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool space_found = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(space_found)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                space_found = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     space_found = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzy60cz5j.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpzy60cz5j.__unittest_L37_C1() [0x427c64]

    ??:? void tmpzy60cz5j.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int space_count = 0;\n    foreach(c; text)\n    {\n    \
    \    if(c == ' ')\n        {\n            space_count++;\n            if(space_count\
    \ == 1)\n            {\n                result ~= '_';\n            }\n      \
    \      else if(space_count > 2)\n            {\n                result ~= '-';\n\
    \            }\n        }\n        else\n        {\n            space_count =\
    \ 0;\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuopjr0w_.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpuopjr0w_.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpuopjr0w_.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    bool consecutive = false;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            if(consecutive)\n            {\n\
    \                result ~= '-';\n            }\n            else\n           \
    \ {\n                result ~= '_';\n            }\n            consecutive =\
    \ true;\n        }\n        else\n        {\n            result ~= c;\n      \
    \      consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmf62gdzb.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmpmf62gdzb.__unittest_L37_C1() [0x427c64]

    ??:? void tmpmf62gdzb.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    for (int i = 0; i < text.length; i++)\n\
    \    {\n        if (text[i] == ' ')\n        {\n            count++;\n       \
    \     if (count == 1)\n            {\n                result += '_';\n       \
    \     }\n            else if (count > 2)\n            {\n                result\
    \ += '-';\n            }\n        }\n        else\n        {\n            count\
    \ = 0;\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppr18uc17.d(22): Error: slice `result` is not mutable

    /tmp/tmppr18uc17.d(26): Error: slice `result` is not mutable

    /tmp/tmppr18uc17.d(32): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppr18uc17.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            consecutive_spaces++;\n        \
    \    if(consecutive_spaces == 1)\n            {\n                result ~= '_';\n\
    \            }\n            else if(consecutive_spaces > 2)\n            {\n \
    \               result ~= '-';\n            }\n        }\n        else\n     \
    \   {\n            consecutive_spaces = 0;\n            result ~= c;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_s0mxcp5.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp_s0mxcp5.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp_s0mxcp5.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp30czup2e.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp30czup2e.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp30czup2e.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.range;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    auto\
    \ result = text.split(\" \").map!(a => a.length > 2 ? \"-\" : a).join(\"_\");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n   \
    \ assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir\
    \ Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa\
    \   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe_w_kvma.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x44d555]

    ??:? void tmpe_w_kvma.__unittest_L23_C1() [0x43caca]

    ??:? void tmpe_w_kvma.__modtest() [0x44b390]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x455faf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x44cb82]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x452079]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x452108]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x452005]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x44cb59]

    ??:? runModuleUnitTests [0x455d85]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x44e2b0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164332
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp87gezcjr.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp87gezcjr.__unittest_L33_C1() [0x427c6c]

    ??:? void tmp87gezcjr.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int consecutive_spaces = 0;\n    foreach(c; text)\n    {\n    \
    \    if(c == ' ')\n        {\n            consecutive_spaces++;\n            if(consecutive_spaces\
    \ > 2)\n            {\n                result ~= '-';\n                consecutive_spaces\
    \ = 0;\n            }\n            else\n            {\n                result\
    \ ~= '_';\n            }\n        }\n        else\n        {\n            consecutive_spaces\
    \ = 0;\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp37dfymyf.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp37dfymyf.__unittest_L38_C1() [0x427cb7]

    ??:? void tmp37dfymyf.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 2)\n     \
    \       {\n                result ~= '-';\n                count = 0;\n      \
    \      }\n        }\n        else\n        {\n            if(count == 1)\n   \
    \         {\n                result ~= '_';\n                count = 0;\n    \
    \        }\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwyf47spp.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpwyf47spp.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpwyf47spp.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int spaces = 0;\n    foreach(char c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces == 1)\n   \
    \             result ~= '_';\n            else if(spaces > 2)\n              \
    \  result ~= '-';\n        }\n        else\n        {\n            result ~= c;\n\
    \            spaces = 0;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqkma2796.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpqkma2796.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpqkma2796.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ == 2)\n            {\n                result ~= '-';\n            }\n      \
    \  }\n        else\n        {\n            result ~= c;\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsc2_l71f.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpsc2_l71f.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpsc2_l71f.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    //\
    \ \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n    // \n \
    \   // \n    // \n    // \n    // \n    // \n    // \n    // \n   \nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4wke9y42.d(141): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wke9y42.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 1)\n     \
    \       {\n                result ~= '_';\n            }\n            else if(count\
    \ > 2)\n            {\n                result ~= '-';\n            }\n       \
    \ }\n        else\n        {\n            count = 0;\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9zb_yh1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpv9zb_yh1.__unittest_L37_C1() [0x427c6c]

    ??:? void tmpv9zb_yh1.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int spaces = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            spaces++;\n            if(spaces > 2)\n    \
    \        {\n                result ~= '-';\n                spaces = 0;\n    \
    \        }\n        }\n        else\n        {\n            if(spaces > 0)\n \
    \           {\n                result ~= '_';\n                spaces = 0;\n \
    \           }\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv4c2yexx.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpv4c2yexx.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpv4c2yexx.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count > 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp87gezcjr.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp87gezcjr.__unittest_L33_C1() [0x427c6c]

    ??:? void tmp87gezcjr.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.replace(\" \", \"_\");\n    result = result.replace(\"__\", \"_\");\n\
    \    result = result.replace(\"___\", \"_\");\n    result = result.replace(\"\
    ____\", \"_\");\n    result = result.replace(\"_____\", \"_\");\n    result =\
    \ result.replace(\"______\", \"_\");\n    result = result.replace(\"_______\"\
    , \"_\");\n    result = result.replace(\"________\", \"_\");\n    result = result.replace(\"\
    _________\", \"_\");\n    result = result.replace(\"__________\", \"_\");\n  \
    \  result = result.replace(\"___________\", \"_\");\n    result = result.replace(\"\
    ____________\", \"_\");\n    result = result.replace(\"_____________\", \"_\"\
    );\n    result = result.replace(\"______________\", \"_\");\n    result = result.replace(\"\
    _______________\", \"_\");\n    result = result.replace(\"________________\",\
    \ \"_\");\n    result = result.replace(\"_________________\", \"_\");\n    result\
    \ = result.replace(\"__________________\", \"_\");\n    result = result.replace(\"\
    ___________________\", \"_\");\n    result = result.replace(\"____________________\"\
    , \"_\");\n    result = result.replace(\"_____________________\", \"_\");\n  \
    \  result = result.replace(\"______________________\", \"_\");\n    result = result.replace(\"\
    _______________________\", \"_\");\n    result = result.replace(\"________________________\"\
    , \"_\");\n    result = result.replace(\"_________________________\", \"_\");\n\
    \    result = result.replace(\"__________________________\", \"_\");\n    result\
    \ = result.replace(\"___________________________\", \"_\");\n    result = result.replace(\"\
    ____________________________\", \"_\");\n    result = result.replace(\"_____________________________\"\
    , \"_\");\n    result = result.replace(\"______________________________\", \"\
    _\");\n    result = result.replace(\"_______________________________\", \"_\"\
    );\n    result = result.replace(\"________________________________\", \"_\");\n\
    \    result = result.replace(\"_________________________________\", \"_\");\n\
    \    result = result.replace(\"__________________________________\", \"_\");\n\
    \    result = result.replace(\"___________________________________\", \"_\");\n\
    \    result = result.replace(\"____________________________________\", \"_\");\n\
    \    result = result.replace(\"_____________________________________\", \"_\"\
    );\n    result = result.replace(\"______________________________________\", \"\
    _\");\n    result = result.replace(\"_______________________________________\"\
    , \"_\");\n    result = result.replace(\"________________________________________\"\
    , \"_\");\n\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph0s2idqu.d(54): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0s2idqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, count;\n    import std.array : join;\n    import std.string\
    \ : split;\n    import std.range : map;\n    import std.conv : to;\n    import\
    \ std.typecons : tuple;\n    import std.math : max;\n    import std.range : iota;\n\
    \    import std.range : retro;\n    import std.range : take;\n    import std.range\
    \ : drop;\n    import std.range : retro;\n    import std.range : retro;\n    import\
    \ std.range : retro;\n    import std.range : retro;\n    import std.range : retro;\n\
    \    import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmpy7a6k5.d(70): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmpy7a6k5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count == 2)\n     \
    \       {\n                result ~= '-';\n                count = 0;\n      \
    \      }\n        }\n        else\n        {\n            if(count == 1)\n   \
    \         {\n                result ~= '_';\n                count = 0;\n    \
    \        }\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwyf47spp.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmpwyf47spp.__unittest_L38_C1() [0x427c2d]

    ??:? void tmpwyf47spp.__modtest() [0x427dc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            result ~= c;\n  \
    \          count = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ato9r2m.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp9ato9r2m.__unittest_L38_C1() [0x427cbb]

    ??:? void tmp9ato9r2m.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            count++;\n            if(count > 2)\n      \
    \      {\n                result ~= '-';\n                count = 0;\n       \
    \     }\n            else\n            {\n                result ~= '_';\n   \
    \         }\n        }\n        else\n        {\n            count = 0;\n    \
    \        result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfzgif6r8.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpfzgif6r8.__unittest_L38_C1() [0x427cbb]

    ??:? void tmpfzgif6r8.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c == '\
    \ ')\n        {\n            count++;\n            if(count == 1)\n          \
    \      result ~= '_';\n            else if(count == 2)\n                result\
    \ ~= '-';\n        }\n        else\n        {\n            count = 0;\n      \
    \      result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\"\
    );\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyl1sa_98.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpyl1sa_98.__unittest_L33_C1() [0x427c6c]

    ??:? void tmpyl1sa_98.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    size_t spaces = 0;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            spaces++;\n            if(spaces == 1)\n\
    \                result ~= '_';\n            else if(spaces == 2)\n          \
    \      result ~= '-';\n        }\n        else\n        {\n            result\
    \ ~= c;\n            spaces = 0;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphmy1s2ed.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x42803d]

    ??:? void tmphmy1s2ed.__unittest_L33_C1() [0x427c74]

    ??:? void tmphmy1s2ed.__modtest() [0x427dbc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430468]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff45]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b9]

    ??:? runModuleUnitTests [0x42c4a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42848c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int space_count = 0;\n    foreach(c; text) {\n        if(c\
    \ == ' ') {\n            ++space_count;\n            if(space_count == 1) {\n\
    \                result ~= '_';\n            }\n        } else {\n           \
    \ if(space_count > 1) {\n                result ~= '-';\n            }\n     \
    \       result ~= c;\n            space_count = 0;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
    Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqo503052.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmpqo503052.__unittest_L31_C1() [0x427c70]

    ??:? void tmpqo503052.__modtest() [0x427db8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    import\
    \ std.algorithm : replace, map;\n    import std.array : join;\n    import std.range\
    \ : iota;\n    import std.conv : to;\n    import std.typecons : tuple;\n    import\
    \ std.math : max;\n    import std.string : split;\n    import std.typecons : Tuple;\n\
    \    import std.range : zip;\n    import std.algorithm : map;\n    import std.range\
    \ : take;\n    import std.range : drop;\n    import std.range : cycle;\n    import\
    \ std.range : retro;\n    import std.range : retro;\n    import std.range : retro;\n\
    \    import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range :\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy32bdkwa.d(69): Error: identifier expected following `:`

    /tmp/tmpy32bdkwa.d(69): Error: `;` expected

    /tmp/tmpy32bdkwa.d(79): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy32bdkwa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    int space_count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            space_count++;\n            if(space_count >\
    \ 2)\n                continue;\n            else\n                result ~= '_';\n\
    \        }\n        else\n        {\n            result ~= c;\n            space_count\
    \ = 0;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqs_pssuz.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ffd]

    ??:? void tmpqs_pssuz.__unittest_L33_C1() [0x427c83]

    ??:? void tmpqs_pssuz.__modtest() [0x427d80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c693]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff79]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430428]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff05]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b579]

    ??:? runModuleUnitTests [0x42c469]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42844c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int consecutive_spaces = 0;\n    foreach(c; text)\n    {\n\
    \        if(c == ' ')\n        {\n            consecutive_spaces++;\n        \
    \    if(consecutive_spaces == 1)\n            {\n                result ~= '_';\n\
    \            }\n            else if(consecutive_spaces == 2)\n            {\n\
    \                result ~= '-';\n            }\n        }\n        else\n    \
    \    {\n            consecutive_spaces = 0;\n            result ~= c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = fix_spaces;\n\
    \n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp18cqwp0x.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x428035]

    ??:? void tmp18cqwp0x.__unittest_L37_C1() [0x427c6c]

    ??:? void tmp18cqwp0x.__modtest() [0x427db4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5da]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffb1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430460]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff3d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5b1]

    ??:? runModuleUnitTests [0x42c4a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428484]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164330
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result;\n    bool consecutive = false;\n    foreach(c; text)\n    {\n      \
    \  if(c == ' ')\n        {\n            if(consecutive)\n            {\n     \
    \           result ~= '-';\n            }\n            else\n            {\n \
    \               result ~= '_';\n                consecutive = true;\n        \
    \    }\n        }\n        else\n        {\n            result ~= c;\n       \
    \     consecutive = false;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"\
    Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n\
    \    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5j6g35c4.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x42802d]

    ??:? void tmp5j6g35c4.__unittest_L37_C1() [0x427c64]

    ??:? void tmp5j6g35c4.__modtest() [0x427dac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6c3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5d2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffa9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430458]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5a9]

    ??:? runModuleUnitTests [0x42c499]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42847c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164329
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    string\
    \ result = \"\";\n    int count = 0;\n    foreach(c; text)\n    {\n        if(c\
    \ == ' ')\n        {\n            if(count == 0)\n            {\n            \
    \    result ~= '_';\n                count = 1;\n            }\n            else\
    \ if(count == 1)\n            {\n                result ~= '-';\n            \
    \    count = 2;\n            }\n            else\n            {\n            \
    \    count = 2;\n            }\n        }\n        else\n        {\n         \
    \   result ~= c;\n            count = 0;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\"\
    ) == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
    \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4nq8d3wt.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x42804d]

    ??:? void tmp4nq8d3wt.__unittest_L42_C1() [0x427c84]

    ??:? void tmp4nq8d3wt.__modtest() [0x427dcc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c6e3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b5f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ffc9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430478]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5c9]

    ??:? runModuleUnitTests [0x42c4b9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42849c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164331
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n                    \n*/\nstring fix_spaces(string text) \n{\n    auto result\
    \ = text.dup;\n    int i = 0;\n    int n = text.length;\n    while (i < n)\n \
    \   {\n        if (result[i] == ' ')\n        {\n            result[i] = '_';\n\
    \            int j = i + 1;\n            while (j < n && result[j] == ' ')\n \
    \           {\n                result[j] = '-';\n                j++;\n      \
    \      }\n            i = j;\n        }\n        else\n        {\n           \
    \ i++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow\
    \  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"\
    Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") ==\
    \ \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp5dpw1eb.d(15): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    /tmp/tmpp5dpw1eb.d(34): Error: cannot implicitly convert expression `result` of
    type `char[]` to `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp5dpw1eb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164330

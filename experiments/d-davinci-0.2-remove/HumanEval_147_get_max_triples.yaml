name: HumanEval_147_get_max_triples
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    You are given a positive\
  \ integer n. You have to create an integer array a of length n.\n        For each\
  \ i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the\
  \ number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j]\
  \ + a[k] is a multiple of 3.\n\n    Example :\n            Explanation: \n     \
  \   a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \n\
  */\nlong get_max_triples(long n) \n"
tests: "unittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L)\
  \ == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n\
  \    assert(candidate(100L) == 53361L);\n}\nvoid main(){}"
completions: ["{\n    long[] a = new long[n];\n    long count = 0;\n    for(long i\
    \ = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n       \
    \ {\n            for(long k = j + 1; k < n; k++)\n            {\n            \
    \    if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i\
    \ < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n  \
    \          for (long k = j + 1; k < n; k++)\n            {\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n        a[i] =\
    \ i * i - i + 1;\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    \
    \    for (long j = i + 1; j < n; j++)\n            for (long k = j + 1; k < n;\
    \ k++)\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                 \
    \   count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n    long\
    \ count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long j = i\
    \ + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n \
    \           {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \     {\n                    count++;\n                }\n            }\n    \
    \    }\n    }\n    return count;\n}", "{\n    long result = 0;\n    long[] a =\
    \ new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n\
    \    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n      \
    \  {\n            foreach(k; j + 1 .. n)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    long max_triples = 0;\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return max_triples;\n\
    }", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i\
    \ * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j;\
    \ i + 1 .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}",
  "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i <\
    \ n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0;\
    \ i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n        {\n\
    \            for (long k = j + 1; k < n; k++) \n            {\n              \
    \  if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n                  \
    \  result++;\n                }\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    long res = 0;\n    for (int i = 1; i < n - 1; i++) \n    {\n     \
    \   long a = i * i - i + 1;\n        for (int j = i + 1; j < n; j++) \n      \
    \  {\n            long b = j * j - j + 1;\n            for (int k = j + 1; k <=\
    \ n; k++) \n            {\n                long c = k * k - k + 1;\n         \
    \       if ((a + b + c) % 3 == 0) \n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n   \
    \ for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    \n    long\
    \ count = 0;\n    for (long i = 0; i < n; i++)\n        for (long j = i + 1; j\
    \ < n; j++)\n            for (long k = j + 1; k < n; k++)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    \n    return\
    \ count;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n       \
    \ {\n            for(long k = j + 1; k < n; k++)\n            {\n            \
    \    if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 ..\
    \ n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n  \
    \  {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1\
    \ .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n  \
    \              {\n                    result++;\n                }\n         \
    \   }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n\
    \    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n\
    \    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    long result = 0;\n    for (long i = 0; i < n; i++) \n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n        for\
    \ (long j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k\
    \ < n; k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\
    \ \n                {\n                    result++;\n                }\n    \
    \        }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n       \
    \ {\n            for(long k = j + 1; k < n; k++)\n            {\n            \
    \    if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i\
    \ * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j;\
    \ i + 1 .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}",
  "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i -\
    \ i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i +\
    \ 1 .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                    count++;\n    return count;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i\
    \ + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1\
    \ .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n                    count++;\n    return count;\n}", "{\n \
    \   long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i\
    \ + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1\
    \ .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n                    count++;\n    return count;\n}", "{\n \
    \   long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    long count = 0;\n    foreach(i; 0 .. n)\n  \
    \  {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n  \
    \      foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n    long\
    \ count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long j = i\
    \ + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n \
    \           {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \     {\n                    count++;\n                }\n            }\n    \
    \    }\n    }\n    return count;\n}", "{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}", "{\n    long[] a = new long[n];\n\
    \    long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(int i = 0; i < n; i++)\n    {\n     \
    \   a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i < n; i++)\n    {\n    \
    \    for(int j = i + 1; j < n; j++)\n        {\n            for(int k = j + 1;\
    \ k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long max_triples = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    max_triples++;\n           \
    \     }\n            }\n        }\n    }\n    return max_triples;\n}", "{\n  \
    \  long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i +\
    \ 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 ..\
    \ n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}", "{\n    long[]\
    \ a = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n   \
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n \
    \   {\n        for(long j = i + 1; j < n; j++)\n        {\n            for(long\
    \ k = j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n   \
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n \
    \   {\n        for(long j = i + 1; j < n; j++)\n        {\n            for(long\
    \ k = j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long max_triples\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    max_triples++;\n         \
    \       }\n            }\n        }\n    }\n    return max_triples;\n}", "{\n\
    \    long[] a = new long[n];\n    long result = 0;\n    for (int i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (int i = 0; i < n;\
    \ i++)\n    {\n        for (int j = i + 1; j < n; j++)\n        {\n          \
    \  for (int k = j + 1; k < n; k++)\n            {\n                if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n \
    \               }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long max_triples = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return max_triples;\n\
    }", "{\n    long[] a = new long[n];\n    long count = 0;\n    foreach(i; 0 ..\
    \ n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n  \
    \  {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1\
    \ .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n  \
    \              {\n                    count++;\n                }\n          \
    \  }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n\
    \    long res = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n        if (a[i] % 3 == 0)\n        {\n            res += (n -\
    \ i - 1) * (n - i - 2) / 2;\n        }\n    }\n    return res;\n}", "{\n    long[]\
    \ a = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n   \
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n \
    \   {\n        for(long j = i + 1; j < n; j++)\n        {\n            for(long\
    \ k = j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ a = new long[n];\n    long count = 0;\n    for(int i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i < n; i++)\n    {\n\
    \        for(int j = i + 1; j < n; j++)\n        {\n            for(int k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n  \
    \      for(long j = i + 1; j < n; j++)\n        {\n            for(long k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long result =\
    \ 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n \
    \       a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n - 2)\n    {\n        foreach(j;\
    \ i + 1 .. n - 1)\n        {\n            foreach(k; j + 1 .. n)\n           \
    \ {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n  \
    \                  result++;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}", "{\n    long[] a = new long[n];\n    for (long i\
    \ = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count = 0;\n    for\
    \ (long i = 0; i < n; i++)\n        for (long j = i + 1; j < n; j++)\n       \
    \     for (long k = j + 1; k < n; k++)\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}", "{\n    long\
    \ result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n  \
    \      a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j;\
    \ i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n      \
    \              result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    if (n < 3)\n        return\
    \ result;\n    long[] a = new long[n];\n    foreach (i; 0 .. n)\n        a[i]\
    \ = i * i - i + 1;\n    foreach (i; 0 .. n - 2)\n        foreach (j; i + 1 ..\
    \ n - 1)\n            foreach (k; j + 1 .. n)\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                    result++;\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if(a[i] + a[j] + a[k] % 3 == 0)\n            \
    \    {\n                    result++;\n                }\n            }\n    \
    \    }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[] a\
    \ = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++) \n    {\n        for (long\
    \ j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k < n;\
    \ k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0) \n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    long result = 0;\n    for (long i = 0; i < n; i++) \n    {\n        for\
    \ (long j = i + 1; j < n; j++) \n        {\n            for (long k = j + 1; k\
    \ < n; k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\
    \ \n                {\n                    result++;\n                }\n    \
    \        }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n       \
    \ {\n            for(long k = j + 1; k < n; k++)\n            {\n            \
    \    if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long[] a = new long[n];\n    long result = 0;\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i\
    \ + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1\
    \ .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n                    count++;\n    return count;\n}", "{\n \
    \   long[] a = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n\
    \    {\n        for(long j = i + 1; j < n; j++)\n        {\n            for(long\
    \ k = j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    long[] b = new long[n];\n\
    \    long[] c = new long[n];\n    long[] d = new long[n];\n    long[] e = new\
    \ long[n];\n    long[] f = new long[n];\n    long[] g = new long[n];\n    long[]\
    \ h = new long[n];\n    long[] i = new long[n];\n    long[] j = new long[n];\n\
    \    long[] k = new long[n];\n    long[] l = new long[n];\n    long[] m = new\
    \ long[n];\n    long[] o = new long[n];\n    long[] p = new long[n];\n    long[]\
    \ q = new long[n];\n    long[] r = new long[n];\n    long[] s = new long[n];\n\
    \    long[] t = new long[n];\n    long[] u = new long[n];\n    long[] v = new\
    \ long[n];\n    long[] w = new long[n];\n    long[] x = new long[n];\n    long[]\
    \ y = new long[n];\n    long[] z = new long[n];\n    long[] aa = new long[n];\n\
    \    long[] bb = new long[n];\n    long[] cc = new long[n];\n    long[] dd = new\
    \ long[n];\n    long[] ee = new long[n];\n    long[] ff = new long[n];\n    long[]\
    \ gg = new long[n];\n    long[] hh = new long[n];\n    long[] ii = new long[n];\n\
    \    long[] jj = new long[n];\n    long[] kk = new long[n];\n    long[] ll = new\
    \ long[n];\n    long[] mm = new long[n];\n    long[] oo = new long[n];\n    long[]\
    \ pp = new long[n];\n    long[] qq = new long[n];\n    long[] rr = new long[n];\n\
    \    long[] ss = new long[n];\n    long[] tt = new long[n];\n    long[] uu = new\
    \ long[n];\n    long", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n\
    \        a[i] = i * i - i + 1;\n    long result = 0;\n    foreach(i; 0 .. n)\n\
    \        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n        \
    \        if((a[i] + a[j] + a[k]) % 3 == 0)\n                    result++;\n  \
    \  return result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n  \
    \      for(long j = i + 1; j < n; j++)\n        {\n            for(long k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   long[] b = new long[n];\n    long[] c = new long[n];\n    long[] d = new long[n];\n\
    \    long[] e = new long[n];\n    long[] f = new long[n];\n    long[] g = new\
    \ long[n];\n    long[] h = new long[n];\n    long[] i = new long[n];\n    long[]\
    \ j = new long[n];\n    long[] k = new long[n];\n    long[] l = new long[n];\n\
    \    long[] m = new long[n];\n    long[] o = new long[n];\n    long[] p = new\
    \ long[n];\n    long[] q = new long[n];\n    long[] r = new long[n];\n    long[]\
    \ s = new long[n];\n    long[] t = new long[n];\n    long[] u = new long[n];\n\
    \    long[] v = new long[n];\n    long[] w = new long[n];\n    long[] x = new\
    \ long[n];\n    long[] y = new long[n];\n    long[] z = new long[n];\n    long[]\
    \ aa = new long[n];\n    long[] bb = new long[n];\n    long[] cc = new long[n];\n\
    \    long[] dd = new long[n];\n    long[] ee = new long[n];\n    long[] ff = new\
    \ long[n];\n    long[] gg = new long[n];\n    long[] hh = new long[n];\n    long[]\
    \ ii = new long[n];\n    long[] jj = new long[n];\n    long[] kk = new long[n];\n\
    \    long[] ll = new long[n];\n    long[] mm = new long[n];\n    long[] oo = new\
    \ long[n];\n    long[] pp = new long[n];\n    long[] qq = new long[n];\n    long[]\
    \ rr = new long[n];\n    long[] ss = new long[n];\n    long[] tt = new long[n];\n\
    \    long[] uu = new long[n];\n    long", "{\n    long[] a = new long[n];\n  \
    \  long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i\
    \ + 1;\n    long result = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1\
    \ .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n                    result++;\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    long count = 0;\n    foreach(i; 0 .. n)\n  \
    \  {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n  \
    \      foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n    long\
    \ count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long j = i\
    \ + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n \
    \           {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \     {\n                    count++;\n                }\n            }\n    \
    \    }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n    long\
    \ count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long j = i\
    \ + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n \
    \           {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \     {\n                    count++;\n                }\n            }\n    \
    \    }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n    long\
    \ result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i -\
    \ i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j\
    \ = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long ans = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    ans++;\n                }\n            }\n    \
    \    }\n    }\n    return ans;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long res = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n\
    \            foreach(k; j + 1 .. n)\n            {\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n \
    \               }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long max_triples = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return max_triples;\n\
    }", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n        a[i] =\
    \ i * i - i + 1;\n    long count = 0;\n    for (long i = 0; i < n; i++)\n    \
    \    for (long j = i + 1; j < n; j++)\n            for (long k = j + 1; k < n;\
    \ k++)\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                 \
    \   count++;\n    return count;\n}", "{\n    long max_triples = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    max_triples++;\n                }\n           \
    \ }\n        }\n    }\n    return max_triples;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n  \
    \      for(long j = i + 1; j < n; j++)\n        {\n            for(long k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    long res = 0;\n    for (long i = 0; i < n; i++)\n    {\n     \
    \   a[i] = i * i - i + 1;\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    res++;\n\
    \                }\n            }\n        }\n    }\n    return res;\n}", "{\n\
    \    long[] a = new long[n];\n    long sum = 0;\n    foreach(i; 0 .. n)\n    {\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    if(sum % 3 !=\
    \ 0)\n        return 0;\n    long[] b = new long[n];\n    long[] c = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        b[i] = a[i] % 3;\n        c[i] = b[i]\
    \ == 0 ? 0 : 3 - b[i];\n    }\n    long[] d = new long[n];\n    long[] e = new\
    \ long[n];\n    foreach(i; 0 .. n)\n    {\n        d[i] = c[i] == 0 ? 0 : 1;\n\
    \        e[i] = b[i] == 0 ? 0 : 1;\n    }\n    long[] f = new long[n];\n    long[]\
    \ g = new long[n];\n    foreach(i; 0 .. n)\n    {\n        f[i] = i == 0 ? d[i]\
    \ : f[i - 1] + d[i];\n        g[i] = i == 0 ? e[i] : g[i - 1] + e[i];\n    }\n\
    \    long ans = 0;\n    foreach(i; 0 .. n)\n    {\n        if(b[i] == 0)\n   \
    \         ans += f[i] * (f[i] - 1) / 2;\n        else\n            ans += g[i]\
    \ * (g[i] - 1) / 2;\n    }\n    return ans;\n}", "{\n    long result = 0;\n  \
    \  long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j\
    \ + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    result++;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n  \
    \      for(long j = i + 1; j < n; j++)\n        {\n            for(long k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n \
    \       {\n            foreach(k; j + 1 .. n)\n            {\n               \
    \ if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n \
    \   {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n \
    \       foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n   \
    \ foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n   \
    \ foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j\
    \ + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n             \
    \       count++;\n    return count;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long sum = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n        sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return\
    \ 0;\n    long[] dp = new long[n];\n    dp[0] = 1;\n    for (long i = 1; i < n;\
    \ i++)\n    {\n        dp[i] = dp[i - 1];\n        if (a[i] % 3 == 0)\n      \
    \      dp[i]++;\n    }\n    long res = 0;\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            if ((a[i]\
    \ + a[j]) % 3 == 0)\n            {\n                long k = j + 1;\n        \
    \        while (k < n && a[k] < a[i] + a[j])\n                    k++;\n     \
    \           if (k < n && a[k] == a[i] + a[j])\n                    res += dp[k\
    \ - 1] - dp[j];\n            }\n        }\n    }\n    return res;\n}", "{\n  \
    \  long[] a = new long[n];\n    long res = 0;\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n        if (a[i] % 3 == 0)\n        {\n\
    \            res++;\n        }\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            if ((a[i] +\
    \ a[j]) % 3 == 0)\n            {\n                res += n - j - 1;\n        \
    \        break;\n            }\n        }\n    }\n    return res;\n}", "{\n  \
    \  long[] a = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n\
    \    {\n        for(long j = i + 1; j < n; j++)\n        {\n            for(long\
    \ k = j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long[] a\
    \ = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n\
    \        for(long j = i + 1; j < n; j++)\n        {\n            for(long k =\
    \ j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long res = 0;\n    long[] a\
    \ = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    foreach(i;\
    \ 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                    res++;\n\
    \    return res;\n}", "{\n    long[] a = new long[n];\n    long res = 0;\n   \
    \ for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n       \
    \ for (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1;\
    \ k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                {\n                    res++;\n                }\n     \
    \       }\n        }\n    }\n    return res;\n}", "{\n    long[] a = new long[n];\n\
    \    for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    for (long i = 0; i < n - 2; i++)\n        for (long j = i + 1; j <\
    \ n - 1; j++)\n            for (long k = j + 1; k < n; k++)\n                if\
    \ ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return count;\n\
    }", "{\n    long[] a = new long[n];\n    long result = 0;\n    foreach(i; 0 ..\
    \ n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n  \
    \  {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1\
    \ .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n  \
    \              {\n                    result++;\n                }\n         \
    \   }\n        }\n    }\n    return result;\n}", "{\n    long result = 0;\n  \
    \  long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n   \
    \ long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for\
    \ (long j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k\
    \ < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    res++;\n                }\n          \
    \  }\n        }\n    }\n    return res;\n}", "{\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n\
    \    foreach(i; 0 .. n - 2)\n        foreach(j; i + 1 .. n - 1)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   long sum = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i *\
    \ i - i + 1;\n        sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return\
    \ 0;\n    long[] dp = new long[sum / 3 + 1];\n    dp[0] = 1;\n    for (long i\
    \ = 0; i < n; i++)\n    {\n        for (long j = sum / 3; j >= a[i]; j--)\n  \
    \      {\n            dp[j] += dp[j - a[i]];\n        }\n    }\n    return dp[sum\
    \ / 3];\n}", "{\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\
    \ \n    {\n        a[i] = i * i - i + 1;\n    }\n    long count = 0;\n    for\
    \ (long i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n\
    \        {\n            for (long k = j + 1; k < n; k++) \n            {\n   \
    \             if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}", "{\n    long[] a = new long[n];\n    long result = 0;\n\
    \    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    foreach(i; 0 .. n)\n\
    \        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n        \
    \        if((a[i] + a[j] + a[k]) % 3 == 0)\n                    res++;\n    return\
    \ res;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    foreach(i;\
    \ 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n\
    \    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n    long\
    \ count = 0;\n    for(int i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = i +\
    \ 1; j < n; j++)\n        {\n            for(int k = j + 1; k < n; k++)\n    \
    \        {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n              \
    \  {\n                    count++;\n                }\n            }\n       \
    \ }\n    }\n    return count;\n}", "{\n    long result = 0;\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n   \
    \ }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n\
    \            foreach(k; j + 1 .. n)\n            {\n                if((a[i] +\
    \ a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n \
    \               }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] a = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i\
    \ + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1\
    \ .. n)\n            foreach(k; j + 1 .. n)\n                if((a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n                    count++;\n    return count;\n}", "{\n \
    \   long result = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n  \
    \  {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n  \
    \      foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    result++;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n   \
    \ long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n - 2; i++)\n    {\n        for\
    \ (long j = i + 1; j < n - 1; j++)\n        {\n            for (long k = j + 1;\
    \ k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n                {\n                    result++;\n                }\n  \
    \          }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n  \
    \      for(long j = i + 1; j < n; j++)\n        {\n            for(long k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i +\
    \ 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n    \
    \            if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n          \
    \          count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n       \
    \ {\n            for(long k = j + 1; k < n; k++)\n            {\n            \
    \    if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long[] a = new long[n];\n    long result = 0;\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n;\
    \ i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i <\
    \ n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n      \
    \      for (long k = j + 1; k < n; k++)\n            {\n                if ((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long max_triples = 0;\n    long[] a = new long[n];\n    for (long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i =\
    \ 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n        {\n\
    \            for (long k = j + 1; k < n; k++)\n            {\n               \
    \ if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                    max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return max_triples;\n\
    }", "{\n    long[] a = new long[n];\n    long count = 0;\n    for(long i = 0;\
    \ i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0;\
    \ i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n        {\n   \
    \         for(long k = j + 1; k < n; k++)\n            {\n                if((a[i]\
    \ + a[j] + a[k]) % 3 == 0)\n                {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long res = 0;\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n\
    \    {\n        for (long j = i + 1; j < n; j++)\n        {\n            for (long\
    \ k = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    res++;\n                }\n\
    \            }\n        }\n    }\n    return res;\n}", "{\n    long[] a = new\
    \ long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n    \
    \    a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n  \
    \      for(long j = i + 1; j < n; j++)\n        {\n            for(long k = j\
    \ + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) % 3\
    \ == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n        for(long\
    \ j = i + 1; j < n; j++)\n        {\n            for(long k = j + 1; k < n; k++)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    count++;\n                }\n            }\n   \
    \     }\n    }\n    return count;\n}", "{\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i;\
    \ 0 .. n - 2)\n        foreach(j; i + 1 .. n - 1)\n            foreach(k; j +\
    \ 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n               \
    \     count++;\n    return count;\n}", "{\n    long res = 0;\n    long[] a = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long j =\
    \ i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    res++;\n                }\n            }\n    \
    \    }\n    }\n    return res;\n}", "{\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n        a[i] = i * i - i + 1;\n    long result = 0;\n    foreach(i;\
    \ 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                    result++;\n\
    \    return result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long res = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     res++;\n                }\n            }\n        }\n    }\n    return res;\n\
    }", "{\n    long[] a = new long[n];\n    long res = 0;\n    foreach(i; 0 .. n)\n\
    \    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n\
    \        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n\
    \            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n          \
    \      {\n                    res++;\n                }\n            }\n     \
    \   }\n    }\n    return res;\n}", "{\n    long[] a = new long[n];\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n  \
    \          foreach(k; j + 1 .. n)\n            {\n                if((a[i] + a[j]\
    \ + a[k]) % 3 == 0)\n                {\n                    count++;\n       \
    \         }\n            }\n        }\n    }\n    return count;\n}", "{\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n        a[i] = i * i - i\
    \ + 1;\n    long count = 0;\n    for (long i = 0; i < n - 2; i++)\n        for\
    \ (long j = i + 1; j < n - 1; j++)\n            for (long k = j + 1; k < n; k++)\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n\
    \    return count;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n\
    \        a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n\
    \        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n        \
    \        if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n   \
    \ return count;\n}", "{\n    long[] a = new long[n];\n    for (long i = 0; i <\
    \ n; i++)\n        a[i] = i * i - i + 1;\n    long count = 0;\n    for (long i\
    \ = 0; i < n - 2; i++)\n        for (long j = i + 1; j < n - 1; j++)\n       \
    \     for (long k = j + 1; k < n; k++)\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                    count++;\n    return count;\n}", "{\n    long[]\
    \ a = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n   \
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n \
    \   {\n        for(long j = i + 1; j < n; j++)\n        {\n            for(long\
    \ k = j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    count++;\n               \
    \ }\n            }\n        }\n    }\n    return count;\n}", "{\n    long[] a\
    \ = new long[n];\n    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n\
    \        a[i] = i * i - i + 1;\n    }\n    for(long i = 0; i < n; i++)\n    {\n\
    \        for(long j = i + 1; j < n; j++)\n        {\n            for(long k =\
    \ j + 1; k < n; k++)\n            {\n                if((a[i] + a[j] + a[k]) %\
    \ 3 == 0)\n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n  \
    \      a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long[] a = new long[n];\n    long result = 0;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    long sum = 0;\n    long count\
    \ = 0;\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n\
    \        sum += a[i];\n    }\n    if (sum % 3 != 0)\n        return 0;\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long[] a = new\
    \ long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count\
    \ = 0;\n    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  for (long i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    long count = 0;\n    for (long i = 0; i < n - 2; i++) \n    {\n        for\
    \ (long j = i + 1; j < n - 1; j++) \n        {\n            for (long k = j +\
    \ 1; k < n; k++) \n            {\n                if ((a[i] + a[j] + a[k]) % 3\
    \ == 0) \n                {\n                    count++;\n                }\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long result =\
    \ 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n - 2)\n    {\n        foreach(j;\
    \ i + 1 .. n - 1)\n        {\n            foreach(k; j + 1 .. n)\n           \
    \ {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n  \
    \                  result++;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i;\
    \ 0 .. n)\n    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k;\
    \ j + 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    long count = 0;\n    for(long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i + 1\
    \ .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n      \
    \          if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n            \
    \        count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n     \
    \   a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n     \
    \   foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n             \
    \   if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++) \n    {\n        for (long j = i + 1; j < n; j++) \n    \
    \    {\n            for (long k = j + 1; k < n; k++) \n            {\n       \
    \         if ((a[i] + a[j] + a[k]) % 3 == 0) \n                {\n           \
    \         result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n     \
    \   a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n     \
    \   foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n             \
    \   if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for(long\
    \ i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n       \
    \ {\n            for(long k = j + 1; k < n; k++)\n            {\n            \
    \    if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long[] a = new long[n];\n    long sum = 0;\n    for (long i = 0; i\
    \ < n; i++)\n    {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n\
    \    if (sum % 3 != 0)\n        return 0;\n    long[] dp = new long[n];\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        if (a[i] % 3 == 0)\n            dp[i]\
    \ = 1;\n    }\n    for (long i = 1; i < n; i++)\n    {\n        dp[i] += dp[i\
    \ - 1];\n    }\n    long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            if ((a[i] +\
    \ a[j]) % 3 == 0)\n            {\n                result += dp[j - 1] - dp[i];\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new\
    \ long[n];\n    long result = 0;\n    for (long i = 0; i < n; i++)\n    {\n  \
    \      a[i] = i * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n\
    \        for (long j = i + 1; j < n; j++)\n        {\n            for (long k\
    \ = j + 1; k < n; k++)\n            {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 == 0)\n                {\n                    result++;\n              \
    \  }\n            }\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n    {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n    {\n        foreach(j; i\
    \ + 1 .. n)\n        {\n            foreach(k; j + 1 .. n)\n            {\n  \
    \              if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n        \
    \            result++;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n\
    \        a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n\
    \        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n        \
    \        if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n   \
    \ return count;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n  \
    \  for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n      \
    \  {\n            for (long k = j + 1; k < n; k++)\n            {\n          \
    \      if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n    for\
    \ (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n; j++)\n\
    \        {\n            for (long k = j + 1; k < n; k++)\n            {\n    \
    \            if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n         \
    \           result++;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n      \
    \  a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 .. n)\n      \
    \  foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n              \
    \  if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n    return\
    \ count;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 .. n)\n      \
    \  a[i] = i * i - i + 1;\n    \n    long count = 0;\n    foreach(i; 0 .. n)\n\
    \        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n        \
    \        if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n   \
    \ return count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n \
    \   for (long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        for (long j = i + 1; j < n;\
    \ j++)\n        {\n            for (long k = j + 1; k < n; k++)\n            {\n\
    \                if ((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] a = new long[n];\n    foreach(i; 0 ..\
    \ n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n    foreach(i; 0 ..\
    \ n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n   \
    \             if((a[i] + a[j] + a[k]) % 3 == 0)\n                    count++;\n\
    \    return count;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n\
    \    for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    long[] a = new long[n];\n    foreach(i;\
    \ 0 .. n)\n    {\n        a[i] = i * i - i + 1;\n    }\n    foreach(i; 0 .. n)\n\
    \    {\n        foreach(j; i + 1 .. n)\n        {\n            foreach(k; j +\
    \ 1 .. n)\n            {\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n\
    \                {\n                    result++;\n                }\n       \
    \     }\n        }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n\
    \    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n\
    \    foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n \
    \   foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long[] a = new long[n];\n \
    \   long[] b = new long[n];\n    long[] c = new long[n];\n    long[] d = new long[n];\n\
    \    long[] e = new long[n];\n    long[] f = new long[n];\n    long[] g = new\
    \ long[n];\n    long[] h = new long[n];\n    long[] i = new long[n];\n    long[]\
    \ j = new long[n];\n    long[] k = new long[n];\n    long[] l = new long[n];\n\
    \    long[] m = new long[n];\n    long[] o = new long[n];\n    long[] p = new\
    \ long[n];\n    long[] q = new long[n];\n    long[] r = new long[n];\n    long[]\
    \ s = new long[n];\n    long[] t = new long[n];\n    long[] u = new long[n];\n\
    \    long[] v = new long[n];\n    long[] w = new long[n];\n    long[] x = new\
    \ long[n];\n    long[] y = new long[n];\n    long[] z = new long[n];\n    long[]\
    \ aa = new long[n];\n    long[] bb = new long[n];\n    long[] cc = new long[n];\n\
    \    long[] dd = new long[n];\n    long[] ee = new long[n];\n    long[] ff = new\
    \ long[n];\n    long[] gg = new long[n];\n    long[] hh = new long[n];\n    long[]\
    \ ii = new long[n];\n    long[] jj = new long[n];\n    long[] kk = new long[n];\n\
    \    long[] ll = new long[n];\n    long[] mm = new long[n];\n    long[] oo = new\
    \ long[n];\n    long[] pp = new long[n];\n    long[] qq = new long[n];\n    long[]\
    \ rr = new long[n];\n    long[] ss = new long[n];\n    long[] tt = new long[n];\n\
    \    long[] uu = new long[n];\n    long", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n  \
    \  foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long[]\
    \ a = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    for (long i = 0; i < n; i++)\n    {\n        for (long\
    \ j = i + 1; j < n; j++)\n        {\n            for (long k = j + 1; k < n; k++)\n\
    \            {\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n         \
    \       {\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}", "{\n    long[] a = new long[n];\n  \
    \  foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    long count = 0;\n  \
    \  foreach(i; 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k;\
    \ j + 1 .. n)\n                if((a[i] + a[j] + a[k]) % 3 == 0)\n           \
    \         count++;\n    return count;\n}", "{\n    long res = 0;\n    long[] a\
    \ = new long[n];\n    foreach(i; 0 .. n)\n        a[i] = i * i - i + 1;\n    foreach(i;\
    \ 0 .. n)\n        foreach(j; i + 1 .. n)\n            foreach(k; j + 1 .. n)\n\
    \                if((a[i] + a[j] + a[k]) % 3 == 0)\n                    res++;\n\
    \    return res;\n}", "{\n    long[] a = new long[n];\n    long count = 0;\n \
    \   for(long i = 0; i < n; i++)\n    {\n        a[i] = i * i - i + 1;\n    }\n\
    \    for(long i = 0; i < n; i++)\n    {\n        for(long j = i + 1; j < n; j++)\n\
    \        {\n            for(long k = j + 1; k < n; k++)\n            {\n     \
    \           if((a[i] + a[j] + a[k]) % 3 == 0)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long[] a = new long[n];\n    for (long i = 0; i < n; i++)\n\
    \        a[i] = i * i - i + 1;\n    long count = 0;\n    for (long i = 0; i <\
    \ n; i++)\n        for (long j = i + 1; j < n; j++)\n            for (long k =\
    \ j + 1; k < n; k++)\n                if ((a[i] + a[j] + a[k]) % 3 == 0)\n   \
    \                 count++;\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

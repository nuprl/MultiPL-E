name: HumanEval_25_factorize
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Return list of prime factors\
  \ of given integer in the order from smallest to largest.\n    Each of the factors\
  \ should be listed number of times corresponding to how many times it appeares in\
  \ factorization.\n    Input number should be equal to the product of all factors\n\
  \                \n*/\nlong[] factorize(long n) \n"
tests: "unittest\n{\n    alias candidate = factorize;\n\n    assert(candidate(2L)\
  \ == [2L]);\n    assert(candidate(4L) == [2L, 2L]);\n    assert(candidate(8L) ==\
  \ [2L, 2L, 2L]);\n    assert(candidate(57L) == [3L, 19L]);\n    assert(candidate(3249L)\
  \ == [3L, 3L, 19L, 19L]);\n    assert(candidate(185193L) == [3L, 3L, 3L, 19L, 19L,\
  \ 19L]);\n    assert(candidate(20577L) == [3L, 19L, 19L, 19L]);\n    assert(candidate(18L)\
  \ == [2L, 3L, 3L]);\n}\nvoid main(){}"
completions: ["{\n    long[] result = [];\n    long[] primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,\
    \ 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179,\
    \ 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269,\
    \ 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367,\
    \ 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461,\
    \ 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571,\
    \ 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661,\
    \ 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773,\
    \ 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883,\
    \ 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009,\
    \ 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091,\
    \ 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187",
  "{\n    long[] result = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019,\
    \ 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\
    \ 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n %\
    \ i == 0) \n        {\n            factors ~= i;\n            n /= i;\n      \
    \  } \n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ factors;\n}", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <=\
    \ n) \n    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n\
    \            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return factors;\n}\n ", "{\n    long[] factors;\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181, 1187,", "{\n    long[] factors;\n    long[] primes =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187,", "{\n    long[] factors = [];\n    long i = 2;\n    while\
    \ (n > 1) \n    {\n        while (n % i == 0) \n        {\n            factors\
    \ ~= i;\n            n /= i;\n        }\n        i++;\n    }\n    return factors;\n\
    }", "{\n    long[] factors = new long[];\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\
    \ 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881,\
    \ 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,\
    \ 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087,\
    \ 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181",
  "{\n    long[] factors = new long[];\n    long d = 2;\n    while (n > 1) \n    {\n\
    \        while (n % d == 0) \n        {\n            factors ~= d;\n         \
    \   n /= d;\n        }\n        d += 1;\n    }\n    return factors;\n}", "{\n\
    \    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n     \
    \   if (n % i == 0) \n        {\n            factors ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return factors;\n}", "{\n    long[] factors;\n    long[] primes = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187,", "{\n    long[] res = [];\n    long i = 2;\n    while (i * i <=\
    \ n) \n    {\n        if (n % i == 0) \n        {\n            res ~= i;\n   \
    \         n /= i;\n        } \n        else \n        {\n            i++;\n  \
    \      }\n    }\n    if (n > 1) \n    {\n        res ~= n;\n    }\n    return\
    \ res;\n}", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <= n)\
    \ \n    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n  \
    \          n /= i;\n        } \n        else \n        {\n            i++;\n \
    \       }\n    }\n    return factors;\n}", "{\n    long[] factors = new long[];\n\
    \    long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n      \
    \  {\n            factors ~= i;\n            n /= i;\n        } \n        else\
    \ \n        {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n\
    \    long[] result = [];\n    long i = 2;\n    while (i <= n) \n    {\n      \
    \  if (n % i == 0) \n        {\n            result ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return result;\n}", "{\n    long[] factors = [];\n    long i = 2;\n    while\
    \ (i <= n) \n    {\n        if (n % i == 0) \n        {\n            factors ~=\
    \ i;\n            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors;\n    foreach(i;\
    \ 2..n)\n    {\n        if(n % i == 0)\n        {\n            factors ~= i;\n\
    \            n /= i;\n            i = 1;\n        }\n    }\n    return factors;\n\
    }", "{\n    long[] result = [];\n    long i = 2;\n    while (n > 1) \n    {\n\
    \        while (n % i == 0) \n        {\n            result ~= i;\n          \
    \  n /= i;\n        }\n        i++;\n    }\n    return result;\n}", "{\n    long[]\
    \ factors = [];\n    foreach(i; 2..n)\n    {\n        while(n % i == 0)\n    \
    \    {\n            factors ~= i;\n            n /= i;\n        }\n    }\n   \
    \ return factors;\n}", "{\n    long[] result = new long[];\n    long[] primes\
    \ = new long[];\n    long i = 2;\n    while (n > 1) \n    {\n        if (n % i\
    \ == 0) \n        {\n            n /= i;\n            result ~= i;\n         \
    \   if (primes.length == 0 || primes[$-1] != i) \n            {\n            \
    \    primes ~= i;\n            }\n        } \n        else \n        {\n     \
    \       i++;\n        }\n    }\n    return result;\n}", "{\n    long[] result\
    \ = [];\n    long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0)\
    \ \n        {\n            result ~= d;\n            n /= d;\n        }\n    \
    \    d += 1;\n    }\n    return result;\n}", "{\n    long[] result = new long[];\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181", "{\n    long[] result = [];\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = [];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors;\n    long i = 2;\n    while (i <=\
    \ n) \n    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n\
    \            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors = [];\n   \
    \ long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0) \n      \
    \  {\n            factors ~= d;\n            n /= d;\n        }\n        d +=\
    \ 1;\n    }\n    return factors;\n}", "{\n    long[] factors = [];\n    long i\
    \ = 2;\n    while (i <= n) \n    {\n        if (n % i == 0) \n        {\n    \
    \        factors ~= i;\n            n /= i;\n        } \n        else \n     \
    \   {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n    long[]\
    \ result;\n    long[] factors;\n    long[] powers;\n    long i;\n    long j;\n\
    \    long k;\n    long l;\n    long m;\n    long p;\n    long q;\n    long r;\n\
    \    long s;\n    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n\
    \    long y;\n    long z;\n    long aa;\n    long bb;\n    long cc;\n    long\
    \ dd;\n    long ee;\n    long ff;\n    long gg;\n    long hh;\n    long ii;\n\
    \    long jj;\n    long kk;\n    long ll;\n    long mm;\n    long nn;\n    long\
    \ oo;\n    long pp;\n    long qq;\n    long rr;\n    long ss;\n    long tt;\n\
    \    long uu;\n    long vv;\n    long ww;\n    long xx;\n    long yy;\n    long\
    \ zz;\n    long aaa;\n    long bbb;\n    long ccc;\n    long ddd;\n    long eee;\n\
    \    long fff;\n    long ggg;\n    long hhh;\n    long iii;\n    long jjj;\n \
    \   long kkk;\n    long lll;\n    long mmm;\n    long nnn;\n    long ooo;\n  \
    \  long ppp;\n    long qqq;\n    long rrr;\n    long sss;\n    long ttt;\n   \
    \ long uuu;\n    long vvv;\n    long www;\n    long xxx;\n    long yyy;\n    long\
    \ zzz;\n    long aaaa;\n    long bbbb;\n    long cccc;\n    long dddd;\n    long\
    \ eeee;\n    long ffff;\n    long gggg;\n    long hhhh;\n    long iiii;\n    long\
    \ jjjj;\n    long kkkk;\n    long llll;\n    long mmmm;\n    long nnnn;\n    long\
    \ oooo;\n    long pppp;\n    long qqqq", "{\n    long[] factors = [];\n    long\
    \ i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n   \
    \         factors ~= i;\n            n /= i;\n        } \n        else \n    \
    \    {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n    long[]\
    \ result = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n % i\
    \ == 0) \n        {\n            result ~= i;\n            n /= i;\n        }\
    \ \n        else \n        {\n            i++;\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result = [];\n    long i = 2;\n    while (i <= n) \n    {\n\
    \        if (n % i == 0) \n        {\n            result ~= i;\n            n\
    \ /= i;\n        } \n        else \n        {\n            i++;\n        }\n \
    \   }\n    return result;\n}", "{\n    long[] result = [];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors = [];\n    long i = 2;\n    while\
    \ (i <= n) \n    {\n        if (n % i == 0) \n        {\n            factors ~=\
    \ i;\n            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors = [];\n   \
    \ long[] prime_factors = [];\n    long[] prime_factors_count = [];\n    long i\
    \ = 2;\n    long j = 0;\n    long k = 0;\n    long count = 0;\n    long[] prime_numbers\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 10", "{\n\
    \    long[] factors = [];\n    long d = 2;\n    while (n > 1) \n    {\n      \
    \  while (n % d == 0) \n        {\n            factors ~= d;\n            n /=\
    \ d;\n        }\n        d++;\n    }\n    return factors;\n}", "{\n    long[]\
    \ factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ result;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n    long[]\
    \ primeNumbers;\n    long i;\n    long j;\n    long k;\n    long l;\n    long\
    \ m;\n    long n;\n    long o;\n    long p;\n    long q;\n    long r;\n    long\
    \ s;\n    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long\
    \ y;\n    long z;\n    long aa;\n    long ab;\n    long ac;\n    long ad;\n  \
    \  long ae;\n    long af;\n    long ag;\n    long ah;\n    long ai;\n    long\
    \ aj;\n    long ak;\n    long al;\n    long am;\n    long an;\n    long ao;\n\
    \    long ap;\n    long aq;\n    long ar;\n    long as;\n    long at;\n    long\
    \ au;\n    long av;\n    long aw;\n    long ax;\n    long ay;\n    long az;\n\
    \    long ba;\n    long bb;\n    long bc;\n    long bd;\n    long be;\n    long\
    \ bf;\n    long bg;\n    long bh;\n    long bi;\n    long bj;\n    long bk;\n\
    \    long bl;\n    long bm;\n    long bn;\n    long bo;\n    long bp;\n    long\
    \ bq;\n    long br;\n    long bs;\n    long bt;\n    long bu;\n    long bv;\n\
    \    long bw;\n    long bx;\n    long by;\n    long bz;\n    long ca;\n    long\
    \ cb;\n    long cc;\n    long cd;\n    long ce;\n    long cf;\n    long cg;\n\
    \    long ch;\n    long ci;\n    long cj;\n    long ck;\n    long cl;\n    long\
    \ cm;\n    long cn;\n    long co;\n    long cp;\n    long cq;\n    long cr;\n\
    \    long cs;\n    long ct", "{\n    long[] factors = new long[];\n    long i\
    \ = 2;\n    while (n > 1)\n    {\n        if (n % i == 0)\n        {\n       \
    \     factors ~= i;\n            n /= i;\n        }\n        else\n        {\n\
    \            i++;\n        }\n    }\n    return factors;\n}", "{\n    long[] result\
    \ = [];\n    long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n\
    \        {\n            result ~= i;\n            n /= i;\n        } \n      \
    \  else \n        {\n            i++;\n        }\n    }\n    return result;\n}",
  "{\n    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n    \
    \    if (n % i == 0) \n        {\n            factors ~= i;\n            n /=\
    \ i;\n        } \n        else \n        {\n            i++;\n        }\n    }\n\
    \    return factors;\n}", "{\n    long[] result = new long[];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181", "{\n    long[] result;\n    long[] primes;\n    long i;\n    long\
    \ j;\n    long k;\n    long l;\n    long m;\n    long n;\n    long o;\n    long\
    \ p;\n    long q;\n    long r;\n    long s;\n    long t;\n    long u;\n    long\
    \ v;\n    long w;\n    long x;\n    long y;\n    long z;\n    long aa;\n    long\
    \ ab;\n    long ac;\n    long ad;\n    long ae;\n    long af;\n    long ag;\n\
    \    long ah;\n    long ai;\n    long aj;\n    long ak;\n    long al;\n    long\
    \ am;\n    long an;\n    long ao;\n    long ap;\n    long aq;\n    long ar;\n\
    \    long as;\n    long at;\n    long au;\n    long av;\n    long aw;\n    long\
    \ ax;\n    long ay;\n    long az;\n    long ba;\n    long bb;\n    long bc;\n\
    \    long bd;\n    long be;\n    long bf;\n    long bg;\n    long bh;\n    long\
    \ bi;\n    long bj;\n    long bk;\n    long bl;\n    long bm;\n    long bn;\n\
    \    long bo;\n    long bp;\n    long bq;\n    long br;\n    long bs;\n    long\
    \ bt;\n    long bu;\n    long bv;\n    long bw;\n    long bx;\n    long by;\n\
    \    long bz;\n    long ca;\n    long cb;\n    long cc;\n    long cd;\n    long\
    \ ce;\n    long cf;\n    long cg;\n    long ch;\n    long ci;\n    long cj;\n\
    \    long ck;\n    long cl;\n    long cm;\n    long cn;\n    long co;\n    long\
    \ cp;\n    long cq;\n    long cr;\n    long cs;\n    long ct;\n    long cu;\n\
    \    long cv;\n    long cw", "{\n    long[] factors = [];\n    long d = 2;\n \
    \   while (n > 1) \n    {\n        while (n % d == 0) \n        {\n          \
    \  factors ~= d;\n            n /= d;\n        }\n        d += 1;\n        if\
    \ (d * d > n) \n        {\n            if (n > 1) \n            {\n          \
    \      factors ~= n;\n            }\n            break;\n        }\n    }\n  \
    \  return factors;\n}", "{\n    long[] factors = [];\n    long[] primes = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors;\n    long[] primeFactors;\n    long[]\
    \ primeFactorsCount;\n    long[] primeNumbers;\n    long[] primeNumbersCount;\n\
    \    long[] primeNumbersCount2;\n    long[] primeNumbersCount3;\n    long[] primeNumbersCount4;\n\
    \    long[] primeNumbersCount5;\n    long[] primeNumbersCount6;\n    long[] primeNumbersCount7;\n\
    \    long[] primeNumbersCount8;\n    long[] primeNumbersCount9;\n    long[] primeNumbersCount10;\n\
    \    long[] primeNumbersCount11;\n    long[] primeNumbersCount12;\n    long[]\
    \ primeNumbersCount13;\n    long[] primeNumbersCount14;\n    long[] primeNumbersCount15;\n\
    \    long[] primeNumbersCount16;\n    long[] primeNumbersCount17;\n    long[]\
    \ primeNumbersCount18;\n    long[] primeNumbersCount19;\n    long[] primeNumbersCount20;\n\
    \    long[] primeNumbersCount21;\n    long[] primeNumbersCount22;\n    long[]\
    \ primeNumbersCount23;\n    long[] primeNumbersCount24;\n    long[] primeNumbersCount25;\n\
    \    long[] primeNumbersCount26;\n    long[] primeNumbersCount27;\n    long[]\
    \ primeNumbersCount28;\n    long[] primeNumbersCount29;\n    long[] primeNumbersCount30;\n\
    \    long[] primeNumbersCount31;\n    long[] primeNumbersCount32;\n    long[]\
    \ primeNumbersCount33;\n    long[] primeNumbersCount34;\n    long[] primeNumbersCount35;\n\
    \    long[] primeNumbersCount36;\n    long[] primeNumbersCount37;\n    long[]\
    \ primeNumbersCount38;\n    long[] primeNumbersCount39;\n    long[] primeNumbersCount40;\n\
    \    long[] primeNumbersCount41;\n    long[] primeNumbersCount42;\n    long[]\
    \ primeNumbersCount43;\n    long[] primeNumbersCount44;\n    long[] primeNumbersCount45;\n\
    \    long[] primeNumbersCount46;\n    long[] primeNumbersCount47;\n    long[]\
    \ primeNumbersCount48;\n    long[] primeNumbersCount49;\n    long[] primeNumbersCount50;\n\
    \    long[] primeNumbersCount51;\n    long[] primeNumbersCount52;\n    long[]\
    \ primeNumbersCount53;\n    long[]", "{\n    long[] result = [];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors = [];\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163,\
    \ 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\
    \ 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349,\
    \ 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443,\
    \ 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\
    \ 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647,\
    \ 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757,\
    \ 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\
    \ 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983,\
    \ 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] result = [];\n    long i = 2;\n    while (n\
    \ > 1) \n    {\n        if (n % i == 0) \n        {\n            result ~= i;\n\
    \            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result = [];\n    foreach(i;\
    \ 2..n)\n    {\n        while(n % i == 0)\n        {\n            result ~= i;\n\
    \            n /= i;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113,\
    \ 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\
    \ 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,\
    \ 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\
    \ 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491,\
    \ 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601,\
    \ 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\
    \ 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821,\
    \ 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929,\
    \ 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\
    \ 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109,\
    \ 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors\
    \ = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,\
    \ 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\
    \ 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,\
    \ 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401,\
    \ 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\
    \ 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\
    \ 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,\
    \ 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,\
    \ 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937,\
    \ 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033,\
    \ 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117,\
    \ 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = new\
    \ long[];\n    long[] primes = primesTill(n);\n    foreach(prime; primes)\n  \
    \  {\n        while(n % prime == 0)\n        {\n            n /= prime;\n    \
    \        factors ~= prime;\n        }\n    }\n    return factors;\n}", "{\n  \
    \  long[] factors = [];\n    long i = 2;\n    while (n > 1) \n    {\n        if\
    \ (n % i == 0) \n        {\n            factors ~= i;\n            n /= i;\n \
    \       }\n        else\n            i++;\n    }\n    return factors;\n}", "{\n\
    \    long[] factors = [];\n    foreach(i; 2..n)\n    {\n        if(n % i == 0)\n\
    \        {\n            factors ~= i;\n            n /= i;\n            i--;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors;\n    long[]\
    \ primeFactors;\n    long[] primeFactorsCount;\n    long[] primeFactorsCount2;\n\
    \    long[] primeFactors2;\n    long[] primeFactors3;\n    long[] primeFactorsCount3;\n\
    \    long[] primeFactorsCount4;\n    long[] primeFactors4;\n    long[] primeFactors5;\n\
    \    long[] primeFactorsCount5;\n    long[] primeFactorsCount6;\n    long[] primeFactors6;\n\
    \    long[] primeFactors7;\n    long[] primeFactorsCount7;\n    long[] primeFactorsCount8;\n\
    \    long[] primeFactors8;\n    long[] primeFactors9;\n    long[] primeFactorsCount9;\n\
    \    long[] primeFactorsCount10;\n    long[] primeFactors10;\n    long[] primeFactors11;\n\
    \    long[] primeFactorsCount11;\n    long[] primeFactorsCount12;\n    long[]\
    \ primeFactors12;\n    long[] primeFactors13;\n    long[] primeFactorsCount13;\n\
    \    long[] primeFactorsCount14;\n    long[] primeFactors14;\n    long[] primeFactors15;\n\
    \    long[] primeFactorsCount15;\n    long[] primeFactorsCount16;\n    long[]\
    \ primeFactors16;\n    long[] primeFactors17;\n    long[] primeFactorsCount17;\n\
    \    long[] primeFactorsCount18;\n    long[] primeFactors18;\n    long[] primeFactors19;\n\
    \    long[] primeFactorsCount19;\n    long[] primeFactorsCount20;\n    long[]\
    \ primeFactors20;\n    long[] primeFactors21;\n    long[] primeFactorsCount21;\n\
    \    long[] primeFactorsCount22;\n    long[] primeFactors22;\n    long[] primeFactors23;\n\
    \    long[] primeFactorsCount23;\n    long[] primeFactorsCount24;\n    long[]\
    \ primeFactors24;\n    long[] primeFactors25;\n    long[] primeFactorsCount25;\n\
    \    long[] primeFactorsCount26;\n    long[] primeFactors26;\n    long[] primeFactors27;\n\
    \    long", "{\n    long[] factors = [];\n    long i = 2;\n    while (n > 1) \n\
    \    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n     \
    \       n /= i;\n        } \n        else \n        {\n            i++;\n    \
    \    }\n    }\n    return factors;\n}", "{\n    long[] factors;\n    foreach(i;\
    \ 2..n)\n    {\n        if(n % i == 0)\n        {\n            factors ~= i;\n\
    \            n /= i;\n            i = 1;\n        }\n    }\n    return factors;\n\
    }", "{\n    long[] factors = [];\n    long d = 2;\n    while (n > 1) \n    {\n\
    \        while (n % d == 0) \n        {\n            factors ~= d;\n         \
    \   n /= d;\n        }\n        d++;\n    }\n    return factors;\n}", "{\n   \
    \ long[] result = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ res = [];\n    long i = 2;\n    while (n > 1) \n    {\n        if (n % i ==\
    \ 0) \n        {\n            res ~= i;\n            n /= i;\n        } \n   \
    \     else \n        {\n            i++;\n        }\n    }\n    return res;\n}",
  "{\n    long[] res;\n    long i = 2;\n    while (n > 1) \n    {\n        if (n %\
    \ i == 0) \n        {\n            res ~= i;\n            n /= i;\n        } \n\
    \        else \n        {\n            i++;\n        }\n    }\n    return res;\n\
    }", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n\
    \        if (n % i == 0) \n        {\n            factors ~= i;\n            n\
    \ /= i;\n        } \n        else \n        {\n            i++;\n        }\n \
    \   }\n    return factors;\n}", "{\n    long[] factors = new long[];\n    long\
    \ i = 2;\n    while (n != 1) \n    {\n        if (n % i == 0) \n        {\n  \
    \          factors ~= i;\n            n /= i;\n        }\n        else\n     \
    \       i++;\n    }\n    return factors;\n}", "{\n    long[] result = [];\n  \
    \  long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n\
    \            result ~= i;\n            n /= i;\n        }\n        else\n    \
    \        i++;\n    }\n    return result;\n}", "{\n    long[] factors = [];\n \
    \   long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0) \n    \
    \    {\n            factors ~= d;\n            n /= d;\n        }\n        d +=\
    \ 1;\n    }\n    return factors;\n}", "{\n    long[] result = [];\n    long i\
    \ = 2;\n    while (i <= n) \n    {\n        if (n % i == 0) \n        {\n    \
    \        result ~= i;\n            n /= i;\n        }\n        else \n       \
    \ {\n            i++;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n %\
    \ i == 0) \n        {\n            factors ~= i;\n            n /= i;\n      \
    \  }\n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ factors;\n}", "{\n    long[] factors = [];\n    long divisor = 2;\n    while\
    \ (n > 1) \n    {\n        if (n % divisor == 0) \n        {\n            factors\
    \ ~= divisor;\n            n /= divisor;\n        } \n        else \n        {\n\
    \            divisor++;\n        }\n    }\n    return factors;\n}", "{\n    long[]\
    \ factors = new long[];\n    if (n < 2) return factors;\n    long d = 2;\n   \
    \ while (n > 1) \n    {\n        if (n % d == 0) \n        {\n            factors\
    \ ~= d;\n            n /= d;\n        } \n        else \n        {\n         \
    \   d++;\n        }\n    }\n    return factors;\n}", "{\n    long[] result = [];\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] result = [];\n   \
    \ long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0) \n      \
    \  {\n            result ~= d;\n            n /= d;\n        }\n        d += 1;\n\
    \    }\n    return result;\n}", "{\n    long[] factors = [];\n    long i = 2;\n\
    \    while (i <= n) \n    {\n        if (n % i == 0) \n        {\n           \
    \ factors ~= i;\n            n /= i;\n        } \n        else \n        {\n \
    \           i++;\n        }\n    }\n    return factors;\n}", "{\n    long[] factors\
    \ = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n % i == 0)\
    \ \n        {\n            factors ~= i;\n            n /= i;\n        } \n  \
    \      else \n        {\n            i++;\n        }\n    }\n    return factors;\n\
    }", "{\n    long[] result = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009,\
    \ 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091,\
    \ 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187",
  "{\n    long[] factors = [];\n    long d = 2;\n    while (n > 1) \n    {\n     \
    \   while (n % d == 0) \n        {\n            factors ~= d;\n            n /=\
    \ d;\n        }\n        d += 1;\n    }\n    return factors;\n}", "{\n    long[]\
    \ factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n %\
    \ i == 0) \n        {\n            factors ~= i;\n            n /= i;\n      \
    \  } \n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ factors;\n}", "{\n    long[] factors = [];\n    long d = 2;\n    while (n >\
    \ 1) \n    {\n        while (n % d == 0) \n        {\n            factors ~= d;\n\
    \            n /= d;\n        }\n        d += 1;\n    }\n    return factors;\n\
    }", "{\n    long[] factors = new long[];\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\
    \ 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881,\
    \ 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,\
    \ 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087,\
    \ 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181",
  "{\n    long[] res = [];\n    long i = 2;\n    while (i * i <= n) \n    {\n    \
    \    while (n % i == 0) \n        {\n            res ~= i;\n            n /= i;\n\
    \        }\n        i++;\n    }\n    if (n > 1) \n    {\n        res ~= n;\n \
    \   }\n    return res;\n}", "{\n    long[] factors = [];\n    long[] primes =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors = [];\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163,\
    \ 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\
    \ 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349,\
    \ 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443,\
    \ 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\
    \ 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647,\
    \ 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757,\
    \ 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\
    \ 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983,\
    \ 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] result = new long[0];\n    long[] primes =\
    \ new long[0];\n    long[] powers = new long[0];\n    long[] factors = new long[0];\n\
    \    long[] exponents = new long[0];\n    long[] prime_factors = new long[0];\n\
    \    long[] prime_powers = new long[0];\n    long[] prime_factors_powers = new\
    \ long[0];\n    long[] prime_factors_powers_factors = new long[0];\n    long[]\
    \ prime_factors_powers_factors_exponents = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents_factors\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents_factors_powers\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents_factors_powers_factors\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents_factors_powers_factors_exponents\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents_factors_powers_factors_exponents_factors\
    \ = new long[0];\n    long[] prime_factors_powers_factors_exponents_factors_powers_factors_exponents_factors_powers_factors_exponents_factors_powers\
    \ = new long[0", "{\n    long[] result;\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\
    \ 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881,\
    \ 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,\
    \ 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087,\
    \ 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181,\
    \ 1187,", "{\n    long[] res = new long[0];\n    long i = 2;\n    while (n > 1)\
    \ \n    {\n        while (n % i == 0) \n        {\n            res ~= i;\n   \
    \         n /= i;\n        }\n        i++;\n    }\n    return res;\n}", "{\n \
    \   long[] result = [];\n    long i = 2;\n    while (n > 1) \n    {\n        if\
    \ (n % i == 0) \n        {\n            result ~= i;\n            n /= i;\n  \
    \      } \n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] factors;\n    long[] result;\n    long i;\n    long\
    \ j;\n    long k;\n    long l;\n    long m;\n    long p;\n    long q;\n    long\
    \ r;\n    long s;\n    long t;\n    long u;\n    long v;\n    long w;\n    long\
    \ x;\n    long y;\n    long z;\n    long aa;\n    long bb;\n    long cc;\n   \
    \ long dd;\n    long ee;\n    long ff;\n    long gg;\n    long hh;\n    long ii;\n\
    \    long jj;\n    long kk;\n    long ll;\n    long mm;\n    long nn;\n    long\
    \ oo;\n    long pp;\n    long qq;\n    long rr;\n    long ss;\n    long tt;\n\
    \    long uu;\n    long vv;\n    long ww;\n    long xx;\n    long yy;\n    long\
    \ zz;\n    long aaa;\n    long bbb;\n    long ccc;\n    long ddd;\n    long eee;\n\
    \    long fff;\n    long ggg;\n    long hhh;\n    long iii;\n    long jjj;\n \
    \   long kkk;\n    long lll;\n    long mmm;\n    long nnn;\n    long ooo;\n  \
    \  long ppp;\n    long qqq;\n    long rrr;\n    long sss;\n    long ttt;\n   \
    \ long uuu;\n    long vvv;\n    long www;\n    long xxx;\n    long yyy;\n    long\
    \ zzz;\n    long aaaa;\n    long bbbb;\n    long cccc;\n    long dddd;\n    long\
    \ eeee;\n    long ffff;\n    long gggg;\n    long hhhh;\n    long iiii;\n    long\
    \ jjjj;\n    long kkkk;\n    long llll;\n    long mmmm;\n    long nnnn;\n    long\
    \ oooo;\n    long pppp;\n    long qqqq;\n    long rrr", "{\n    long[] factors\
    \ = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,\
    \ 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\
    \ 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,\
    \ 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401,\
    \ 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\
    \ 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\
    \ 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,\
    \ 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,\
    \ 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937,\
    \ 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033,\
    \ 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117,\
    \ 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors;\n \
    \   long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187,", "{\n    long[] factors = [];\n \
    \   long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] res = [];\n    if\
    \ (n == 1)\n        return res;\n    long i = 2;\n    while (i <= n)\n    {\n\
    \        if (n % i == 0)\n        {\n            res ~= i;\n            n /= i;\n\
    \        }\n        else\n            i++;\n    }\n    return res;\n}", "{\n \
    \   long[] factors = new long[];\n    long[] primes = primes(n);\n    foreach(prime;\
    \ primes)\n    {\n        while(n % prime == 0)\n        {\n            factors\
    \ ~= prime;\n            n /= prime;\n        }\n    }\n    return factors;\n}",
  "{\n    long[] factors;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n\
    \    long i;\n    long j;\n    long k;\n    long l;\n    long m;\n    long n2;\n\
    \    long n3;\n    long n4;\n    long n5;\n    long n6;\n    long n7;\n    long\
    \ n8;\n    long n9;\n    long n10;\n    long n11;\n    long n12;\n    long n13;\n\
    \    long n14;\n    long n15;\n    long n16;\n    long n17;\n    long n18;\n \
    \   long n19;\n    long n20;\n    long n21;\n    long n22;\n    long n23;\n  \
    \  long n24;\n    long n25;\n    long n26;\n    long n27;\n    long n28;\n   \
    \ long n29;\n    long n30;\n    long n31;\n    long n32;\n    long n33;\n    long\
    \ n34;\n    long n35;\n    long n36;\n    long n37;\n    long n38;\n    long n39;\n\
    \    long n40;\n    long n41;\n    long n42;\n    long n43;\n    long n44;\n \
    \   long n45;\n    long n46;\n    long n47;\n    long n48;\n    long n49;\n  \
    \  long n50;\n    long n51;\n    long n52;\n    long n53;\n    long n54;\n   \
    \ long n55;\n    long n56;\n    long n57;\n    long n58;\n    long n59;\n    long\
    \ n60;\n    long n61;\n    long n62;\n    long n63;\n    long n64;\n    long n65;\n\
    \    long n66;\n    long n67;\n    long n68;\n    long n69;\n    long n70;\n \
    \   long n71;\n    long n72;\n    long n73;\n    long n74;\n    long n75;\n  \
    \  long n76;\n    long n77;\n    long n78;", "{\n    long[] result;\n    long[]\
    \ primeFactors;\n    long[] primeFactorsCount;\n    long i;\n    long j;\n   \
    \ long k;\n    long prime;\n    long count;\n    long nn;\n    long nnn;\n   \
    \ long nnnn;\n    long nnnnn;\n    long nnnnnn;\n    long nnnnnnn;\n    long nnnnnnnn;\n\
    \    long nnnnnnnnn;\n    long nnnnnnnnnn;\n    long nnnnnnnnnnn;\n    long nnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnn;\n    long\
    \ nnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnn", "{\n    long[] factors;\n    long[] primes = primesTill(n);\n\
    \    foreach(prime; primes)\n    {\n        if(n % prime == 0)\n        {\n  \
    \          factors ~= prime;\n            n /= prime;\n        }\n    }\n    return\
    \ factors;\n}", "{\n    long[] result = new long[];\n    long i = 2;\n    while\
    \ (i <= n) \n    {\n        if (n % i == 0) \n        {\n            result ~=\
    \ i;\n            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] factors = [];\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181, 1187", "{\n    long[] res;\n    foreach(i; 2..n)\n \
    \   {\n        if(n % i == 0)\n        {\n            res ~= i;\n            n\
    \ /= i;\n            i = 1;\n        }\n    }\n    return res;\n}", "{\n    long[]\
    \ factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long i = 2;\n    while (n > 1) \n    {\n        if (n % i\
    \ == 0) \n        {\n            factors ~= i;\n            n /= i;\n        }\
    \ \n        else \n        {\n            i++;\n        }\n    }\n    return factors;\n\
    }", "{\n    long[] factors;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n\
    \    long[] primeFactorsCount2;\n    long[] primeFactorsCount3;\n    long[] primeFactorsCount4;\n\
    \    long[] primeFactorsCount5;\n    long[] primeFactorsCount6;\n    long[] primeFactorsCount7;\n\
    \    long[] primeFactorsCount8;\n    long[] primeFactorsCount9;\n    long[] primeFactorsCount10;\n\
    \    long[] primeFactorsCount11;\n    long[] primeFactorsCount12;\n    long[]\
    \ primeFactorsCount13;\n    long[] primeFactorsCount14;\n    long[] primeFactorsCount15;\n\
    \    long[] primeFactorsCount16;\n    long[] primeFactorsCount17;\n    long[]\
    \ primeFactorsCount18;\n    long[] primeFactorsCount19;\n    long[] primeFactorsCount20;\n\
    \    long[] primeFactorsCount21;\n    long[] primeFactorsCount22;\n    long[]\
    \ primeFactorsCount23;\n    long[] primeFactorsCount24;\n    long[] primeFactorsCount25;\n\
    \    long[] primeFactorsCount26;\n    long[] primeFactorsCount27;\n    long[]\
    \ primeFactorsCount28;\n    long[] primeFactorsCount29;\n    long[] primeFactorsCount30;\n\
    \    long[] primeFactorsCount31;\n    long[] primeFactorsCount32;\n    long[]\
    \ primeFactorsCount33;\n    long[] primeFactorsCount34;\n    long[] primeFactorsCount35;\n\
    \    long[] primeFactorsCount36;\n    long[] primeFactorsCount37;\n    long[]\
    \ primeFactorsCount38;\n    long[] primeFactorsCount39;\n    long[] primeFactorsCount40;\n\
    \    long[] primeFactorsCount41;\n    long[] primeFactorsCount42;\n    long[]\
    \ primeFactorsCount43;\n    long[] primeFactorsCount44;\n    long[] primeFactorsCount45;\n\
    \    long[] primeFactorsCount46;\n    long[] primeFactorsCount47;\n    long[]\
    \ primeFactorsCount48;\n    long[] primeFactorsCount49;\n    long[] primeFactors",
  "{\n    long[] factors = new long[];\n    long i = 2;\n    while (n > 1) \n    {\n\
    \        if (n % i == 0) \n        {\n            factors ~= i;\n            n\
    \ /= i;\n        } \n        else \n        {\n            i++;\n        }\n \
    \   }\n    return factors;\n}", "{\n    long[] factors = [];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors = [];\n    foreach(i; 2..n)\n    {\n\
    \        while(n % i == 0)\n        {\n            factors ~= i;\n           \
    \ n /= i;\n        }\n    }\n    return factors;\n}", "{\n    long[] result =\
    \ [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131,\
    \ 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,\
    \ 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311,\
    \ 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409,\
    \ 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\
    \ 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613,\
    \ 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719,\
    \ 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827,\
    \ 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,\
    \ 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033,\
    \ 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117,\
    \ 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = [];\n\
    \    long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n      \
    \  {\n            factors ~= i;\n            n /= i;\n        } \n        else\
    \ \n        {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n\
    \    long[] factors;\n    foreach(i; 2..n)\n    {\n        if(n % i == 0)\n  \
    \      {\n            factors ~= i;\n            n /= i;\n            i = 1;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors = [];\n   \
    \ long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n\
    \            factors ~= i;\n            n /= i;\n        } \n        else \n \
    \       {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n \
    \   long[] result = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019,\
    \ 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\
    \ 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n %\
    \ i == 0) \n        {\n            factors ~= i;\n            n /= i;\n      \
    \  }\n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ factors;\n}", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <=\
    \ n) \n    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n\
    \            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors = new long[];\n\
    \    long[] primes = getPrimes(n);\n    foreach(prime; primes)\n    {\n      \
    \  while(n % prime == 0)\n        {\n            n /= prime;\n            factors\
    \ ~= prime;\n        }\n    }\n    return factors;\n}", "{\n    long[] result;\n\
    \    long[] primes;\n    long i;\n    long j;\n    long k;\n    long l;\n    long\
    \ m;\n    long nn;\n    long p;\n    long q;\n    long r;\n    long s;\n    long\
    \ t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long y;\n    long\
    \ z;\n    long aa;\n    long bb;\n    long cc;\n    long dd;\n    long ee;\n \
    \   long ff;\n    long gg;\n    long hh;\n    long ii;\n    long jj;\n    long\
    \ kk;\n    long ll;\n    long mm;\n    long nn;\n    long oo;\n    long pp;\n\
    \    long qq;\n    long rr;\n    long ss;\n    long tt;\n    long uu;\n    long\
    \ vv;\n    long ww;\n    long xx;\n    long yy;\n    long zz;\n    long aaa;\n\
    \    long bbb;\n    long ccc;\n    long ddd;\n    long eee;\n    long fff;\n \
    \   long ggg;\n    long hhh;\n    long iii;\n    long jjj;\n    long kkk;\n  \
    \  long lll;\n    long mmm;\n    long nnn;\n    long ooo;\n    long ppp;\n   \
    \ long qqq;\n    long rrr;\n    long sss;\n    long ttt;\n    long uuu;\n    long\
    \ vvv;\n    long www;\n    long xxx;\n    long yyy;\n    long zzz;\n    long aaaa;\n\
    \    long bbbb;\n    long cccc;\n    long dddd;\n    long eeee;\n    long ffff;\n\
    \    long gggg;\n    long hhhh;\n    long iiii;\n    long jjjj;\n    long kkkk;\n\
    \    long llll;\n    long mmmm;\n    long nnnn;\n    long oooo;\n    long pppp;\n\
    \    long qqq", "{\n    long[] result = [];\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187", "{\n    long[] result = [];\n    long d = 2;\n    while (n > 1)\
    \ \n    {\n        while (n % d == 0) \n        {\n            result ~= d;\n\
    \            n /= d;\n        }\n        d += 1;\n    }\n    return result;\n}",
  "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019,\
    \ 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\
    \ 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    foreach(i; 2..n)\n    {\n        while(n % i == 0)\n    \
    \    {\n            factors ~= i;\n            n /= i;\n        }\n    }\n   \
    \ return factors;\n}", "{\n    long[] factors;\n    long[] primeFactors;\n   \
    \ long[] primeFactorsCount;\n    long[] primeFactorsCount2;\n    long[] primeFactorsCount3;\n\
    \    long[] primeFactorsCount4;\n    long[] primeFactorsCount5;\n    long[] primeFactorsCount6;\n\
    \    long[] primeFactorsCount7;\n    long[] primeFactorsCount8;\n    long[] primeFactorsCount9;\n\
    \    long[] primeFactorsCount10;\n    long[] primeFactorsCount11;\n    long[]\
    \ primeFactorsCount12;\n    long[] primeFactorsCount13;\n    long[] primeFactorsCount14;\n\
    \    long[] primeFactorsCount15;\n    long[] primeFactorsCount16;\n    long[]\
    \ primeFactorsCount17;\n    long[] primeFactorsCount18;\n    long[] primeFactorsCount19;\n\
    \    long[] primeFactorsCount20;\n    long[] primeFactorsCount21;\n    long[]\
    \ primeFactorsCount22;\n    long[] primeFactorsCount23;\n    long[] primeFactorsCount24;\n\
    \    long[] primeFactorsCount25;\n    long[] primeFactorsCount26;\n    long[]\
    \ primeFactorsCount27;\n    long[] primeFactorsCount28;\n    long[] primeFactorsCount29;\n\
    \    long[] primeFactorsCount30;\n    long[] primeFactorsCount31;\n    long[]\
    \ primeFactorsCount32;\n    long[] primeFactorsCount33;\n    long[] primeFactorsCount34;\n\
    \    long[] primeFactorsCount35;\n    long[] primeFactorsCount36;\n    long[]\
    \ primeFactorsCount37;\n    long[] primeFactorsCount38;\n    long[] primeFactorsCount39;\n\
    \    long[] primeFactorsCount40;\n    long[] primeFactorsCount41;\n    long[]\
    \ primeFactorsCount42;\n    long[] primeFactorsCount43;\n    long[] primeFactorsCount44;\n\
    \    long[] primeFactorsCount45;\n    long[] primeFactorsCount46;\n    long[]\
    \ primeFactorsCount47;\n    long[] primeFactorsCount48;\n    long[] primeFactorsCount49;\n\
    \    long[] primeFactors", "{\n    long[] factors = new long[];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181", "{\n    long[] result = [];\n    foreach(i; 2..n+1)\n    {\n  \
    \      while(n % i == 0)\n        {\n            n /= i;\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}", "{\n    long[] result = [];\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = [];\n  \
    \  long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n\
    \            factors ~= i;\n            n /= i;\n        } \n        else \n \
    \       {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n \
    \   long[] factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019,\
    \ 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\
    \ 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = new long[];\n    long i = 2;\n    while (i <= n) \n    {\n       \
    \ if (n % i == 0) \n        {\n            factors ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return factors;\n}", "{\n    long[] factors;\n    long[] primes = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187,", "{\n    long[] factors = [];\n    foreach(i; 2..sqrt(n))\n   \
    \ {\n        while(n % i == 0)\n        {\n            factors ~= i;\n       \
    \     n /= i;\n        }\n    }\n    if(n > 1)\n        factors ~= n;\n    return\
    \ factors;\n}", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <=\
    \ n) \n    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n\
    \            n /= i;\n        } \n        else \n        {\n            i++;\n\
    \        }\n    }\n    return factors;\n}", "{\n    long[] factors = [];\n   \
    \ long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors;\n    long[]\
    \ primeFactors;\n    long[] primeFactorsCount;\n    long i;\n    long j;\n   \
    \ long k;\n    long l;\n    long m;\n    long n2;\n    long n3;\n    long n4;\n\
    \    long n5;\n    long n6;\n    long n7;\n    long n8;\n    long n9;\n    long\
    \ n10;\n    long n11;\n    long n12;\n    long n13;\n    long n14;\n    long n15;\n\
    \    long n16;\n    long n17;\n    long n18;\n    long n19;\n    long n20;\n \
    \   long n21;\n    long n22;\n    long n23;\n    long n24;\n    long n25;\n  \
    \  long n26;\n    long n27;\n    long n28;\n    long n29;\n    long n30;\n   \
    \ long n31;\n    long n32;\n    long n33;\n    long n34;\n    long n35;\n    long\
    \ n36;\n    long n37;\n    long n38;\n    long n39;\n    long n40;\n    long n41;\n\
    \    long n42;\n    long n43;\n    long n44;\n    long n45;\n    long n46;\n \
    \   long n47;\n    long n48;\n    long n49;\n    long n50;\n    long n51;\n  \
    \  long n52;\n    long n53;\n    long n54;\n    long n55;\n    long n56;\n   \
    \ long n57;\n    long n58;\n    long n59;\n    long n60;\n    long n61;\n    long\
    \ n62;\n    long n63;\n    long n64;\n    long n65;\n    long n66;\n    long n67;\n\
    \    long n68;\n    long n69;\n    long n70;\n    long n71;\n    long n72;\n \
    \   long n73;\n    long n74;\n    long n75;\n    long n76;\n    long n77;\n  \
    \  long n78;", "{\n    long[] res = new long[];\n    long[] primes = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n\
    \    {\n        if (n % i == 0) \n        {\n            factors ~= i;\n     \
    \       n /= i;\n        } \n        else \n        {\n            i++;\n    \
    \    }\n    }\n    return factors;\n}", "{\n    long[] factors;\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187,", "{\n    long[] result;\n    foreach(i; 2 .. n)\n    {\n\
    \        if(n % i == 0)\n        {\n            result ~= i;\n            n /=\
    \ i;\n            i--;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n    long i;\n\
    \    long j;\n    long k;\n    long l;\n    long m;\n    long n;\n    long o;\n\
    \    long p;\n    long q;\n    long r;\n    long s;\n    long t;\n    long u;\n\
    \    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n    long aa;\n\
    \    long ab;\n    long ac;\n    long ad;\n    long ae;\n    long af;\n    long\
    \ ag;\n    long ah;\n    long ai;\n    long aj;\n    long ak;\n    long al;\n\
    \    long am;\n    long an;\n    long ao;\n    long ap;\n    long aq;\n    long\
    \ ar;\n    long as;\n    long at;\n    long au;\n    long av;\n    long aw;\n\
    \    long ax;\n    long ay;\n    long az;\n    long ba;\n    long bb;\n    long\
    \ bc;\n    long bd;\n    long be;\n    long bf;\n    long bg;\n    long bh;\n\
    \    long bi;\n    long bj;\n    long bk;\n    long bl;\n    long bm;\n    long\
    \ bn;\n    long bo;\n    long bp;\n    long bq;\n    long br;\n    long bs;\n\
    \    long bt;\n    long bu;\n    long bv;\n    long bw;\n    long bx;\n    long\
    \ by;\n    long bz;\n    long ca;\n    long cb;\n    long cc;\n    long cd;\n\
    \    long ce;\n    long cf;\n    long cg;\n    long ch;\n    long ci;\n    long\
    \ cj;\n    long ck;\n    long cl;\n    long cm;\n    long cn;\n    long co;\n\
    \    long cp;\n    long cq;\n    long cr;\n    long cs;\n    long ct;\n    long\
    \ cu;\n", "{\n    long[] result;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009,\
    \ 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091,\
    \ 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187,",
  "{\n    long[] factors = [];\n    if (n <= 1) return factors;\n    foreach (i; 2\
    \ .. sqrt(n) + 1) \n    {\n        while (n % i == 0) \n        {\n          \
    \  factors ~= i;\n            n /= i;\n        }\n    }\n    if (n > 1) factors\
    \ ~= n;\n    return factors;\n}", "{\n    long[] factors = new long[];\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181", "{\n    long[] factors = [];\n    long i = 2;\n   \
    \ while (i <= n) \n    {\n        if (n % i == 0) \n        {\n            factors\
    \ ~= i;\n            n /= i;\n        } \n        else \n        {\n         \
    \   i++;\n        }\n    }\n    return factors;\n}", "{\n    long[] factors;\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187,", "{\n    long[] factors = [];\n \
    \   long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] result = [];\n   \
    \ if (n == 1) \n    {\n        return result;\n    }\n    long d = 2;\n    while\
    \ (n > 1) \n    {\n        while (n % d == 0) \n        {\n            result\
    \ ~= d;\n            n /= d;\n        }\n        d++;\n    }\n    return result;\n\
    }", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009,\
    \ 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091,\
    \ 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187",
  "{\n    long[] factors;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n\
    \    long i;\n    long j;\n    long k;\n    long prime;\n    long count;\n   \
    \ long[] result;\n    long[] temp;\n    long[] temp2;\n    long[] temp3;\n   \
    \ long[] temp4;\n    long[] temp5;\n    long[] temp6;\n    long[] temp7;\n   \
    \ long[] temp8;\n    long[] temp9;\n    long[] temp10;\n    long[] temp11;\n \
    \   long[] temp12;\n    long[] temp13;\n    long[] temp14;\n    long[] temp15;\n\
    \    long[] temp16;\n    long[] temp17;\n    long[] temp18;\n    long[] temp19;\n\
    \    long[] temp20;\n    long[] temp21;\n    long[] temp22;\n    long[] temp23;\n\
    \    long[] temp24;\n    long[] temp25;\n    long[] temp26;\n    long[] temp27;\n\
    \    long[] temp28;\n    long[] temp29;\n    long[] temp30;\n    long[] temp31;\n\
    \    long[] temp32;\n    long[] temp33;\n    long[] temp34;\n    long[] temp35;\n\
    \    long[] temp36;\n    long[] temp37;\n    long[] temp38;\n    long[] temp39;\n\
    \    long[] temp40;\n    long[] temp41;\n    long[] temp42;\n    long[] temp43;\n\
    \    long[] temp44;\n    long[] temp45;\n    long[] temp46;\n    long[] temp47;\n\
    \    long[] temp48;\n    long[] temp49;\n    long[] temp50;\n    long[] temp51;\n\
    \    long[] temp52;\n    long[] temp53;\n    long[] temp54;\n    long[] temp55;\n\
    \    long[] temp56;\n    long[] temp57;\n    long[] temp58;\n    long[] temp59;\n\
    \    long[] temp60;\n    long[] temp61;\n    long[] temp62;\n    long[] temp63;\n\
    \    long[] temp64;\n    long[] temp65;\n   ", "{\n    long[] factors;\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181, 1187,", "{\n    long[] factors;\n    long[] primes =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187,", "{\n    long[] factors = [];\n    long i = 2;\n    while\
    \ (n > 1)\n    {\n        if (n % i == 0)\n        {\n            factors ~= i;\n\
    \            n /= i;\n        }\n        else\n        {\n            i++;\n \
    \       }\n    }\n    return factors;\n}", "{\n    long[] factors;\n    long[]\
    \ primeFactors;\n    long[] primeFactorsCount;\n    long[] primeFactorsCount2;\n\
    \    long[] primeFactorsCount3;\n    long[] primeFactorsCount4;\n    long[] primeFactorsCount5;\n\
    \    long[] primeFactorsCount6;\n    long[] primeFactorsCount7;\n    long[] primeFactorsCount8;\n\
    \    long[] primeFactorsCount9;\n    long[] primeFactorsCount10;\n    long[] primeFactorsCount11;\n\
    \    long[] primeFactorsCount12;\n    long[] primeFactorsCount13;\n    long[]\
    \ primeFactorsCount14;\n    long[] primeFactorsCount15;\n    long[] primeFactorsCount16;\n\
    \    long[] primeFactorsCount17;\n    long[] primeFactorsCount18;\n    long[]\
    \ primeFactorsCount19;\n    long[] primeFactorsCount20;\n    long[] primeFactorsCount21;\n\
    \    long[] primeFactorsCount22;\n    long[] primeFactorsCount23;\n    long[]\
    \ primeFactorsCount24;\n    long[] primeFactorsCount25;\n    long[] primeFactorsCount26;\n\
    \    long[] primeFactorsCount27;\n    long[] primeFactorsCount28;\n    long[]\
    \ primeFactorsCount29;\n    long[] primeFactorsCount30;\n    long[] primeFactorsCount31;\n\
    \    long[] primeFactorsCount32;\n    long[] primeFactorsCount33;\n    long[]\
    \ primeFactorsCount34;\n    long[] primeFactorsCount35;\n    long[] primeFactorsCount36;\n\
    \    long[] primeFactorsCount37;\n    long[] primeFactorsCount38;\n    long[]\
    \ primeFactorsCount39;\n    long[] primeFactorsCount40;\n    long[] primeFactorsCount41;\n\
    \    long[] primeFactorsCount42;\n    long[] primeFactorsCount43;\n    long[]\
    \ primeFactorsCount44;\n    long[] primeFactorsCount45;\n    long[] primeFactorsCount46;\n\
    \    long[] primeFactorsCount47;\n    long[] primeFactorsCount48;\n    long[]\
    \ primeFactorsCount49;\n    long[] primeFactors", "{\n    long[] factors = [];\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = [];\n  \
    \  long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0) \n     \
    \   {\n            factors ~= d;\n            n /= d;\n        }\n        d++;\n\
    \    }\n    return factors;\n}", "{\n    long[] factors = [];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors = [];\n    while (n % 2 == 0) \n \
    \   {\n        factors ~= 2;\n        n /= 2;\n    }\n    long i = 3;\n    while\
    \ (i <= sqrt(n)) \n    {\n        while (n % i == 0) \n        {\n           \
    \ factors ~= i;\n            n /= i;\n        }\n        i += 2;\n    }\n    if\
    \ (n > 2) \n    {\n        factors ~= n;\n    }\n    return factors;\n}", "{\n\
    \    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n     \
    \   if (n % i == 0) \n        {\n            factors ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return factors;\n}", "{\n    long[] result = new long[];\n    long i = 2;\n\
    \    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n            result\
    \ ~= i;\n            n /= i;\n        } \n        else \n        {\n         \
    \   i++;\n        }\n    }\n    return result;\n}", "{\n    long[] result = [];\n\
    \    long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0) \n   \
    \     {\n            result ~= d;\n            n /= d;\n        }\n        d +=\
    \ 1;\n    }\n    return result;\n}", "{\n    long[] res = new long[];\n    long\
    \ i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n   \
    \         res ~= i;\n            n /= i;\n        } \n        else \n        {\n\
    \            i++;\n        }\n    }\n    return res;\n}", "{\n    long[] factors\
    \ = [];\n    long d = 2;\n    while (n > 1) \n    {\n        while (n % d == 0)\
    \ \n        {\n            factors ~= d;\n            n /= d;\n        }\n   \
    \     d += 1;\n    }\n    return factors;\n}", "{\n    long[] factors = [];\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = [];\n  \
    \  long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n        {\n\
    \            factors ~= i;\n            n /= i;\n        } \n        else \n \
    \       {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n \
    \   long[] result = [];\n    long i = 2;\n    while (i <= n) \n    {\n       \
    \ if (n % i == 0) \n        {\n            result ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return result;\n}", "{\n    long[] factors;\n    long[] primeFactors;\n   \
    \ long[] primeFactorsCount;\n    long i;\n    long j;\n    long k;\n    long l;\n\
    \    long m;\n    long nn;\n    long p;\n    long q;\n    long r;\n    long s;\n\
    \    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long y;\n\
    \    long z;\n    long aa;\n    long bb;\n    long cc;\n    long dd;\n    long\
    \ ee;\n    long ff;\n    long gg;\n    long hh;\n    long ii;\n    long jj;\n\
    \    long kk;\n    long ll;\n    long mm;\n    long nnn;\n    long oo;\n    long\
    \ pp;\n    long qq;\n    long rr;\n    long ss;\n    long tt;\n    long uu;\n\
    \    long vv;\n    long ww;\n    long xx;\n    long yy;\n    long zz;\n    long\
    \ aaa;\n    long bbb;\n    long ccc;\n    long ddd;\n    long eee;\n    long fff;\n\
    \    long ggg;\n    long hhh;\n    long iii;\n    long jjj;\n    long kkk;\n \
    \   long lll;\n    long mmm;\n    long nnnn;\n    long ooo;\n    long ppp;\n \
    \   long qqq;\n    long rrr;\n    long sss;\n    long ttt;\n    long uuu;\n  \
    \  long vvv;\n    long www;\n    long xxx;\n    long yyy;\n    long zzz;\n   \
    \ long aaaa;\n    long bbbb;\n    long cccc;\n    long dddd;\n    long eeee;\n\
    \    long ffff;\n    long gggg;\n    long hhhh;\n    long iiii;\n    long jjjj;\n\
    \    long kkkk;\n    long llll;\n    long mmmm;\n    long nnnnn;\n    long oooo;\n",
  "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019,\
    \ 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\
    \ 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[]\
    \ factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n %\
    \ i == 0) \n        {\n            factors ~= i;\n            n /= i;\n      \
    \  } \n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ factors;\n}", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187", "{\n    long[] factors;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n\
    \    long i;\n    long j;\n    long k;\n    long l;\n    long m;\n    long nn;\n\
    \    long nnn;\n    long nnnn;\n    long nnnnn;\n    long nnnnnn;\n    long nnnnnnn;\n\
    \    long nnnnnnnn;\n    long nnnnnnnnn;\n    long nnnnnnnnnn;\n    long nnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnn;\n    long nnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnn;\n \
    \   long nnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnn;\n   \
    \ long nnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnn;\n  \
    \  long nnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n\
    \    long nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn;\n    long nnnnnnnnn", "{\n    long[]\
    \ result = [];\n    long i = 2;\n    while (i <= n) \n    {\n        if (n % i\
    \ == 0) \n        {\n            result ~= i;\n            n /= i;\n        }\
    \ \n        else \n        {\n            i++;\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    long i = 2;\n    while (n > 1) \n    {\n     \
    \   if (n % i == 0) \n        {\n            result ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return result;\n}", "{\n    long[] factors = [];\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163,\
    \ 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\
    \ 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349,\
    \ 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443,\
    \ 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\
    \ 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647,\
    \ 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757,\
    \ 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\
    \ 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983,\
    \ 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] result = [];\n    long d = 2;\n    while (n\
    \ > 1) \n    {\n        while (n % d == 0) \n        {\n            result ~=\
    \ d;\n            n /= d;\n        }\n        d += 1;\n    }\n    return result;\n\
    }", "{\n    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n\
    \        if (n % i == 0) \n        {\n            factors ~= i;\n            n\
    \ /= i;\n        } \n        else \n        {\n            i++;\n        }\n \
    \   }\n    return factors;\n}", "{\n    long[] factors;\n    long i = 2;\n   \
    \ while (i <= n) \n    {\n        if (n % i == 0) \n        {\n            factors\
    \ ~= i;\n            n /= i;\n        }\n        else \n        {\n          \
    \  i++;\n        }\n    }\n    return factors;\n}", "{\n    long[] result;\n \
    \   long i = 2;\n    while (i <= n) \n    {\n        if (n % i == 0) \n      \
    \  {\n            result ~= i;\n            n /= i;\n        }\n        else \n\
    \        {\n            i++;\n        }\n    }\n    return result;\n}", "{\n \
    \   long[] factors;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187,", "{\n    long[]\
    \ result = new long[];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181", "{\n    long[] factors\
    \ = [];\n    long i = 2;\n    while (n > 1) \n    {\n        if (n % i == 0) \n\
    \        {\n            factors ~= i;\n            n /= i;\n        } \n     \
    \   else \n        {\n            i++;\n        }\n    }\n    return factors;\n\
    }", "{\n    long[] result;\n    long[] primeFactors;\n    long[] primeFactorsCount;\n\
    \    long i;\n    long j;\n    long count;\n    long temp;\n    long temp2;\n\
    \    long temp3;\n    long temp4;\n    long temp5;\n    long temp6;\n    long\
    \ temp7;\n    long temp8;\n    long temp9;\n    long temp10;\n    long temp11;\n\
    \    long temp12;\n    long temp13;\n    long temp14;\n    long temp15;\n    long\
    \ temp16;\n    long temp17;\n    long temp18;\n    long temp19;\n    long temp20;\n\
    \    long temp21;\n    long temp22;\n    long temp23;\n    long temp24;\n    long\
    \ temp25;\n    long temp26;\n    long temp27;\n    long temp28;\n    long temp29;\n\
    \    long temp30;\n    long temp31;\n    long temp32;\n    long temp33;\n    long\
    \ temp34;\n    long temp35;\n    long temp36;\n    long temp37;\n    long temp38;\n\
    \    long temp39;\n    long temp40;\n    long temp41;\n    long temp42;\n    long\
    \ temp43;\n    long temp44;\n    long temp45;\n    long temp46;\n    long temp47;\n\
    \    long temp48;\n    long temp49;\n    long temp50;\n    long temp51;\n    long\
    \ temp52;\n    long temp53;\n    long temp54;\n    long temp55;\n    long temp56;\n\
    \    long temp57;\n    long temp58;\n    long temp59;\n    long temp60;\n    long\
    \ temp61;\n    long temp62;\n    long temp63;\n    long temp64;\n    long temp65;\n\
    \    long temp66;\n    long temp67;\n    long temp68;\n    long temp69;\n    long\
    \ temp70;\n    long temp71;\n    long temp72;\n    long temp73;\n    long temp74;\n\
    \    long temp75;\n    long temp76;\n    long temp77;\n    long temp78;\n    long\
    \ temp79", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\
    \ 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881,\
    \ 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,\
    \ 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087,\
    \ 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181,\
    \ 1187", "{\n    long[] result = [];\n    long i = 2;\n    while (n > 1) \n  \
    \  {\n        while (n % i == 0) \n        {\n            result ~= i;\n     \
    \       n /= i;\n        }\n        i++;\n    }\n    return result;\n}", "{\n\
    \    long[] factors = [];\n    long i = 2;\n    while (i <= n) \n    {\n     \
    \   if (n % i == 0) \n        {\n            factors ~= i;\n            n /= i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return factors;\n}", "{\n    long[] factors;\n    foreach(i; 2..n)\n    {\n\
    \        if(n % i == 0)\n        {\n            factors ~= i;\n            n /=\
    \ i;\n            i = 1;\n        }\n    }\n    return factors;\n}", "{\n    long[]\
    \ result;\n    long[] primes;\n    long[] factors;\n    long[] temp;\n    long\
    \ i;\n    long j;\n    long k;\n    long l;\n    long m;\n    long n;\n    long\
    \ o;\n    long p;\n    long q;\n    long r;\n    long s;\n    long t;\n    long\
    \ u;\n    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n    long\
    \ aa;\n    long ab;\n    long ac;\n    long ad;\n    long ae;\n    long af;\n\
    \    long ag;\n    long ah;\n    long ai;\n    long aj;\n    long ak;\n    long\
    \ al;\n    long am;\n    long an;\n    long ao;\n    long ap;\n    long aq;\n\
    \    long ar;\n    long as;\n    long at;\n    long au;\n    long av;\n    long\
    \ aw;\n    long ax;\n    long ay;\n    long az;\n    long ba;\n    long bb;\n\
    \    long bc;\n    long bd;\n    long be;\n    long bf;\n    long bg;\n    long\
    \ bh;\n    long bi;\n    long bj;\n    long bk;\n    long bl;\n    long bm;\n\
    \    long bn;\n    long bo;\n    long bp;\n    long bq;\n    long br;\n    long\
    \ bs;\n    long bt;\n    long bu;\n    long bv;\n    long bw;\n    long bx;\n\
    \    long by;\n    long bz;\n    long ca;\n    long cb;\n    long cc;\n    long\
    \ cd;\n    long ce;\n    long cf;\n    long cg;\n    long ch;\n    long ci;\n\
    \    long cj;\n    long ck;\n    long cl;\n    long cm;\n    long cn;\n    long\
    \ co;\n    long cp;\n    long cq;\n    long cr;\n    long cs;\n    long ct;\n\
    \    long cu", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187", "{\n    long[] factors = [];\n    long d = 2;\n    while (n > 1)\
    \ \n    {\n        while (n % d == 0) \n        {\n            factors ~= d;\n\
    \            n /= d;\n        }\n        d += 1;\n    }\n    return factors;\n\
    }", "{\n    long[] factors = [];\n    foreach(i; 2..n)\n    {\n        if(n %\
    \ i == 0)\n        {\n            factors ~= i;\n            n /= i;\n       \
    \     i = 1;\n        }\n    }\n    return factors;\n}", "{\n    long[] factors\
    \ = [];\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,\
    \ 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\
    \ 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,\
    \ 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401,\
    \ 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\
    \ 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\
    \ 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,\
    \ 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,\
    \ 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937,\
    \ 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033,\
    \ 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117,\
    \ 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors = [];\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039,\
    \ 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123,\
    \ 1129, 1151, 1153, 1163, 1171, 1181, 1187", "{\n    long[] factors;\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181, 1187,", "{\n    long[] factors = [];\n    long[] primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181, 1187", "{\n    long[] factors = new long[];\n    long[] primes =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063,\
    \ 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163,\
    \ 1171, 1181", "{\n    long[] result = [];\n    long i = 2;\n    while (n > 1)\
    \ \n    {\n        if (n % i == 0) \n        {\n            result ~= i;\n   \
    \         n /= i;\n        } \n        else \n        {\n            i++;\n  \
    \      }\n    }\n    return result;\n}", "{\n    long[] factors = [];\n    long\
    \ i = 2;\n    while (i <= n) \n    {\n        if (n % i == 0) \n        {\n  \
    \          factors ~= i;\n            n /= i;\n        } \n        else \n   \
    \     {\n            i++;\n        }\n    }\n    return factors;\n}", "{\n   \
    \ long[] factors;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021,\
    \ 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103,\
    \ 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187,", "{\n    long[]\
    \ result = [];\n    foreach(i; 2..n)\n    {\n        while(n % i == 0)\n     \
    \   {\n            result ~= i;\n            n /= i;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] factors = [];\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069,\
    \ 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\
    \ 1181, 1187", "{\n    long[] result = new long[0];\n    long i = 2;\n    while\
    \ (n > 1) \n    {\n        if (n % i == 0) \n        {\n            result ~=\
    \ i;\n            n /= i;\n        }\n        else \n        {\n            i++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] factors;\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631,\
    \ 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,\
    \ 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853,\
    \ 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\
    \ 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,\
    \ 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\
    \ 1153, 1163, 1171, 1181, 1187,", "{\n    long[] factors;\n    long i = 2;\n \
    \   while (n > 1) \n    {\n        if (n % i == 0) \n        {\n            factors\
    \ ~= i;\n            n /= i;\n        } \n        else \n        {\n         \
    \   i++;\n        }\n    }\n    return factors;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

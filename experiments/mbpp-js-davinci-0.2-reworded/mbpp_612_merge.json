{
  "name": "mbpp_612_merge",
  "language": "js",
  "prompt": "//Write a jsthon function which takes an array of arrays, where each subarray has two elements, and returns an array of two arrays where the first array has the first element of each subarray and the second one has the second.\nfunction merge(lst){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"a\", \"b\"], [\"m\", \"n\"]]),[[\"x\", \"a\", \"m\"], [\"y\", \"b\", \"n\"]]);\n  assert.deepEqual(candidate([[1, 2], [3, 4], [5, 6], [7, 8]]),[[1, 3, 5, 7], [2, 4, 6, 8]]);\n  assert.deepEqual(candidate([[\"x\", \"y\", \"z\"], [\"a\", \"b\", \"c\"], [\"m\", \"n\", \"o\"]]),[[\"x\", \"a\", \"m\"], [\"y\", \"b\", \"n\"], [\"z\", \"c\", \"o\"]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var first = [];\n    var second = [];\n    for(var i = 0; i < lst.length; i++){\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    var new_lst = [[],[]]\n    for (var i = 0; i < lst.length; i++){\n        new_lst[0].push(lst[i][0]);\n        new_lst[1].push(lst[i][1]);\n    }\n    return new_lst;\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for(var i = 0; i < lst.length; i++){\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "  var first = [];\n  var second = [];\n  for(var i = 0; i < lst.length; i++){\n    first.push(lst[i][0]);\n    second.push(lst[i][1]);\n  }\n  return [first, second];\n}\n",
    "    var a = [];\n    var b = [];\n    for(var i = 0; i < lst.length; i++){\n        a.push(lst[i][0]);\n        b.push(lst[i][1]);\n    }\n    return [a, b];\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for(var i = 0; i < lst.length; i++){\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for(var i = 0; i < lst.length; i++){\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    var res = [[],[]];\n    for(var i = 0; i < lst.length; i++){\n        res[0].push(lst[i][0]);\n        res[1].push(lst[i][1]);\n    }\n    return res;\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for(var i = 0; i < lst.length; i++){\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for(var i = 0; i < lst.length; i++){\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    var first = [];\n    var second = [];\n    for(var i = 0; i < lst.length; i++){\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "\tvar first = [];\n\tvar second = [];\n\tfor(var i = 0; i < lst.length; i++){\n\t\tfirst.push(lst[i][0]);\n\t\tsecond.push(lst[i][1]);\n\t}\n\treturn [first, second];\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for(var i = 0; i < lst.length; i++){\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    var first = [];\n    var second = [];\n    for (var i = 0; i < lst.length; i++){\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    var first = [];\n    var second = [];\n    for(var i = 0; i < lst.length; i++){\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    var first = [];\n    var second = [];\n    for(var i = 0; i < lst.length; i++){\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "  var lst1 = [];\n  var lst2 = [];\n  for (var i = 0; i < lst.length; i++){\n    lst1.push(lst[i][0]);\n    lst2.push(lst[i][1]);\n  }\n  return [lst1, lst2];\n}\n",
    "    var first = [];\n    var second = [];\n    for(var i = 0; i < lst.length; i++){\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    var a = [];\n    var b = [];\n    for(var i = 0; i < lst.length; i++){\n        a.push(lst[i][0]);\n        b.push(lst[i][1]);\n    }\n    return [a, b];\n}\n",
    "\tvar lst1 = [];\n\tvar lst2 = [];\n\tfor(var i = 0; i < lst.length; i++){\n\t\tlst1.push(lst[i][0]);\n\t\tlst2.push(lst[i][1]);\n\t}\n\treturn [lst1, lst2];\n}\n"
  ]
}
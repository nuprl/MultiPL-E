{
  "name": "mbpp_227_min_of_three",
  "language": "js",
  "prompt": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    return Math.min(a, b, c);\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    return Math.min(a, b, c);\n}",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}",
    "    if (a < b && a < c) {\n        return a;\n    }\n    else if (b < a && b < c) {\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n",
    "    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n"
  ]
}
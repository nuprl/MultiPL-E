{
  "name": "mbpp_93_power",
  "language": "js",
  "prompt": "//Write a function to calculate the value of 'a' to the power 'b'.\nfunction power(a, b){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_93_power.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = power;\n  assert.deepEqual(candidate(3, 4),81);\n  assert.deepEqual(candidate(2, 3),8);\n  assert.deepEqual(candidate(5, 5),3125);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n",
    "    return Math.pow(a, b);\n}",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n",
    "    return Math.pow(a, b);\n}",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result = result * a;\n    }\n    return result;\n}",
    "    return Math.pow(a, b);\n}\n",
    "    if(b === 0) return 1;\n    return a * power(a, b-1);\n}\n",
    "    if(b == 0){\n        return 1;\n    }\n    return a * power(a, b-1);\n}\n",
    "    return Math.pow(a, b);\n}\n",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n",
    "  return Math.pow(a, b);\n}\n",
    "    return Math.pow(a, b);\n}",
    "    return Math.pow(a, b);\n}\n",
    "    if(b === 0){\n        return 1;\n    }\n    return a * power(a, b - 1);\n}",
    "    return Math.pow(a, b);\n}",
    "    var result = 1;\n    for(var i = 0; i < b; i++){\n        result *= a;\n    }\n    return result;\n}\n"
  ]
}
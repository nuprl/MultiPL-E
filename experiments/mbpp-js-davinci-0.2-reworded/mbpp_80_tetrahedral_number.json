{
  "name": "mbpp_80_tetrahedral_number",
  "language": "js",
  "prompt": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n - 1);\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  var sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "\treturn (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}",
    "    return n * (n + 1) * (n + 2) / 6;\n}\n",
    "    let sum = 0;\n    for(let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n-1);\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}",
    "    return n*(n+1)*(n+2)/6;\n}",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n-1);\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n * (n + 1) * (n + 2) / 6;\n}\n",
    "  var sum = 0;\n  for (var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return n * (n + 1) * (n + 2) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  let sum = 0;\n  for(let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  var sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n - 1);\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "\treturn (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "\treturn n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n",
    "\treturn n*(n+1)*(n+2)/6;\n}\n",
    "    return (n*(n+1)*(n+2))/6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n * (n + 1) * (n + 2) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "\tvar sum = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum * (sum + 1) / 2;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "\treturn n*(n+1)*(n+2)/6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return n * (n + 1) * (n + 2) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n",
    "    return n * (n + 1) * (n + 2) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return n*(n+1)*(n+2)/6;\n}\n",
    "    return n*(n+1)*(n+2)/6;\n}\n",
    "  return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "    return (n * (n + 1) * (n + 2)) / 6;\n}\n",
    "  return (n*(n+1)*(n+2))/6;\n}\n"
  ]
}
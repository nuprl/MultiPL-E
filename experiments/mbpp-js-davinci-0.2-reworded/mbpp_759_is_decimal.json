{
  "name": "mbpp_759_is_decimal",
  "language": "js",
  "prompt": "//Write a function to check whether a given string is a decimal number with a precision of 2.\nfunction is_decimal(num){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_decimal;\n  assert.deepEqual(candidate(\"123.11\"),true);\n  assert.deepEqual(candidate(\"e666.86\"),false);\n  assert.deepEqual(candidate(\"3.124587\"),false);\n  assert.deepEqual(candidate(\"1.11\"),true);\n  assert.deepEqual(candidate(\"1.1.11\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return /^\\d+\\.\\d{2}$/.test(num);\n}\n",
    "    return /^\\d*\\.\\d{2}$/.test(num);\n}",
    "    return /^\\d*\\.\\d{2}$/.test(num);\n}",
    "    var re = /^\\d+(\\.\\d{1,2})?$/;\n    return re.test(num);\n}\n",
    "    var n = parseFloat(num);\n    return n === +n && n === (n|0) ? false : true;\n}",
    "    return /^\\d+\\.\\d{2}$/.test(num);\n}",
    "    if(num.indexOf('.') == -1){\n        return false;\n    }\n    var arr = num.split('.');\n    if(arr[1].length == 2){\n        return true;\n    }\n    return false;\n}",
    "    if(num.toString().indexOf('.') != -1){\n        var afterDecimal = num.toString().split('.')[1];\n        if(afterDecimal.length == 2){\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    var decimal = /^\\d*\\.\\d{2}$/;\n    if(num.match(decimal)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /^\\d*\\.\\d{2}$/;\n    return regex.test(num);\n}",
    "    var re = /^\\d*\\.\\d{2}$/;\n    return re.test(num);\n}",
    "    return num.toString().match(/^-?[0-9]+(\\.[0-9]{1,2})?$/) ? true : false;\n}",
    "    var regex = /^\\d+(\\.\\d{1,2})?$/;\n    return regex.test(num);\n}",
    "    if(num.indexOf('.') != -1){\n        var arr = num.split('.');\n        if(arr[1].length == 2){\n            return true;\n        }\n    }\n    return false;\n}",
    "\tif(num.length > 0){\n\t\tvar arr = num.split('.');\n\t\tif(arr.length > 1){\n\t\t\tif(arr[1].length == 2){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n",
    "    return /^\\d*\\.\\d{2}$/.test(num);\n}",
    "    return /^\\d+\\.\\d{2}$/.test(num);\n}",
    "    return (num.toString().indexOf('.') != -1) ? true : false;\n}",
    "    return /^\\d*\\.\\d{2}$/.test(num);\n}",
    "    return /^\\d+\\.\\d{2}$/.test(num);\n}"
  ]
}
{
  "name": "mbpp_108_merge_sorted_list",
  "language": "js",
  "prompt": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpkvdxpbfp.js:41:10)\n    at Object.<anonymous> (/tmp/tmpkvdxpbfp.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp0dlrc6u8.js:29:10)\n    at Object.<anonymous> (/tmp/tmp0dlrc6u8.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged_list.push(num1[i]);\n                i++;\n            }\n            else{\n                merged_list.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged_list.push(num2[j]);\n                j++;\n            }\n            else{\n                merged_list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpmeyqwd7w.js:49:10)\n    at Object.<anonymous> (/tmp/tmpmeyqwd7w.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nvar num1 = [1,2,3,4,5];\nvar num2 = [6,7,8,9,10];\nvar num3 = [11,12,13,14,15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpt6j4ms2z.js:44:10)\n    at Object.<anonymous> (/tmp/tmpt6j4ms2z.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var nums = num1.concat(num2, num3);\n    return nums.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0, j = 0, k = 0;\n    var arr = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nvar num1 = [1,2,3,4,5];\nvar num2 = [6,7,8,9,10];\nvar num3 = [11,12,13,14,15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdpnq4x5a.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdpnq4x5a.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbfz7ng9p.js:40:10)\n    at Object.<anonymous> (/tmp/tmpbfz7ng9p.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var merged = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      merged.push(num1[i]);\n      i++;\n    }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      merged.push(num2[j]);\n      j++;\n    }else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      merged.push(num3[k]);\n      k++;\n    }\n  }\n  return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp5rcoepvv.js:27:10)\n    at Object.<anonymous> (/tmp/tmp5rcoepvv.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp25g37m0h.js:48:10)\n    at Object.<anonymous> (/tmp/tmp25g37m0h.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar merged_list = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tmerged_list.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tmerged_list.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse{\n\t\t\tmerged_list.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tmerged_list.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tmerged_list.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tmerged_list.push(num3[k]);\n\t\tk++;\n\t}\n\treturn merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp_xw40xou.js:41:10)\n    at Object.<anonymous> (/tmp/tmp_xw40xou.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else{\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpshsc3443.js:40:10)\n    at Object.<anonymous> (/tmp/tmpshsc3443.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp5e509spt.js:47:10)\n    at Object.<anonymous> (/tmp/tmp5e509spt.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp45vzc3ph.js:28:10)\n    at Object.<anonymous> (/tmp/tmp45vzc3ph.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp2jm5rhqf.js:41:10)\n    at Object.<anonymous> (/tmp/tmp2jm5rhqf.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwzhl6cpf.js:40:10)\n    at Object.<anonymous> (/tmp/tmpwzhl6cpf.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar num = num1.concat(num2, num3);\n\tnum.sort(function(a, b){return a-b});\n\treturn num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                arr.push(num1[i]);\n                i++;\n            }else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                arr.push(num2[j]);\n                j++;\n            }else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmped3jr740.js:46:10)\n    at Object.<anonymous> (/tmp/tmped3jr740.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp2jm5rhqf.js:41:10)\n    at Object.<anonymous> (/tmp/tmp2jm5rhqf.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar num1_index = 0;\n\tvar num2_index = 0;\n\tvar num3_index = 0;\n\tvar result = [];\n\twhile(num1_index < num1.length && num2_index < num2.length && num3_index < num3.length){\n\t\tif(num1[num1_index] < num2[num2_index] && num1[num1_index] < num3[num3_index]){\n\t\t\tresult.push(num1[num1_index]);\n\t\t\tnum1_index++;\n\t\t}\n\t\telse if(num2[num2_index] < num1[num1_index] && num2[num2_index] < num3[num3_index]){\n\t\t\tresult.push(num2[num2_index]);\n\t\t\tnum2_index++;\n\t\t}\n\t\telse if(num3[num3_index] < num1[num1_index] && num3[num3_index] < num2[num2_index]){\n\t\t\tresult.push(num3[num3_index]);\n\t\t\tnum3_index++;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpl3gd1hbv.js:29:10)\n    at Object.<anonymous> (/tmp/tmpl3gd1hbv.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged.push(num1[i]);\n                i++;\n            }\n            else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged.push(num2[j]);\n                j++;\n            }\n            else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpfhz7pf1r.js:49:10)\n    at Object.<anonymous> (/tmp/tmpfhz7pf1r.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged_array.push(num1[i]);\n                i++;\n            }\n            else{\n                merged_array.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged_array.push(num2[j]);\n                j++;\n            }\n            else{\n                merged_array.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdk4uukq4.js:49:10)\n    at Object.<anonymous> (/tmp/tmpdk4uukq4.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            } else {\n                result.push(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            } else {\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpi90c30w_.js:47:10)\n    at Object.<anonymous> (/tmp/tmpi90c30w_.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdh0tiggb.js:41:10)\n    at Object.<anonymous> (/tmp/tmpdh0tiggb.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    for(var i = 0; i < num1.length; i++){\n        arr.push(num1[i]);\n    }\n    for(var i = 0; i < num2.length; i++){\n        arr.push(num2[i]);\n    }\n    for(var i = 0; i < num3.length; i++){\n        arr.push(num3[i]);\n    }\n    arr.sort(function(a, b){return a-b});\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpif3ayshg.js:44:10)\n    at Object.<anonymous> (/tmp/tmpif3ayshg.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged.push(num1[i]);\n                i++;\n            }else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                merged.push(num2[j]);\n                j++;\n            }else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpdvcjracp.js:46:10)\n    at Object.<anonymous> (/tmp/tmpdvcjracp.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_arr = num1.concat(num2, num3);\n    return new_arr.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpatbmbyky.js:11:10)\n    at Object.<anonymous> (/tmp/tmpatbmbyky.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1_index = 0;\n    var num2_index = 0;\n    var num3_index = 0;\n    var result = [];\n    while(num1_index < num1.length && num2_index < num2.length && num3_index < num3.length){\n        if(num1[num1_index] < num2[num2_index] && num1[num1_index] < num3[num3_index]){\n            result.push(num1[num1_index]);\n            num1_index++;\n        }\n        else if(num2[num2_index] < num1[num1_index] && num2[num2_index] < num3[num3_index]){\n            result.push(num2[num2_index]);\n            num2_index++;\n        }\n        else if(num3[num3_index] < num1[num1_index] && num3[num3_index] < num2[num2_index]){\n            result.push(num3[num3_index]);\n            num3_index++;\n        }\n    }\n    while(num1_index < num1.length){\n        result.push(num1[num1_index]);\n        num1_index++;\n    }\n    while(num2_index < num2.length){\n        result.push(num2[num2_index]);\n        num2_index++;\n    }\n    while(num3_index < num3.length){\n        result.push(num3[num3_index]);\n        num3_index++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmprozctppv.js:41:10)\n    at Object.<anonymous> (/tmp/tmprozctppv.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpf1icwbvz.js:39:10)\n    at Object.<anonymous> (/tmp/tmpf1icwbvz.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    let merged_list = num1.concat(num2, num3);\n    let sorted_list = merged_list.sort();\n    return sorted_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpqas0y5r8.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqas0y5r8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1oo8pt7k.js:41:10)\n    at Object.<anonymous> (/tmp/tmp1oo8pt7k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nvar num1 = [1,2,3,4,5];\nvar num2 = [6,7,8,9,10];\nvar num3 = [11,12,13,14,15];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp6m28wgit.js:43:10)\n    at Object.<anonymous> (/tmp/tmp6m28wgit.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpfso_3n0y.js:12:10)\n    at Object.<anonymous> (/tmp/tmpfso_3n0y.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var num1_index = 0;\n  var num2_index = 0;\n  var num3_index = 0;\n  var result = [];\n  while(num1_index < num1.length && num2_index < num2.length && num3_index < num3.length){\n    if(num1[num1_index] < num2[num2_index] && num1[num1_index] < num3[num3_index]){\n      result.push(num1[num1_index]);\n      num1_index++;\n    }\n    else if(num2[num2_index] < num1[num1_index] && num2[num2_index] < num3[num3_index]){\n      result.push(num2[num2_index]);\n      num2_index++;\n    }\n    else{\n      result.push(num3[num3_index]);\n      num3_index++;\n    }\n  }\n  while(num1_index < num1.length){\n    result.push(num1[num1_index]);\n    num1_index++;\n  }\n  while(num2_index < num2.length){\n    result.push(num2[num2_index]);\n    num2_index++;\n  }\n  while(num3_index < num3.length){\n    result.push(num3[num3_index]);\n    num3_index++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9m45qqbe.js:41:10)\n    at Object.<anonymous> (/tmp/tmp9m45qqbe.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_list.push(num3[k]);\n            k++;\n        }\n        else if(num1[i] == num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n            j++;\n        }\n        else if(num1[i] == num3[k] && num1[i] < num2[j]){\n            new_list.push(num1[i]);\n            i++;\n            k++;\n        }\n        else if(num2[j] == num3[k] && num2[j] < num1[i]){\n            new_list.push(num2[j]);\n            j++;\n            k++;\n        }\n        else if(num1[i] == num2[j] && num1[i] == num3[k]){\n            new_list.push(num1[i]);\n            i++;\n            j++;\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "/tmp/tmpp9aooo0a.js:64\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9vz9vndk.js:41:10)\n    at Object.<anonymous> (/tmp/tmp9vz9vndk.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var merged = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]){\n            merged.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]){\n            merged.push(num2[j]);\n            j++;\n        }\n        else{\n            merged.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpfpaicgfl.js:41:10)\n    at Object.<anonymous> (/tmp/tmpfpaicgfl.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar new_array = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tnew_array.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tnew_array.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]){\n\t\t\tnew_array.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\treturn new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp33k45al7.js:29:10)\n    at Object.<anonymous> (/tmp/tmp33k45al7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = num1.concat(num2, num3);\n    new_list.sort(function(a, b){\n        return a-b;\n    });\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp2jm5rhqf.js:41:10)\n    at Object.<anonymous> (/tmp/tmp2jm5rhqf.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmprp_l3icf.js:39:10)\n    at Object.<anonymous> (/tmp/tmprp_l3icf.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp48itrtvb.js:29:10)\n    at Object.<anonymous> (/tmp/tmp48itrtvb.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\nvar num1 = [1,2,3,4,5,6,7,8,9,10];\nvar num2 = [1,2,3,4,5,6,7,8,9,10];\nvar num3 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmph3m8wa8b.js:43:10)\n    at Object.<anonymous> (/tmp/tmph3m8wa8b.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpojbp9acd.js:39:10)\n    at Object.<anonymous> (/tmp/tmpojbp9acd.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp0nl5bc0t.js:40:10)\n    at Object.<anonymous> (/tmp/tmp0nl5bc0t.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp48itrtvb.js:29:10)\n    at Object.<anonymous> (/tmp/tmp48itrtvb.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmptbwyszvi.js:38:10)\n    at Object.<anonymous> (/tmp/tmptbwyszvi.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpgsuge1cs.js:40:10)\n    at Object.<anonymous> (/tmp/tmpgsuge1cs.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp0nl5bc0t.js:40:10)\n    at Object.<anonymous> (/tmp/tmp0nl5bc0t.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpqu2bqlgc.js:49:10)\n    at Object.<anonymous> (/tmp/tmpqu2bqlgc.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpcziupob8.js:39:10)\n    at Object.<anonymous> (/tmp/tmpcziupob8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp25g37m0h.js:48:10)\n    at Object.<anonymous> (/tmp/tmp25g37m0h.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1_index = 0;\n    var num2_index = 0;\n    var num3_index = 0;\n    var result = [];\n    while(num1_index < num1.length && num2_index < num2.length && num3_index < num3.length){\n        if(num1[num1_index] < num2[num2_index] && num1[num1_index] < num3[num3_index]){\n            result.push(num1[num1_index]);\n            num1_index++;\n        }\n        else if(num2[num2_index] < num1[num1_index] && num2[num2_index] < num3[num3_index]){\n            result.push(num2[num2_index]);\n            num2_index++;\n        }\n        else if(num3[num3_index] < num1[num1_index] && num3[num3_index] < num2[num2_index]){\n            result.push(num3[num3_index]);\n            num3_index++;\n        }\n    }\n    while(num1_index < num1.length){\n        result.push(num1[num1_index]);\n        num1_index++;\n    }\n    while(num2_index < num2.length){\n        result.push(num2[num2_index]);\n        num2_index++;\n    }\n    while(num3_index < num3.length){\n        result.push(num3[num3_index]);\n        num3_index++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmprozctppv.js:41:10)\n    at Object.<anonymous> (/tmp/tmprozctppv.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpcziupob8.js:39:10)\n    at Object.<anonymous> (/tmp/tmpcziupob8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1oo8pt7k.js:41:10)\n    at Object.<anonymous> (/tmp/tmp1oo8pt7k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp05rre043.js:41:10)\n    at Object.<anonymous> (/tmp/tmp05rre043.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else if(num3[k] < num1[i] && num3[k] < num2[j]){\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp2uuts37m.js:29:10)\n    at Object.<anonymous> (/tmp/tmp2uuts37m.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var arr = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length && j < num2.length){\n        if(num1[i] < num2[j]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else{\n            arr.push(num2[j]);\n            j++;\n        }\n    }\n    while(i < num1.length && k < num3.length){\n        if(num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(j < num2.length && k < num3.length){\n        if(num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else{\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  56,\n  25,\n  110,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpi2amj2ab.js:70:10)\n    at Object.<anonymous> (/tmp/tmpi2amj2ab.js:75:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19,  20,  11,  24, 25, 24, 15,\n     4,   5,  26,  29, 54, 48, 56,\n    25, 110, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tresult.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tresult.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j]){\n\t\t\tresult.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4bq3y9u3.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4bq3y9u3.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged_list.push(num1[i]);\n                i++;\n            }\n            else{\n                merged_list.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged_list.push(num2[j]);\n                j++;\n            }\n            else{\n                merged_list.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpmeyqwd7w.js:49:10)\n    at Object.<anonymous> (/tmp/tmpmeyqwd7w.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = num1.concat(num2, num3);\n    return new_array.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpau2nlulq.js:11:10)\n    at Object.<anonymous> (/tmp/tmpau2nlulq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp6schx0rp.js:11:10)\n    at Object.<anonymous> (/tmp/tmp6schx0rp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var merged_array = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpts0l0k1d.js:41:10)\n    at Object.<anonymous> (/tmp/tmpts0l0k1d.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp05rre043.js:41:10)\n    at Object.<anonymous> (/tmp/tmp05rre043.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpd7to2v3r.js:46:10)\n    at Object.<anonymous> (/tmp/tmpd7to2v3r.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while (i < num1.length && j < num2.length && k < num3.length){\n        if (num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if (num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else if (num3[k] < num1[i] && num3[k] < num2[j]){\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while (j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while (k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1h2kyh5r.js:40:10)\n    at Object.<anonymous> (/tmp/tmp1h2kyh5r.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var result = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp2jm5rhqf.js:41:10)\n    at Object.<anonymous> (/tmp/tmp2jm5rhqf.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar new_array = num1.concat(num2, num3);\n\treturn new_array.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    var sorted = arr.sort(function(a, b){return a-b});\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1oo8pt7k.js:41:10)\n    at Object.<anonymous> (/tmp/tmp1oo8pt7k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var nums = num1.concat(num2, num3);\n    return nums.sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1rql991c.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1rql991c.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            } else {\n                result.push(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            } else {\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpclzb_cmj.js:46:10)\n    at Object.<anonymous> (/tmp/tmpclzb_cmj.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                arr.push(num1[i]);\n                i++;\n            }\n            else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                arr.push(num2[j]);\n                j++;\n            }\n            else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp7rbk0n92.js:48:10)\n    at Object.<anonymous> (/tmp/tmp7rbk0n92.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            merged.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num3[k]){\n            merged.push(num2[j]);\n            j++;\n        }\n        else{\n            merged.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  25,\n  24,\n  15,\n  4,\n  5,\n  29,\n  24,\n  26,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpnwynr9uv.js:41:10)\n    at Object.<anonymous> (/tmp/tmpnwynr9uv.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  25, 24, 15,   4,\n     5, 29,  24,  26, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var merged_list = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      merged_list.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      merged_list.push(num2[j]);\n      j++;\n    }\n    else{\n      merged_list.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    merged_list.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    merged_list.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    merged_list.push(num3[k]);\n    k++;\n  }\n  return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmplgp5xmnd.js:41:10)\n    at Object.<anonymous> (/tmp/tmplgp5xmnd.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    let arr = num1.concat(num2, num3);\n    return arr.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpok5ebhn_.js:11:10)\n    at Object.<anonymous> (/tmp/tmpok5ebhn_.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0, j = 0, k = 0;\n    var arr = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                arr.push(num1[i]);\n                i++;\n            }else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                arr.push(num2[j]);\n                j++;\n            }else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpzn9bwmjh.js:44:10)\n    at Object.<anonymous> (/tmp/tmpzn9bwmjh.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp05rre043.js:41:10)\n    at Object.<anonymous> (/tmp/tmp05rre043.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var num1 = [1,2,3,4,5,6,7,8,9,10];\n    var num2 = [1,2,3,4,5,6,7,8,9,10];\n    var num3 = [1,2,3,4,5,6,7,8,9,10];\n    var num4 = num1.concat(num2, num3);\n    var num5 = num4.sort();\n    return num5;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n  1,\n  10,\n  10,\n  10,\n  2,\n  2,\n  2,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  9,\n  9,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpt3541rhp.js:15:10)\n    at Object.<anonymous> (/tmp/tmpt3541rhp.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 1, 1, 10, 10, 10, 2, 2, 2,\n    3, 3, 3,  4,  4,  4, 5, 5, 5,\n    6, 6, 6,  7,  7,  7, 8, 8, 8,\n    9, 9, 9\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged.push(num3[k]);\n            k++;\n        }\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpkgv_7p9m.js:29:10)\n    at Object.<anonymous> (/tmp/tmpkgv_7p9m.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9vz9vndk.js:41:10)\n    at Object.<anonymous> (/tmp/tmp9vz9vndk.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var merged_list = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpwi0i1njt.js:41:10)\n    at Object.<anonymous> (/tmp/tmpwi0i1njt.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1oo8pt7k.js:41:10)\n    at Object.<anonymous> (/tmp/tmp1oo8pt7k.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] <= num1[i] && num3[k] <= num2[j]){\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpyj4rhyf7.js:41:10)\n    at Object.<anonymous> (/tmp/tmpyj4rhyf7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                arr.push(num1[i]);\n                i++;\n            }\n            else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                arr.push(num2[j]);\n                j++;\n            }\n            else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpogg6bs8_.js:49:10)\n    at Object.<anonymous> (/tmp/tmpogg6bs8_.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = num1.concat(num2).concat(num3);\n    return new_array.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else{\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        sorted_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        sorted_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        sorted_list.push(num3[k]);\n        k++;\n    }\n    return sorted_list;\n}\n\nvar num1 = [1,2,3,4,5,6,7,8,9];\nvar num2 = [1,2,3,4,5,6,7,8,9];\nvar num3 = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp30y77cml.js:44:10)\n    at Object.<anonymous> (/tmp/tmp30y77cml.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j] && num1[i] < num3[k]){\n      result.push(num1[i]);\n      i++;\n    }\n    else if(num2[j] < num1[i] && num2[j] < num3[k]){\n      result.push(num2[j]);\n      j++;\n    }\n    else{\n      result.push(num3[k]);\n      k++;\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpebz75cc2.js:41:10)\n    at Object.<anonymous> (/tmp/tmpebz75cc2.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0, j = 0, k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpif3ayshg.js:44:10)\n    at Object.<anonymous> (/tmp/tmpif3ayshg.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged.push(num1[i]);\n                i++;\n            }\n            else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged.push(num2[j]);\n                j++;\n            }\n            else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpfhz7pf1r.js:49:10)\n    at Object.<anonymous> (/tmp/tmpfhz7pf1r.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp50zxmu2b.js:51:10)\n    at Object.<anonymous> (/tmp/tmp50zxmu2b.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var num = num1.concat(num2, num3);\n    num.sort(function(a, b){return a - b});\n    return num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var sorted_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            sorted_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            sorted_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            sorted_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        sorted_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        sorted_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        sorted_list.push(num3[k]);\n        k++;\n    }\n    return sorted_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp7tl_4tt4.js:41:10)\n    at Object.<anonymous> (/tmp/tmp7tl_4tt4.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1_rux8o2.js:40:10)\n    at Object.<anonymous> (/tmp/tmp1_rux8o2.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j]){\n\t\t\tif(num1[i] < num3[k]){\n\t\t\t\tresult.push(num1[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tresult.push(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(num2[j] < num3[k]){\n\t\t\t\tresult.push(num2[j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tresult.push(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpryy9sgvw.js:49:10)\n    at Object.<anonymous> (/tmp/tmpryy9sgvw.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjxmppx_k.js:46:10)\n    at Object.<anonymous> (/tmp/tmpjxmppx_k.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j]){\n\t\t\tif(num1[i] < num3[k]){\n\t\t\t\tresult.push(num1[i]);\n\t\t\t\ti++;\n\t\t\t}else{\n\t\t\t\tresult.push(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}else{\n\t\t\tif(num2[j] < num3[k]){\n\t\t\t\tresult.push(num2[j]);\n\t\t\t\tj++;\n\t\t\t}else{\n\t\t\t\tresult.push(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nvar num1 = [1,3,5,7,9];\nvar num2 = [2,4,6,8,10];\nvar num3 = [2,4,6,8,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmph92vgpyj.js:49:10)\n    at Object.<anonymous> (/tmp/tmph92vgpyj.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpg47ngy67.js:41:10)\n    at Object.<anonymous> (/tmp/tmpg47ngy67.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i<num1.length && j<num2.length && k<num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i<num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j<num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k<num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpola8r5b3.js:40:10)\n    at Object.<anonymous> (/tmp/tmpola8r5b3.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n  var result = [];\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  while(i < num1.length && j < num2.length && k < num3.length){\n    if(num1[i] < num2[j]){\n      if(num1[i] < num3[k]){\n        result.push(num1[i]);\n        i++;\n      }else{\n        result.push(num3[k]);\n        k++;\n      }\n    }else{\n      if(num2[j] < num3[k]){\n        result.push(num2[j]);\n        j++;\n      }else{\n        result.push(num3[k]);\n        k++;\n      }\n    }\n  }\n  while(i < num1.length){\n    result.push(num1[i]);\n    i++;\n  }\n  while(j < num2.length){\n    result.push(num2[j]);\n    j++;\n  }\n  while(k < num3.length){\n    result.push(num3[k]);\n    k++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp0utodmcj.js:46:10)\n    at Object.<anonymous> (/tmp/tmp0utodmcj.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    var sorted = arr.sort(function(a, b){return a-b});\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = num1.concat(num2, num3);\n    return new_array.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        }\n        else{\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpbkknepr6.js:41:10)\n    at Object.<anonymous> (/tmp/tmpbkknepr6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    var sorted = arr.sort(function(a, b){return a-b});\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var merged_array = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_array.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_array.push(num3[k]);\n        k++;\n    }\n    return merged_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpecdwf5in.js:40:10)\n    at Object.<anonymous> (/tmp/tmpecdwf5in.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                merged.push(num1[i]);\n                i++;\n            }\n            else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                merged.push(num2[j]);\n                j++;\n            }\n            else{\n                merged.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpfhz7pf1r.js:49:10)\n    at Object.<anonymous> (/tmp/tmpfhz7pf1r.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged.push(num2[j]);\n            j++;\n        }\n        else{\n            merged.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp779eol3u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp779eol3u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]){\n\t\t\tresult.push(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]){\n\t\t\tresult.push(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse{\n\t\t\tresult.push(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tresult.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tresult.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tresult.push(num3[k]);\n\t\tk++;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9r8lfj8y.js:41:10)\n    at Object.<anonymous> (/tmp/tmp9r8lfj8y.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged.push(num2[j]);\n            j++;\n        }\n        else{\n            merged.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged.push(num3[k]);\n        k++;\n    }\n    return merged;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp779eol3u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp779eol3u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }\n        else{\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        merged_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        merged_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        merged_list.push(num3[k]);\n        k++;\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp4dt8g0_u.js:41:10)\n    at Object.<anonymous> (/tmp/tmp4dt8g0_u.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else{\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp2yw6ad3i.js:41:10)\n    at Object.<anonymous> (/tmp/tmp2yw6ad3i.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n\tvar new_array = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length){\n\t\tif(num1[i] < num2[j]){\n\t\t\tif(num1[i] < num3[k]){\n\t\t\t\tnew_array.push(num1[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnew_array.push(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(num2[j] < num3[k]){\n\t\t\t\tnew_array.push(num2[j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnew_array.push(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile(i < num1.length){\n\t\tnew_array.push(num1[i]);\n\t\ti++;\n\t}\n\twhile(j < num2.length){\n\t\tnew_array.push(num2[j]);\n\t\tj++;\n\t}\n\twhile(k < num3.length){\n\t\tnew_array.push(num3[k]);\n\t\tk++;\n\t}\n\treturn new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmph7_8j7wq.js:49:10)\n    at Object.<anonymous> (/tmp/tmph7_8j7wq.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_array.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_array.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_array.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp9vz9vndk.js:41:10)\n    at Object.<anonymous> (/tmp/tmp9vz9vndk.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort(function(a, b){return a-b});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = num1.concat(num2, num3);\n    return new_array.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpau2nlulq.js:11:10)\n    at Object.<anonymous> (/tmp/tmpau2nlulq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var merged_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            merged_list.push(num1[i]);\n            i++;\n        }else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            merged_list.push(num2[j]);\n            j++;\n        }else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            merged_list.push(num3[k]);\n            k++;\n        }\n    }\n    return merged_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpck45imxq.js:27:10)\n    at Object.<anonymous> (/tmp/tmpck45imxq.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20, 11, 24, 25, 24,\n    15,  4,  5, 26, 29, 54,\n    48\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp6schx0rp.js:11:10)\n    at Object.<anonymous> (/tmp/tmp6schx0rp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            arr.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            arr.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            arr.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpp61norw1.js:40:10)\n    at Object.<anonymous> (/tmp/tmpp61norw1.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp6schx0rp.js:11:10)\n    at Object.<anonymous> (/tmp/tmp6schx0rp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var i = 0, j = 0, k = 0;\n    var arr = [];\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                arr.push(num1[i]);\n                i++;\n            }else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }else{\n            if(num2[j] < num3[k]){\n                arr.push(num2[j]);\n                j++;\n            }else{\n                arr.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        arr.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        arr.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        arr.push(num3[k]);\n        k++;\n    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpzn9bwmjh.js:44:10)\n    at Object.<anonymous> (/tmp/tmpzn9bwmjh.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_array = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                new_array.push(num1[i]);\n                i++;\n            }\n            else{\n                new_array.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                new_array.push(num2[j]);\n                j++;\n            }\n            else{\n                new_array.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        new_array.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_array.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_array.push(num3[k]);\n        k++;\n    }\n    return new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp1ia9mhv6.js:49:10)\n    at Object.<anonymous> (/tmp/tmp1ia9mhv6.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j]){\n            if(num1[i] < num3[k]){\n                result.push(num1[i]);\n                i++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n        else{\n            if(num2[j] < num3[k]){\n                result.push(num2[j]);\n                j++;\n            }\n            else{\n                result.push(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmpjg_lsfo3.js:49:10)\n    at Object.<anonymous> (/tmp/tmpjg_lsfo3.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var result = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            result.push(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            result.push(num2[j]);\n            j++;\n        } else {\n            result.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        result.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        result.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        result.push(num3[k]);\n        k++;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp0cg0y0r1.js:39:10)\n    at Object.<anonymous> (/tmp/tmp0cg0y0r1.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var arr = num1.concat(num2, num3);\n    return arr.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  110,\n  15,\n  154,\n  19,\n  20,\n  233,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  4,\n  48,\n  5,\n  54,\n  56\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp6schx0rp.js:11:10)\n    at Object.<anonymous> (/tmp/tmp6schx0rp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    11, 110, 15, 154, 19, 20, 233,\n    24,  24, 25,  25, 26, 29,   4,\n    48,   5, 54,  56\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to merge three arrays into a single sorted array.\nfunction merge_sorted_list(num1, num2, num3){\n    var new_list = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    while(i < num1.length && j < num2.length && k < num3.length){\n        if(num1[i] < num2[j] && num1[i] < num3[k]){\n            new_list.push(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]){\n            new_list.push(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]){\n            new_list.push(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.length){\n        new_list.push(num1[i]);\n        i++;\n    }\n    while(j < num2.length){\n        new_list.push(num2[j]);\n        j++;\n    }\n    while(k < num3.length){\n        new_list.push(num3[k]);\n        k++;\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge_sorted_list;\n  assert.deepEqual(candidate([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]),[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]);\n  assert.deepEqual(candidate([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]),[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]);\n  assert.deepEqual(candidate([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]),[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]);\n}\n\ntest();",
      "timestamp": 1666123506,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  19,\n  20,\n  11,\n  24,\n  25,\n  24,\n  15,\n  4,\n  5,\n  26,\n  29,\n  54,\n  48,\n  110,\n  56,\n  25,\n  233,\n  154\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  11,\n  15,\n  19,\n  20,\n  24,\n  24,\n  25,\n  25,\n  26,\n  29,\n  48,\n  54,\n  56,\n  110,\n  154,\n  233\n]\n    at test (/tmp/tmp91fcsuhw.js:41:10)\n    at Object.<anonymous> (/tmp/tmp91fcsuhw.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    19, 20,  11,  24, 25, 24,  15,\n     4,  5,  26,  29, 54, 48, 110,\n    56, 25, 233, 154\n  ],\n  expected: [\n     4,   5,  11,  15, 19, 20, 24,\n    24,  25,  25,  26, 29, 48, 54,\n    56, 110, 154, 233\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
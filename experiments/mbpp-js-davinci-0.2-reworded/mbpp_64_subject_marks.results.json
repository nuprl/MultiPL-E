{
  "name": "mbpp_64_subject_marks",
  "language": "js",
  "prompt": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = [];\n    for(var i = 0; i < subjectmarks.length; i++){\n        subject_marks.push(subjectmarks[i][1]);\n    }\n    return subject_marks;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  88,\n  90,\n  97,\n  82\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpj2xoi50h.js:15:10)\n    at Object.<anonymous> (/tmp/tmpj2xoi50h.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 88, 90, 97, 82 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 95]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp0gjo2jkc.js:12:10)\n    at Object.<anonymous> (/tmp/tmp0gjo2jkc.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Science', 90], ['Maths', 80], ['Hindi', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpsrnh5nv7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpsrnh5nv7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 98]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpx5dy3h2d.js:13:10)\n    at Object.<anonymous> (/tmp/tmpx5dy3h2d.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English',100],['Math',50],['Science',80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 90], ['Science', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplmnfq3m7.js:12:10)\n    at Object.<anonymous> (/tmp/tmplmnfq3m7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1]\n    })\n    return subjectmarks\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English',100],['Science',50],['Maths',75],['Social',80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nvar subjectmarks = [['English', 50], ['Math', 100], ['Science', 20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpdi_2gkfo.js:12:10)\n    at Object.<anonymous> (/tmp/tmpdi_2gkfo.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n\treturn subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpca2_8how.js:10:10)\n    at Object.<anonymous> (/tmp/tmpca2_8how.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 70]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp_utlrq74.js:12:10)\n    at Object.<anonymous> (/tmp/tmp_utlrq74.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English',100],['Maths',200],['Science',300]];\n    var subjectmarks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'English',\n    100\n  ],\n  [\n    'Maths',\n    200\n  ],\n  [\n    'Science',\n    300\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp4c1t8awg.js:14:10)\n    at Object.<anonymous> (/tmp/tmp4c1t8awg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'English', 100 ], [ 'Maths', 200 ], [ 'Science', 300 ] ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\n\nvar marks = [['English', 50], ['Maths', 100], ['Science', 80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English',100],['Maths',100],['Science',50]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English',100],['Maths',200],['Science',300]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpjm2cvq1n.js:12:10)\n    at Object.<anonymous> (/tmp/tmpjm2cvq1n.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_subjectmarks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_subjectmarks;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 50], ['Maths', 80], ['Science', 90]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English',100],['Maths',50],['Science',80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 95]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp0gjo2jkc.js:12:10)\n    at Object.<anonymous> (/tmp/tmp0gjo2jkc.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar sub_marks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nsubjectmarks.sort(function(a, b){\n    return subject_marks(a) - subject_marks(b);\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmprfwqdaru.js:14:10)\n    at Object.<anonymous> (/tmp/tmprfwqdaru.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    })\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 95]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English',100],['Maths',50],['Science',70]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpe5k_4iu9.js:12:10)\n    at Object.<anonymous> (/tmp/tmpe5k_4iu9.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar sorted_marks = subject_marks.sort();\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpyqrdwyu8.js:5\nvar sorted_marks = subject_marks.sort();\n                                 ^\n\nTypeError: subject_marks.sort is not a function\n    at Object.<anonymous> (/tmp/tmpyqrdwyu8.js:5:34)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Maths', 200], ['Science', 300]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpib1cfnh6.js:11:10)\n    at Object.<anonymous> (/tmp/tmpib1cfnh6.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(function(a,b){\n    return subject_marks(a) - subject_marks(b);\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpwdue0ibw.js:14:10)\n    at Object.<anonymous> (/tmp/tmpwdue0ibw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\n\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 95]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Maths', 90], ['Science', 80], ['Social', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbsidyr3f.js:12:10)\n    at Object.<anonymous> (/tmp/tmpbsidyr3f.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Science', 200], ['Math', 300], ['Social sciences', 400]];\n    subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'English',\n    100\n  ],\n  [\n    'Science',\n    200\n  ],\n  [\n    'Math',\n    300\n  ],\n  [\n    'Social sciences',\n    400\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpl6kulc3b.js:14:10)\n    at Object.<anonymous> (/tmp/tmpl6kulc3b.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'English', 100 ],\n    [ 'Science', 200 ],\n    [ 'Math', 300 ],\n    [ 'Social sciences', 400 ]\n  ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English',50],['Maths',100],['Science',20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\n\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Hindi', 200]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80], ['Social', 70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Hindi', 200]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nvar subjectmarks = [['English',80],['Maths',90],['Science',70],['Hindi',60]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar sorted_subject_marks = subject_marks.sort();\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp8uoz3ml2.js:5\nvar sorted_subject_marks = subject_marks.sort();\n                                         ^\n\nTypeError: subject_marks.sort is not a function\n    at Object.<anonymous> (/tmp/tmp8uoz3ml2.js:5:42)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 90], ['Science', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplmnfq3m7.js:12:10)\n    at Object.<anonymous> (/tmp/tmplmnfq3m7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var result = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sort_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sort_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English',100],['Maths',200],['Science',300]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplt8m_1al.js:11:10)\n    at Object.<anonymous> (/tmp/tmplt8m_1al.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 200], ['English', 100], ['Math', 300]];\n    var subjectmarks = subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'English',\n    100\n  ],\n  [\n    'English',\n    100\n  ],\n  [\n    'Math',\n    200\n  ],\n  [\n    'English',\n    200\n  ],\n  [\n    'Math',\n    200\n  ],\n  [\n    'Math',\n    300\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmppddwoye8.js:14:10)\n    at Object.<anonymous> (/tmp/tmppddwoye8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'English', 100 ],\n    [ 'English', 100 ],\n    [ 'Math', 200 ],\n    [ 'English', 200 ],\n    [ 'Math', 200 ],\n    [ 'Math', 300 ]\n  ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sortedmarks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sortedmarks;\n}\nvar subjectmarks = [['English', 50], ['Maths', 100], ['Science', 20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 200], ['English', 100], ['Math', 300]];\n    var subjectmarks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'English',\n    100\n  ],\n  [\n    'English',\n    100\n  ],\n  [\n    'Math',\n    200\n  ],\n  [\n    'English',\n    200\n  ],\n  [\n    'Math',\n    200\n  ],\n  [\n    'Math',\n    300\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpu5hjwkhd.js:14:10)\n    at Object.<anonymous> (/tmp/tmpu5hjwkhd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'English', 100 ],\n    [ 'English', 100 ],\n    [ 'Math', 200 ],\n    [ 'English', 200 ],\n    [ 'Math', 200 ],\n    [ 'Math', 300 ]\n  ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    console.log(subject_marks);\n}\nsubject_marks([['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Telugu', 100], ['Telugu', 200]]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "[\n  [ 'English', 100 ],\n  [ 'Math', 100 ],\n  [ 'Telugu', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Telugu', 200 ]\n]\n[\n  [ 'Social sciences', 82 ],\n  [ 'English', 88 ],\n  [ 'Science', 90 ],\n  [ 'Maths', 97 ]\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp122vfpxy.js:15:10)\n    at Object.<anonymous> (/tmp/tmp122vfpxy.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 200], ['English', 100], ['Math', 300]];\n    var sorted = subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    console.log(sorted);\n}\nsubject_marks();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "[\n  [ 'English', 100 ],\n  [ 'English', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Math', 200 ],\n  [ 'Math', 300 ]\n]\n[\n  [ 'English', 100 ],\n  [ 'English', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Math', 200 ],\n  [ 'Math', 300 ]\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmphgr76ub2.js:16:10)\n    at Object.<anonymous> (/tmp/tmphgr76ub2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English',100],['Maths',200],['Science',300]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplt8m_1al.js:11:10)\n    at Object.<anonymous> (/tmp/tmplt8m_1al.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  var subject_marks = subjectmarks.sort(function(a,b){\n    return a[1]-b[1];\n  });\n  return subject_marks;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var marks = [];\n    for(var i=0; i<subjectmarks.length; i++){\n        marks.push(subjectmarks[i][1]);\n    }\n    marks.sort(function(a,b){\n        return a-b;\n    });\n    var result = [];\n    for(var i=0; i<marks.length; i++){\n        for(var j=0; j<subjectmarks.length; j++){\n            if(marks[i] == subjectmarks[j][1]){\n                result.push(subjectmarks[j]);\n                subjectmarks.splice(j,1);\n                break;\n            }\n        }\n    }\n    return result;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 95], ['Social', 80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['History', 200]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmppljx30c4.js:12:10)\n    at Object.<anonymous> (/tmp/tmppljx30c4.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 300]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Math', 90], ['Science', 89]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpkbqdb8iq.js:12:10)\n    at Object.<anonymous> (/tmp/tmpkbqdb8iq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nvar subjectmarks = [['English', 50], ['Maths', 100], ['Science', 75]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 50], ['Maths', 100], ['Science', 20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Science', 200], ['Math', 300], ['Social studies', 400]];\n    var sorted = subjectmarks.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'English',\n    100\n  ],\n  [\n    'Science',\n    200\n  ],\n  [\n    'Math',\n    300\n  ],\n  [\n    'Social studies',\n    400\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpwvf22oms.js:14:10)\n    at Object.<anonymous> (/tmp/tmpwvf22oms.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'English', 100 ],\n    [ 'Science', 200 ],\n    [ 'Math', 300 ],\n    [ 'Social studies', 400 ]\n  ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpo1rj7tbp.js:11:10)\n    at Object.<anonymous> (/tmp/tmpo1rj7tbp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return sorted_marks;\n}\nvar marks = [['English', 100], ['Science', 90], ['Maths', 80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = [];\n    for(var i = 0; i < subjectmarks.length; i++){\n        subject_marks.push(subjectmarks[i][1]);\n    }\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  88,\n  90,\n  97,\n  82\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpj57cbu0s.js:14:10)\n    at Object.<anonymous> (/tmp/tmpj57cbu0s.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 88, 90, 97, 82 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return marks;\n}\nvar marks = [['English',100],['Maths',50],['Science',80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmper6j8iyc.js:12:10)\n    at Object.<anonymous> (/tmp/tmper6j8iyc.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 70]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp_utlrq74.js:12:10)\n    at Object.<anonymous> (/tmp/tmp_utlrq74.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80], ['Social', 70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['History', 200]];\nsubjectmarks.sort(function(a,b){\n    return subject_marks(a) - subject_marks(b);\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpg4c4dk1x.js:14:10)\n    at Object.<anonymous> (/tmp/tmpg4c4dk1x.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpdi_2gkfo.js:12:10)\n    at Object.<anonymous> (/tmp/tmpdi_2gkfo.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 90], ['Maths', 100], ['Science', 80]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbrkhdozp.js:12:10)\n    at Object.<anonymous> (/tmp/tmpbrkhdozp.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nvar arr = [['maths',90],['physics',80],['chemistry',70],['english',60],['hindi',50]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp22hf01ye.js:12:10)\n    at Object.<anonymous> (/tmp/tmp22hf01ye.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\n\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar sorted_marks = subject_marks.sort();\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpyqrdwyu8.js:5\nvar sorted_marks = subject_marks.sort();\n                                 ^\n\nTypeError: subject_marks.sort is not a function\n    at Object.<anonymous> (/tmp/tmpyqrdwyu8.js:5:34)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 60], ['Hindi', 70]];\n\nsubjectmarks.sort(subject_marks);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpr9eza87u.js:15:10)\n    at Object.<anonymous> (/tmp/tmpr9eza87u.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subject_marks = [['English', 100], ['Science', 90], ['Maths', 95]];\nsubject_marks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpdoktv073.js:6\nsubject_marks.sort(subject_marks);\n              ^\n\nTypeError: The comparison function must be either a function or undefined\n    at Array.sort (<anonymous>)\n    at Object.<anonymous> (/tmp/tmpdoktv073.js:6:15)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var marks = [];\n    for(var i = 0; i < subjectmarks.length; i++){\n        marks.push(subjectmarks[i][1]);\n    }\n    marks.sort();\n    var sorted_marks = [];\n    for(var j = 0; j < marks.length; j++){\n        for(var k = 0; k < subjectmarks.length; k++){\n            if(marks[j] == subjectmarks[k][1]){\n                sorted_marks.push(subjectmarks[k]);\n                subjectmarks.splice(k,1);\n            }\n        }\n    }\n    return sorted_marks;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpdi_2gkfo.js:12:10)\n    at Object.<anonymous> (/tmp/tmpdi_2gkfo.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English',100],['Maths',90],['Science',80]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp9ee9kgcl.js:12:10)\n    at Object.<anonymous> (/tmp/tmp9ee9kgcl.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['History', 200]];\nsubjectmarks.sort(function(a, b){\n    return subject_marks(a) - subject_marks(b);\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpo9b3ekta.js:14:10)\n    at Object.<anonymous> (/tmp/tmpo9b3ekta.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  var sorted = subjectmarks.sort(function(a,b){\n    return a[1] - b[1];\n  });\n  return sorted;\n}\nvar subjectmarks = [['English', 50], ['Maths', 100], ['Science', 20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 90], ['Science', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplmnfq3m7.js:12:10)\n    at Object.<anonymous> (/tmp/tmplmnfq3m7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = [];\n    for(var i = 0; i < subjectmarks.length; i++){\n        subject_marks.push(subjectmarks[i][1]);\n    }\n    return subject_marks;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  88,\n  90,\n  97,\n  82\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpj2xoi50h.js:15:10)\n    at Object.<anonymous> (/tmp/tmpj2xoi50h.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 88, 90, 97, 82 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 100], ['Hindi', 60]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpt7a04fv5.js:12:10)\n    at Object.<anonymous> (/tmp/tmpt7a04fv5.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmper6j8iyc.js:12:10)\n    at Object.<anonymous> (/tmp/tmper6j8iyc.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Maths', 200], ['Science', 300]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpyg259cv0.js:12:10)\n    at Object.<anonymous> (/tmp/tmpyg259cv0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Math', 90], ['Science', 95]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpw3mbjgak.js:12:10)\n    at Object.<anonymous> (/tmp/tmpw3mbjgak.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 200], ['English', 100], ['Math', 300]];\n    var sort_subjectmarks = subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return sort_subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'English',\n    100\n  ],\n  [\n    'English',\n    100\n  ],\n  [\n    'Math',\n    200\n  ],\n  [\n    'English',\n    200\n  ],\n  [\n    'Math',\n    200\n  ],\n  [\n    'Math',\n    300\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpt53zz4wc.js:14:10)\n    at Object.<anonymous> (/tmp/tmpt53zz4wc.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'English', 100 ],\n    [ 'English', 100 ],\n    [ 'Math', 200 ],\n    [ 'English', 200 ],\n    [ 'Math', 200 ],\n    [ 'Math', 300 ]\n  ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 70]];\nvar sortedmarks = subjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplz9ixols.js:12:10)\n    at Object.<anonymous> (/tmp/tmplz9ixols.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 100], ['Math', 50], ['Science', 75]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Math', 90], ['Science', 70]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpj7zmstzm.js:12:10)\n    at Object.<anonymous> (/tmp/tmpj7zmstzm.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar marks = [['English', 50], ['Maths', 100], ['Science', 20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80], ['Hindi', 70]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp1hzsqq6y.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1hzsqq6y.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 90], ['Science', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplmnfq3m7.js:12:10)\n    at Object.<anonymous> (/tmp/tmplmnfq3m7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\n\nvar subjectmarks = [['English', 50], ['Math', 100], ['English', 75], ['Science', 75]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar sorted_marks = subject_marks.sort(function(a,b){\n    return a[1] - b[1];\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmpeb841ysv.js:5\nvar sorted_marks = subject_marks.sort(function(a,b){\n                                 ^\n\nTypeError: subject_marks.sort is not a function\n    at Object.<anonymous> (/tmp/tmpeb841ysv.js:5:34)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 80], ['Hindi', 70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English',100],['Maths',200],['Science',300]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpvd5lps4m.js:12:10)\n    at Object.<anonymous> (/tmp/tmpvd5lps4m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subject_marks = [['English', 100], ['Science', 90], ['Maths', 80], ['Social', 70]];\nsubject_marks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp0gyziner.js:6\nsubject_marks.sort(subject_marks);\n              ^\n\nTypeError: The comparison function must be either a function or undefined\n    at Array.sort (<anonymous>)\n    at Object.<anonymous> (/tmp/tmp0gyziner.js:6:15)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['maths',50],['english',60],['science',70],['physics',80],['chemistry',90]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp6nn38ycn.js:12:10)\n    at Object.<anonymous> (/tmp/tmp6nn38ycn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nsubjectmarks.sort(function(a, b){\n    return subject_marks(a) - subject_marks(b);\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmprfwqdaru.js:14:10)\n    at Object.<anonymous> (/tmp/tmprfwqdaru.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English',100],['Maths',90],['Science',80]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  var subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 200], ['English', 100], ['Math', 300]];\n  var sorted = subjectmarks.sort(function(a, b) {\n    return a[1] - b[1];\n  });\n  console.log(sorted);\n}\nsubject_marks();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "[\n  [ 'English', 100 ],\n  [ 'English', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Math', 200 ],\n  [ 'Math', 300 ]\n]\n[\n  [ 'English', 100 ],\n  [ 'English', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Math', 200 ],\n  [ 'Math', 300 ]\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp7vo8ciac.js:16:10)\n    at Object.<anonymous> (/tmp/tmp7vo8ciac.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nvar subjectmarks = [['English', 50], ['Maths', 100], ['Science', 20]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpdi_2gkfo.js:12:10)\n    at Object.<anonymous> (/tmp/tmpdi_2gkfo.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a, b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\n\nvar subjectmarks = [['English', 80], ['Math', 90], ['Science', 100]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 77], ['English', 82], ['Math', 60], ['Hindi', 65]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpq5qz49_a.js:12:10)\n    at Object.<anonymous> (/tmp/tmpq5qz49_a.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 90], ['Science', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmplmnfq3m7.js:12:10)\n    at Object.<anonymous> (/tmp/tmplmnfq3m7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subjectmarks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 200], ['History', 100], ['History', 500]];\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    console.log(sorted);\n}\nsubject_marks();\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "[\n  [ 'English', 100 ],\n  [ 'History', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Math', 200 ],\n  [ 'History', 500 ]\n]\n[\n  [ 'English', 100 ],\n  [ 'History', 100 ],\n  [ 'Math', 200 ],\n  [ 'English', 200 ],\n  [ 'Math', 200 ],\n  [ 'History', 500 ]\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpizj7oy9f.js:16:10)\n    at Object.<anonymous> (/tmp/tmpizj7oy9f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Maths', 90], ['Science', 95]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmprbwz0jan.js:12:10)\n    at Object.<anonymous> (/tmp/tmprbwz0jan.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subject_marks_array = [['English', 100], ['Science', 90], ['Maths', 95]];\nsubject_marks_array.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpb1ce3d0k.js:12:10)\n    at Object.<anonymous> (/tmp/tmpb1ce3d0k.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(function(a,b){\n    return subject_marks(a)-subject_marks(b);\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp_4mxni2l.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_4mxni2l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nvar subjectmarks = [['English',80],['Maths',90],['Science',70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Maths', 200], ['Science', 300]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpyg259cv0.js:12:10)\n    at Object.<anonymous> (/tmp/tmpyg259cv0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  return subjectmarks[1];\n}\n\nvar marks = [['English', 100], ['Science', 20], ['Maths', 50], ['Hindi', 60]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp5j9arf6l.js:13:10)\n    at Object.<anonymous> (/tmp/tmp5j9arf6l.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English',100],['Maths',200],['Science',300]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpjm2cvq1n.js:12:10)\n    at Object.<anonymous> (/tmp/tmpjm2cvq1n.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\n\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 89]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English',100],['Maths',200],['Science',300]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpvd5lps4m.js:12:10)\n    at Object.<anonymous> (/tmp/tmpvd5lps4m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510444,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Maths', 90], ['Science', 70]];\nmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp5sa1ntdk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp5sa1ntdk.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Science', 90], ['Maths', 100]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpe92dgmi0.js:12:10)\n    at Object.<anonymous> (/tmp/tmpe92dgmi0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpo1rj7tbp.js:11:10)\n    at Object.<anonymous> (/tmp/tmpo1rj7tbp.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nvar subjectmarks = [['English', 80], ['Maths', 90], ['Science', 70]];\nsubjectmarks.sort(subject_marks);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmp_utlrq74.js:12:10)\n    at Object.<anonymous> (/tmp/tmp_utlrq74.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nvar subjectmarks = [['English', 80], ['Math', 90], ['Science', 70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return marks;\n}\nvar marks = [['English', 100], ['Science', 90], ['Maths', 80], ['Hindi', 70]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n  subjectmarks.sort(function(a,b){\n    return a[1] - b[1];\n  });\n  return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subjectmarks;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 95], ['Social', 85]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subject_marks = [['maths',50],['physics',70],['chemistry',80],['biology',90]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1666123806,
      "stdout": "",
      "stderr": "/tmp/tmp_nfbklyx.js:14\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n                   ^\n\nTypeError: candidate is not a function\n    at test (/tmp/tmp_nfbklyx.js:14:20)\n    at Object.<anonymous> (/tmp/tmp_nfbklyx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpulx4f1py.js:10:10)\n    at Object.<anonymous> (/tmp/tmpulx4f1py.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    return subjectmarks[1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Science',\n  90\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'Social sciences',\n    82\n  ],\n  [\n    'English',\n    88\n  ],\n  [\n    'Science',\n    90\n  ],\n  [\n    'Maths',\n    97\n  ]\n]\n    at test (/tmp/tmpbmrhpevs.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbmrhpevs.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Science', 90 ],\n  expected: [\n    [ 'Social sciences', 82 ],\n    [ 'English', 88 ],\n    [ 'Science', 90 ],\n    [ 'Maths', 97 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
      "timestamp": 1665510445,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
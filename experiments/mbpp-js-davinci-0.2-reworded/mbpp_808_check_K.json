{
  "name": "mbpp_808_check_K",
  "language": "js",
  "prompt": "//Write a function to check if the given arrays contain the k or not.\nfunction check_K(test_tup, K){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_808_check_K.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_K;\n  assert.deepEqual(candidate([10, 4, 5, 6, 8], 6),true);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], 7),false);\n  assert.deepEqual(candidate([7, 8, 9, 44, 11, 12], 11),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var flag = false;\n    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var flag = false;\n    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\nvar test_tup = [1,2,3,4,5];\nvar K = 6;",
    "    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            return true;\n        }\n    }\n    return false;\n}",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n        }\n    }\n    return flag;\n}\n",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    if(flag == true){\n        console.log(\"K is present in the given array\");\n    }\n    else{\n        console.log(\"K is not present in the given array\");\n    }\n}\ncheck_K(test_tup, K);\n",
    "    var res = [];\n    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i][0] == K){\n            res.push(test_tup[i]);\n        }\n    }\n    return res;\n}",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n\nvar test_tup = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar K = 9;",
    "    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            return true;\n        }\n    }\n    return false;\n}",
    "    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    return test_tup.includes(K);\n}\n",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var flag = false;\n    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i] == K){\n            return true;\n        }\n    }\n    return false;\n}\n",
    "    var flag = false;\n    for(var i=0; i<test_tup.length; i++){\n        if(test_tup[i] == K){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\n"
  ]
}
{
  "name": "mbpp_238_number_of_substrings",
  "language": "js",
  "prompt": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_238_number_of_substrings.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var i, j, count = 0;\n    for(i=0; i<str.length; i++){\n        for(j=i+1; j<=str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            if(str.substring(i,j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++){\n        for (var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if (sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n        for (var j = i + 1; j < str.length + 1; j++) {\n            if (str.slice(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j <= n; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++){\n        for (var j = i + 1; j <= str.length; j++){\n            if (str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            if(str.substring(i,j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j < str.length + 1; j++){\n            if(str.slice(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n        for (var j = i + 1; j < str.length + 1; j++) {\n            if (str.substring(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j <= n; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = 1; j <= str.length - i; j++){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j < str.length + 1; j++){\n            if(str.slice(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            result += 1;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j <= n; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i=0; i<str.length; i++){\n        for (var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if (sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n        for (var j = i + 1; j <= str.length; j++) {\n            var sub_str = str.substring(i, j);\n            if (sub_str.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.split(\" \").length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjvydf810.js:10:10)\n    at Object.<anonymous> (/tmp/tmpjvydf810.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var m = str.length;\n    return m * (m + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i=0; i<str.length; i++){\n        for(var j=i+1; j<=str.length; j++){\n            if(str.substring(i,j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n * (n + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for (var i = 0; i < str.length; i++) {\n        for (var j = i + 1; j <= str.length; j++) {\n            if (str.substring(i, j)) {\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i=0;i<str.length;i++){\n        for(var j=i+1;j<=str.length;j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str.length>0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i+1; j <= str.length; j++){\n            if(str.substring(i,j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    return n*(n+1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            var sub_str = str.substring(i, j);\n            if(sub_str.length > 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n        for (var j = i + 1; j < str.length + 1; j++) {\n            if (str.slice(i, j)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n  var count = 0;\n  for(var i = 0; i < str.length; i++){\n    for(var j = i + 1; j <= str.length; j++){\n      if(str.substring(i, j)){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var n = str.length;\n    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j <= n; j++){\n            var sub_str = str.substring(i,j);\n            if(sub_str != ''){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var result = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                result++;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.split(\" \").length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjvydf810.js:10:10)\n    at Object.<anonymous> (/tmp/tmpjvydf810.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    return str.length * (str.length + 1) / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of non-empty substrings of a given string.\nfunction number_of_substrings(str){\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        for(var j = i + 1; j <= str.length; j++){\n            if(str.substring(i, j)){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_of_substrings;\n  assert.deepEqual(candidate(\"abc\"),6);\n  assert.deepEqual(candidate(\"abcd\"),10);\n  assert.deepEqual(candidate(\"abcde\"),15);\n}\n\ntest();",
      "timestamp": 1665510056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_738_geometric_sum",
  "language": "js",
  "prompt": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpqsiwr9_t.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqsiwr9_t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return (1/Math.pow(2,n)) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return (1/Math.pow(2,n)) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpablayb8j.js:13:10)\n    at Object.<anonymous> (/tmp/tmpablayb8j.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpablayb8j.js:13:10)\n    at Object.<anonymous> (/tmp/tmpablayb8j.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmphmwjdh1t.js:14:10)\n    at Object.<anonymous> (/tmp/tmphmwjdh1t.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1+n*geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpvzspuaf5.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvzspuaf5.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/Math.pow(2, n)) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpuw2njdxm.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuw2njdxm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpbfwabpqm.js:13:10)\n    at Object.<anonymous> (/tmp/tmpbfwabpqm.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/2**n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpkatfspcz.js:14:10)\n    at Object.<anonymous> (/tmp/tmpkatfspcz.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpy613wd65.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy613wd65.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpqsiwr9_t.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqsiwr9_t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpqsiwr9_t.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqsiwr9_t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1 + (1/Math.pow(2,n)) + geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpoi31l47t.js:15:10)\n    at Object.<anonymous> (/tmp/tmpoi31l47t.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpilevov9g.js:14:10)\n    at Object.<anonymous> (/tmp/tmpilevov9g.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return (1/Math.pow(2,n))+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpqsiwr9_t.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqsiwr9_t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return (1/Math.pow(2,n)) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/(Math.pow(2,n))+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if (n == 0){\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return 1 + (1/Math.pow(2,n)) + geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpdr03_44k.js:15:10)\n    at Object.<anonymous> (/tmp/tmpdr03_44k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/2**n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3m9lygu9.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3m9lygu9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpqsiwr9_t.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqsiwr9_t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpbfwabpqm.js:13:10)\n    at Object.<anonymous> (/tmp/tmpbfwabpqm.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n===0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==1){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpqsiwr9_t.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqsiwr9_t.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp65o0l8fa.js:13:10)\n    at Object.<anonymous> (/tmp/tmp65o0l8fa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1+n*geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3e7gy2p_.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3e7gy2p_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if (n == 0){\n        return 1;\n    }\n    return geometric_sum(n-1) + 1/Math.pow(2, n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if (n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/Math.pow(2, n)) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpuw2njdxm.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuw2njdxm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp70oe_pmw.js:14:10)\n    at Object.<anonymous> (/tmp/tmp70oe_pmw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return (1/Math.pow(2,n))+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if (n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return 1 + n * geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp28tf0og7.js:15:10)\n    at Object.<anonymous> (/tmp/tmp28tf0og7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/2**n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3m9lygu9.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3m9lygu9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmphmwjdh1t.js:14:10)\n    at Object.<anonymous> (/tmp/tmphmwjdh1t.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1+n*geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3e7gy2p_.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3e7gy2p_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp65o0l8fa.js:13:10)\n    at Object.<anonymous> (/tmp/tmp65o0l8fa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp6jcxm1c9.js:13:10)\n    at Object.<anonymous> (/tmp/tmp6jcxm1c9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1+n*geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3e7gy2p_.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3e7gy2p_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return (1/Math.pow(2,n))+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return (1/Math.pow(2,n)) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp0tryhcqa.js:13:10)\n    at Object.<anonymous> (/tmp/tmp0tryhcqa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1+n*geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3e7gy2p_.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3e7gy2p_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return 1 + (1/2**n) + geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpt1bo2x4k.js:15:10)\n    at Object.<anonymous> (/tmp/tmpt1bo2x4k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n) + geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return 1 / Math.pow(2,n) + geometric_sum(n-1);\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return (1/Math.pow(2,n)) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return 1 + (1/Math.pow(2,n)) + geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpdr03_44k.js:15:10)\n    at Object.<anonymous> (/tmp/tmpdr03_44k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/2**n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3m9lygu9.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3m9lygu9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpilevov9g.js:14:10)\n    at Object.<anonymous> (/tmp/tmpilevov9g.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/2**n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpkatfspcz.js:14:10)\n    at Object.<anonymous> (/tmp/tmpkatfspcz.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1+n*geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp3e7gy2p_.js:13:10)\n    at Object.<anonymous> (/tmp/tmp3e7gy2p_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n === 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/Math.pow(2, n)) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpuw2njdxm.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuw2njdxm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8660\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpcg47wv1g.js:13:10)\n    at Object.<anonymous> (/tmp/tmpcg47wv1g.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8660,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0) return 1;\n    return 1 + n * geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp9a03piub.js:12:10)\n    at Object.<anonymous> (/tmp/tmp9a03piub.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpphuxx9qd.js:14:10)\n    at Object.<anonymous> (/tmp/tmpphuxx9qd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return geometric_sum(n-1)+1/Math.pow(2,n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpbfwabpqm.js:13:10)\n    at Object.<anonymous> (/tmp/tmpbfwabpqm.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + (1/2) * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0) return 1;\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpb9jquzt_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpb9jquzt_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n)+geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n) + geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return 1/Math.pow(2,n) + geometric_sum(n-1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n\tif(n == 0){\n\t\treturn 1;\n\t}\n\treturn 1 + (1/2**n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpgi673r1j.js:14:10)\n    at Object.<anonymous> (/tmp/tmpgi673r1j.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 1){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpinrkouzm.js:13:10)\n    at Object.<anonymous> (/tmp/tmpinrkouzm.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if (n == 0){\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n == 0){\n        return 1;\n    }\n    return 1/Math.pow(2, n) + geometric_sum(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/jsthon-exercises/data-structures-and-algorithms/jsthon-recursion-exercise-9.php\nfunction geometric_sum(n){\n    if(n==0){\n        return 1;\n    }\n    return 1/Math.pow(2,n)+geometric_sum(n-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
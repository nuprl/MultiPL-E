{
  "name": "mbpp_569_sort_sublists",
  "language": "js",
  "prompt": "//Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists(list1){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_sublists;\n  assert.deepEqual(candidate([[\"green\", \"orange\"], [\"black\", \"white\"], [\"white\", \"black\", \"orange\"]]),[[\"green\", \"orange\"], [\"black\", \"white\"], [\"black\", \"orange\", \"white\"]]);\n  assert.deepEqual(candidate([[\"green\", \"orange\"], [\"black\"], [\"green\", \"orange\"], [\"white\"]]),[[\"green\", \"orange\"], [\"black\"], [\"green\", \"orange\"], [\"white\"]]);\n  assert.deepEqual(candidate([[\"a\", \"b\"], [\"d\", \"c\"], [\"g\", \"h\"], [\"f\", \"e\"]]),[[\"a\", \"b\"], [\"c\", \"d\"], [\"g\", \"h\"], [\"e\", \"f\"]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i].sort());\n    }\n    return list2;\n}\n",
    "    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i].sort());\n    }\n    return list2;\n}\n",
    "    for(var i=0;i<list1.length;i++){\n        list1[i].sort();\n    }\n    return list1;\n}",
    "    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i].sort());\n    }\n    return new_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i].sort());\n    }\n    return new_list;\n}\n",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i].sort());\n    }\n    return list2;\n}\n",
    "    for(var i=0;i<list1.length;i++){\n        list1[i].sort();\n    }\n    return list1;\n}",
    "    for(var i = 0; i < list1.length; i++){\n        list1[i].sort();\n    }\n    return list1;\n}",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i].sort());\n    }\n    return result;\n}\n",
    "    for(var i=0; i<list1.length; i++){\n        list1[i].sort();\n    }\n    return list1;\n}\n",
    "    var list = list1.slice();\n    for(var i = 0; i < list.length; i++){\n        list[i].sort();\n    }\n    return list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i].sort());\n    }\n    return result;\n}\n",
    "    for(var i=0;i<list1.length;i++){\n        list1[i].sort();\n    }\n    return list1;\n}\n",
    "    for(var i=0;i<list1.length;i++){\n        list1[i].sort();\n    }\n    return list1;\n}\n",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i].sort());\n    }\n    return list2;\n}\n",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i].sort());\n    }\n    return list2;\n}\n",
    "    for(var i=0;i<list1.length;i++){\n        list1[i].sort();\n    }\n    return list1;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i].sort());\n    }\n    return new_list;\n}\n",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i].sort());\n    }\n    return list2;\n}",
    "\tvar list2 = [];\n\tfor (var i = 0; i < list1.length; i++){\n\t\tlist2.push(list1[i].sort());\n\t}\n\treturn list2;\n}\n"
  ]
}
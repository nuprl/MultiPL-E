{
  "name": "mbpp_572_two_unique_nums",
  "language": "js",
  "prompt": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "/tmp/tmpzy3pz30b.js:12\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var count = 0;\n    var unique = [];\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) == -1){\n            unique.push(nums[i]);\n            unique_nums.push(nums[i]);\n            count++;\n        }\n        if(count == 2){\n            break;\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp72pvdngm.js:23:10)\n    at Object.<anonymous> (/tmp/tmp72pvdngm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpxkcle7v2.js:17:10)\n    at Object.<anonymous> (/tmp/tmpxkcle7v2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var uniq_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(uniq_nums.indexOf(nums[i]) === -1){\n            uniq_nums.push(nums[i]);\n        }\n    }\n    return uniq_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpcjs_lkl5.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcjs_lkl5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n  var unique_nums = [];\n  for(var i = 0; i < nums.length; i++){\n    if(unique_nums.indexOf(nums[i]) === -1){\n      unique_nums.push(nums[i]);\n    }\n  }\n  return unique_nums;\n}\n\nvar nums = [1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpfqd8z7gi.js:18:10)\n    at Object.<anonymous> (/tmp/tmpfqd8z7gi.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let nums_set = new Set(nums);\n    let unique_nums = Array.from(nums_set);\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpp0fp86ko.js:12:10)\n    at Object.<anonymous> (/tmp/tmpp0fp86ko.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(!unique_nums.includes(nums[i])){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpq65tq8e1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpq65tq8e1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpzty2ara4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpzty2ara4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp4f47ilxe.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4f47ilxe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpcqj9wt6g.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcqj9wt6g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpzty2ara4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpzty2ara4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpe4gu_s1j.js:17:10)\n    at Object.<anonymous> (/tmp/tmpe4gu_s1j.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var new_arr = [];\n    for(var i = 0; i < nums.length; i++){\n        if(new_arr.indexOf(nums[i]) == -1){\n            new_arr.push(nums[i]);\n        }\n    }\n    return new_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpat76a7x6.js:16:10)\n    at Object.<anonymous> (/tmp/tmpat76a7x6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpzty2ara4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpzty2ara4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var uniq = [];\n    for(var i = 0; i < nums.length; i++){\n        if(uniq.indexOf(nums[i]) === -1){\n            uniq.push(nums[i]);\n        }\n    }\n    return uniq;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp547pr38e.js:16:10)\n    at Object.<anonymous> (/tmp/tmp547pr38e.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpxkcle7v2.js:17:10)\n    at Object.<anonymous> (/tmp/tmpxkcle7v2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) == -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmptx5shm0n.js:16:10)\n    at Object.<anonymous> (/tmp/tmptx5shm0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for (let num of nums){\n        if(!unique_nums.includes(num)){\n            unique_nums.push(num);\n        }\n    }\n    return unique_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpfe72yb6p.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfe72yb6p.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp4f47ilxe.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4f47ilxe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpcqj9wt6g.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcqj9wt6g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for (var i = 0; i < nums.length; i++){\n        if (unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpxim8eu32.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxim8eu32.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpzty2ara4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpzty2ara4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n        if(arr.indexOf(nums[i]) === -1){\n            arr.push(nums[i]);\n        }\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp0wtuwegk.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0wtuwegk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for (var i = 0; i < nums.length; i++){\n        if (unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpxim8eu32.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxim8eu32.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpcqj9wt6g.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcqj9wt6g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyjhrh85v.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyjhrh85v.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpzty2ara4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpzty2ara4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique = [];\n    for(let i = 0; i < nums.length; i++){\n        if(!unique.includes(nums[i])){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp_aqgg0e7.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_aqgg0e7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpzty2ara4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpzty2ara4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var new_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(new_nums.indexOf(nums[i]) == -1){\n            new_nums.push(nums[i]);\n        }\n    }\n    return new_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpfcixjojx.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfcixjojx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpcqj9wt6g.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcqj9wt6g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        var num = nums[i];\n        if(unique_nums.indexOf(num) == -1){\n            unique_nums.push(num);\n        }\n    }\n    return unique_nums;\n}\n\nvar nums = [1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp32usqmu7.js:19:10)\n    at Object.<anonymous> (/tmp/tmp32usqmu7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i])\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyp4nbl8o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyp4nbl8o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for (var i = 0; i < nums.length; i++){\n        if (unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpxim8eu32.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxim8eu32.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for (var i = 0; i < nums.length; i++){\n        if (unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpbz1sh_rp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpbz1sh_rp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpcqj9wt6g.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcqj9wt6g.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpyz0wfur3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpyz0wfur3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n  var unique_nums = [];\n  for(var i = 0; i < nums.length; i++){\n    if(unique_nums.indexOf(nums[i]) == -1){\n      unique_nums.push(nums[i]);\n    }\n  }\n  return unique_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpsm97w6kw.js:17:10)\n    at Object.<anonymous> (/tmp/tmpsm97w6kw.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "/tmp/tmpnev4aqn1.js:12\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpw9a2tzgk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw9a2tzgk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) == -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmptx5shm0n.js:16:10)\n    at Object.<anonymous> (/tmp/tmptx5shm0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmp96wwptvq.js:17:10)\n    at Object.<anonymous> (/tmp/tmp96wwptvq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for (var i = 0; i < nums.length; i++){\n        if (unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpxim8eu32.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxim8eu32.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpigt52i8p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpigt52i8p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
      "timestamp": 1665517133,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n    at test (/tmp/tmpwq8tccxp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwq8tccxp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
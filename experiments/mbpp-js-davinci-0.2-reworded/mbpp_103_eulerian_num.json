{
  "name": "mbpp_103_eulerian_num",
  "language": "js",
  "prompt": "//Write a function to find the Eulerian number a(n, m).\nfunction eulerian_num(n, m){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = eulerian_num;\n  assert.deepEqual(candidate(3, 1),4);\n  assert.deepEqual(candidate(4, 1),11);\n  assert.deepEqual(candidate(5, 3),26);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if (n == 0 || m == 0) return 1;\n    if (n == 1 || m == 1) return n;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }\n            else{\n                arr[i][j] = arr[i - 1][j - 1] + (i * arr[i - 1][j]);\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(m == 0 || n == m){\n        return 1;\n    }\n    return (m + 1) * eulerian_num(n, m - 1) + (n - m + 1) * eulerian_num(n, m);\n}\n",
    "    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr[i] = [];\n        for(let j = 0; j <= m; j++){\n            if(i == 0 || j == 0 || i == j){\n                arr[i][j] = 1;\n            }\n            else{\n                arr[i][j] = arr[i - 1][j - 1] + (i - 1) * arr[i - 1][j];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    var result = 1;\n    for(var i = 1; i <= m; i++){\n        result *= (n + 1 - i) / i;\n    }\n    return result;\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if (n == 0 || m == 0 || n < m)\n        return 1;\n    if (n == m)\n        return 1 / (m + 1);\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + m) * eulerian_num(n, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar eulerian = [];\n\tfor(var i = 0; i <= n; i++){\n\t\teulerian[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\teulerian[i][j] = 1;\n\t\t\t}else{\n\t\t\t\teulerian[i][j] = eulerian[i-1][j-1] + (i-1)*eulerian[i-1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn eulerian[n][m];\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1) return m + 1;\n\tif(m == 1) return n + 1;\n\treturn (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "\tif(n == 0 && m == 0) return 1;\n\tif(n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == m || m == 0) return 1;\n\treturn eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0) arr[i][j] = 1;\n            else arr[i][j] = arr[i-1][j-1] + (i+1)*arr[i][j-1];\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "  if(n == 0 || m == 0) return 1;\n  if(n == 1) return m + 1;\n  if(m == 1) return n + 1;\n  if(n == m) return 1;\n  return eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    if(n < m) return 0;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "  var a = [];\n  for(var i = 0; i <= n; i++){\n    a[i] = [];\n    for(var j = 0; j <= m; j++){\n      if(i == 0 || j == 0){\n        a[i][j] = 1;\n      }else{\n        a[i][j] = a[i-1][j-1] + (i+1)*a[i][j-1];\n      }\n    }\n  }\n  return a[n][m];\n}\n",
    "    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr[i] = [];\n        for(let j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i-1][j-1] + (i * arr[i-1][j]);\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "\tvar result = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tresult *= (n - i + 1) / i;\n\t}\n\treturn result;\n}\n",
    "    if(n == 0 || m == 0 || n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + m) * eulerian_num(n, m - 1) / m;\n}\n",
    "\tif(n == m || m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 && j == 0){\n                eulerian[i][j] = 1;\n            }else if(i == 0){\n                eulerian[i][j] = 0;\n            }else if(j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = (eulerian[i - 1][j - 1] + (i - 1) * eulerian[i - 1][j]) % 1000000007;\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    var a = [];\n    for(var i = 0; i < n; i++){\n        a[i] = [];\n        for(var j = 0; j < m; j++){\n            if(i == 0 || j == 0){\n                a[i][j] = 1;\n            }\n            else{\n                a[i][j] = a[i - 1][j - 1] + (i + 1) * a[i - 1][j];\n            }\n        }\n    }\n    return a[n - 1][m - 1];\n}\n",
    "    if(n === 0 && m === 0) return 1;\n    if(n === 0 || m === 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var a = [];\n    for (var i = 0; i <= n; i++) {\n        a[i] = [];\n        for (var j = 0; j <= m; j++) {\n            if (j == 0 || j == i) {\n                a[i][j] = 1;\n            } else {\n                a[i][j] = a[i - 1][j - 1] + (i - j) * a[i - 1][j];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(m == 0 || m == n){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(m > n){\n        return 0;\n    }\n    if(m == n){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n-m+1) * eulerian_num(n, m-1) + (m+1) * eulerian_num(n-1, m);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m){\n        return 1;\n    }\n    if(m == 1){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0 || j == i){\n                eulerian[i][j] = 1;\n            }else if(j == 1){\n                eulerian[i][j] = i;\n            }else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + j * eulerian[i - 1][j];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n == m) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 && j == 0){\n                eulerian[i][j] = 1;\n            }else if(i == 0){\n                eulerian[i][j] = 0;\n            }else if(j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = (eulerian[i - 1][j - 1] + (j + 1) * eulerian[i - 1][j]) % 1000000007;\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tvar result = 0;\n\tfor(var i = 0; i <= m; i++){\n\t\tresult += Math.pow(-1, i) * binomial(m, i) * binomial(n + m - i, m);\n\t}\n\treturn result;\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    if(m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }\n            else if(i == j){\n                arr[i][j] = 1;\n            }\n            else if(i < j){\n                arr[i][j] = 0;\n            }\n            else{\n                arr[i][j] = arr[i-1][j-1] + j * arr[i-1][j];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    var eulerian_num = 0;\n    if(n == m){\n        eulerian_num = 1;\n    }\n    else if(n > m){\n        eulerian_num = (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m + 1);\n    }\n    return eulerian_num;\n}\n",
    "    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr[i] = [];\n        for(let j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i-1][j] + (i * arr[i-1][j-1]);\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (m + 1) * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar a = [];\n\tfor(var i = 0; i <= n; i++){\n\t\ta[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\ta[i][j] = 1;\n\t\t\t}else{\n\t\t\t\ta[i][j] = a[i - 1][j - 1] + (i - 1) * a[i - 1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn a[n][m];\n}\n",
    "\tvar result = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tresult *= (n - i + 1) / i;\n\t}\n\treturn result;\n}\n",
    "    if(n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "\tvar a = [];\n\tfor(var i = 0; i <= n; i++){\n\t\ta[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\ta[i][j] = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn a[n][m];\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    var eulerian_num = 1;\n    for(var i = 1; i <= m; i++){\n        eulerian_num *= (n - i + 1) / i;\n    }\n    return eulerian_num;\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n-1, m-1) + (n-1) * eulerian_num(n-1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == 0 || m == 0 || n < m) return 0;\n\tif(n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    let result = 1;\n    for(let i = 1; i <= m; i++){\n        result *= (n - i + 1) / i;\n    }\n    return result;\n}\n",
    "    var a = [];\n    for(var i = 0; i <= n; i++){\n        a[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                a[i][j] = 1;\n            }else{\n                a[i][j] = a[i-1][j-1] + j * a[i-1][j];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    var a = [];\n    for (var i = 0; i <= n; i++) {\n        a[i] = [];\n        for (var j = 0; j <= m; j++) {\n            if (j === 0) {\n                a[i][j] = 1;\n            } else if (i === 0) {\n                a[i][j] = 0;\n            } else {\n                a[i][j] = (j * a[i - 1][j] + a[i - 1][j - 1]) % 1000000;\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == m) return 1;\n\tif(m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian_num = 1;\n    for(var i = 1; i <= m; i++){\n        eulerian_num *= (n - i + 1) / i;\n    }\n    return eulerian_num;\n}\n",
    "\tif(n < m) return 0;\n\tif(n == m) return 1;\n\tif(m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i <= n; i++){\n\t\tarr[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\tarr[i][j] = 1;\n\t\t\t}else{\n\t\t\t\tarr[i][j] = arr[i-1][j-1] + (i+1)*arr[i][j-1];\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[n][m];\n}\n",
    "\tvar result = 0;\n\tfor(var i = 0; i <= m; i++){\n\t\tresult += Math.pow(-1, i) * binomial(m, i) * binomial(n + m - i, n);\n\t}\n\treturn result;\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + m) * eulerian_num(n, m - 1) / m;\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i-1][j-1] + (i * eulerian[i-1][j]);\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n === 0 && m === 0){\n        return 1;\n    }\n    if(n === 0 || m === 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i-1][j-1] + (i+1)*eulerian[i][j-1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tif(n == m || m == 0){\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == m || m == 0){\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == 0) return 1;\n\tif(m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "\tvar result = 0;\n\tif(n == 0 && m == 0){\n\t\treturn 1;\n\t}\n\tif(n == 0 || m == 0){\n\t\treturn 0;\n\t}\n\tif(n == m){\n\t\treturn 1;\n\t}\n\tif(n > m){\n\t\treturn 0;\n\t}\n\tfor(var i = 0; i <= n; i++){\n\t\tresult += Math.pow(-1, i) * comb(n, i) * eulerian_num(n - i, m - 1);\n\t}\n\treturn result;\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian_num = 1;\n    for(var i = n - m + 1; i <= n; i++){\n        eulerian_num *= i;\n    }\n    return eulerian_num;\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr.push([]);\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i].push(1);\n            }\n            else{\n                arr[i].push(arr[i - 1][j] + (j * arr[i - 1][j - 1]));\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (m + 1) * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = eulerian[i-1][j-1] + (i+1)*eulerian[i][j-1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0){\n        return 1;\n    }\n    if(m == 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i <= n; i++){\n\t\tarr[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\tarr[i][j] = 1;\n\t\t\t}else{\n\t\t\t\tarr[i][j] = arr[i][j-1] + (i * arr[i-1][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[n][m];\n}\n",
    "    if(n < 0 || m < 0 || n < m) return 0;\n    if(n == 0 && m == 0) return 1;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == 0){\n\t\treturn 1;\n\t}\n\tif(m == 0){\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian_num = 0;\n    if(n == 0 && m == 0){\n        eulerian_num = 1;\n    }\n    else if(n == 0 || m == 0){\n        eulerian_num = 0;\n    }\n    else{\n        eulerian_num = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n    }\n    return eulerian_num;\n}\n",
    "\tvar result = 0;\n\tfor(var i = 0; i <= m; i++){\n\t\tresult += Math.pow(-1, i) * binomial(m, i) * binomial(n + m - i, n);\n\t}\n\treturn result;\n}\n",
    "\tif(n < 0 || m < 0 || n < m) return 0;\n\tif(n == 0 && m == 0) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + m) * eulerian_num(n - 1, m) + (n + m) * eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    if(n < m) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "\tvar result = 0;\n\tif(n == 0){\n\t\treturn 1;\n\t}\n\telse if(n == 1){\n\t\treturn m;\n\t}\n\telse{\n\t\tfor(var i = 0; i <= m; i++){\n\t\t\tresult += eulerian_num(n - 1, m - i);\n\t\t}\n\t\treturn result;\n\t}\n}\n",
    "    if(n == 0 || m == 0) return 0;\n    if(n == 1 || m == 1) return 1;\n    if(n == m) return 1;\n    return (m - 1) * (eulerian_num(n - 1, m) + eulerian_num(n, m - 1));\n}\n",
    "    let result = 1;\n    for(let i = 1; i <= m; i++){\n        result *= (n - i + 1)/i;\n    }\n    return result;\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    if(n < m) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "  var result = 1;\n  for(var i = 1; i <= m; i++){\n    result *= (n - i + 1) / i;\n  }\n  return result;\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tvar result = 1;\n\tfor(var i = 0; i < m; i++){\n\t\tresult *= (n - i);\n\t}\n\treturn result;\n}\n",
    "\tvar result = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tresult *= (n + 1 - i) / i;\n\t}\n\treturn result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0 || i == j){\n                arr[i][j] = 1;\n            }else if(j > i){\n                arr[i][j] = 0;\n            }else{\n                arr[i][j] = arr[i-1][j-1] + (i+1)*arr[i][j-1];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n-m+1) * eulerian_num(n-1, m-1) + (m+1) * eulerian_num(n-1, m);\n}\n",
    "    if(n < 0 || m < 0 || n < m){\n        return 0;\n    }\n    if(n == 0 && m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || n == m) return 1;\n    if(m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(m == 1 || n == m) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian_num = 1;\n    for(var i = n; i > n - m; i--){\n        eulerian_num *= i;\n    }\n    return eulerian_num;\n}\n",
    "\tif(n == 0 || m == 0 || n == m)\n\t\treturn 1;\n\telse\n\t\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i-1][j-1] + (i+1)*eulerian[i][j-1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == m) return 1;\n    if(n == m + 1) return m + 1;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == m) return 1;\n    if(n < m) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i <= n; i++){\n\t\tarr[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\tarr[i][j] = 1;\n\t\t\t}else{\n\t\t\t\tarr[i][j] = arr[i - 1][j - 1] + (i - 1) * arr[i - 1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn arr[n][m];\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i * eulerian[i - 1][j]);\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    var a = [];\n    for(var i = 0; i <= n; i++){\n        a[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                a[i][j] = 1;\n            }else{\n                a[i][j] = a[i-1][j-1] + j * a[i-1][j];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "  var result = 1;\n  for(var i = 1; i <= m; i++){\n    result *= (n - i + 1) / i;\n  }\n  return result;\n}\n",
    "\tvar eulerian = [];\n\tfor(var i = 0; i <= n; i++){\n\t\teulerian[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\teulerian[i][j] = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\teulerian[i][j] = eulerian[i - 1][j - 1] + (i * eulerian[i - 1][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn eulerian[n][m];\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i - 1][j - 1] + (i - 1) * arr[i - 1][j];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == 1 || m == 1) return 1;\n    if(n == m) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0){\n                eulerian[i][j] = 0;\n            }\n            else if(j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = (eulerian[i-1][j-1] + (i-1)*eulerian[i-1][j]) % 1000000007;\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eul = [];\n    for(var i = 0; i <= n; i++){\n        eul[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(j == 0 || j == i){\n                eul[i][j] = 1;\n            }else if(j == 1){\n                eul[i][j] = i;\n            }else{\n                eul[i][j] = eul[i-1][j-1] + j*eul[i-1][j];\n            }\n        }\n    }\n    return eul[n][m];\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    if(m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar eulerian = [];\n\tfor(var i = 0; i <= n; i++){\n\t\teulerian[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\teulerian[i][j] = 1;\n\t\t\t}else{\n\t\t\t\teulerian[i][j] = eulerian[i-1][j-1] + (i * eulerian[i-1][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn eulerian[n][m];\n}\n",
    "\tif(n == 0 && m == 0) return 1;\n\tif(n == 0 || m == 0) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var a = [];\n    for(var i = 0; i <= n; i++){\n        a[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0)\n                a[i][j] = 1;\n            else\n                a[i][j] = a[i - 1][j - 1] + (i + 1) * a[i][j - 1];\n        }\n    }\n    return a[n][m];\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n-1, m-1) + (n-1)*eulerian_num(n-1, m);\n}\n",
    "    var eulerian_num = 1;\n    for(var i = 1; i <= m; i++){\n        eulerian_num *= (n - i + 1) / i;\n    }\n    return eulerian_num;\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    if(n == 1) return m + 1;\n    if(m == 1) return n + 1;\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == m || m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    var res = 0;\n    if(n == m || m == 0){\n        res = 1;\n    }\n    else{\n        res = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n    }\n    return res;\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tif(n == 0) return 1;\n\tif(m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    if(n == 1){\n        return m + 1;\n    }\n    if(m == 1){\n        return n + 1;\n    }\n    return (n + m) * eulerian_num(n - 1, m) + eulerian_num(n, m - 1);\n}\n",
    "    if(n == 0 || m == 0 || n == m) return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "    let a = [];\n    for(let i = 0; i <= n; i++){\n        a[i] = [];\n        for(let j = 0; j <= m; j++){\n            if(i == 0 && j == 0){\n                a[i][j] = 1;\n            }\n            else if(i == 0 || j == 0){\n                a[i][j] = 0;\n            }\n            else{\n                a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1];\n            }\n        }\n    }\n    return a[n][m];\n}\n",
    "    var eulerian_num = 0;\n    if(n == m){\n        eulerian_num = 1;\n    }\n    else if(n > m){\n        eulerian_num = (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m + 1);\n    }\n    return eulerian_num;\n}\n",
    "    if(n == 0 || m == 0 || n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 && m == 0){\n        return 1;\n    }\n    if(n == 0 || m == 0){\n        return 0;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || m == n){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "\tvar result = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tresult *= (n - i + 1) / i;\n\t}\n\treturn result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }else{\n                arr[i][j] = arr[i-1][j] + j*arr[i-1][j-1];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "\tif(n == 0 && m == 0) return 1;\n\tif(n == 0 || m == 0) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(m == 0 || m == n){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m || m == 0)\n        return 1;\n    return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\n",
    "\tvar eulerian = [];\n\tfor(var i = 0; i <= n; i++){\n\t\teulerian[i] = [];\n\t\tfor(var j = 0; j <= m; j++){\n\t\t\tif(i == 0 || j == 0){\n\t\t\t\teulerian[i][j] = 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\teulerian[i][j] = (i - j + 1) * eulerian[i - 1][j] + j * eulerian[i - 1][j - 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn eulerian[n][m];\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "    if(n == m){\n        return 1;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == m){\n        return 1;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(m == 0){\n        return 0;\n    }\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m){\n        return 0;\n    }\n    if(n == m){\n        return 1;\n    }\n    if(m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    if(n == 0 && m == 0) return 1;\n    if(n == 0 || m == 0) return 0;\n    return (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "\tif(n == 0 || m == 0) return 1;\n\tif(n == 1) return m + 1;\n\tif(m == 1) return n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var result = 0;\n    for(var i = 0; i <= m; i++){\n        result += Math.pow(-1, i) * binomial(m, i) * binomial(n + m - i, n);\n    }\n    return result;\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(m > n) return 0;\n    return (n-m+1)*eulerian_num(n-1, m-1) + (m+1)*eulerian_num(n-1, m);\n}\n",
    "    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr[i] = [];\n        for(let j = 0; j <= m; j++){\n            arr[i][j] = 0;\n        }\n    }\n    for(let i = 0; i <= n; i++){\n        for(let j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i][j] = 1;\n            }\n            else{\n                arr[i][j] = arr[i - 1][j - 1] + (i + 1) * arr[i][j - 1];\n            }\n        }\n    }\n    return arr[n][m];\n}\n",
    "\tvar num = 1;\n\tvar den = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tnum *= n + 1 - i;\n\t\tden *= i;\n\t}\n\treturn num / den;\n}\n",
    "\tif(n == 0 || m == 0 || n < m) return 0;\n\tif(n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    var eulerian = [];\n    for(var i = 0; i <= n; i++){\n        eulerian[i] = [];\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                eulerian[i][j] = 1;\n            }\n            else{\n                eulerian[i][j] = eulerian[i - 1][j - 1] + (i + 1) * eulerian[i][j - 1];\n            }\n        }\n    }\n    return eulerian[n][m];\n}\n",
    "\tvar result = 1;\n\tfor(var i = 1; i <= m; i++){\n\t\tresult *= (n - i + 1) / i;\n\t}\n\treturn result;\n}\n",
    "    if(n == 0 || m == 0 || n < m) return 0;\n    if(n == 1 || m == 1) return 1;\n    return (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\n",
    "    if(n == 0 || m == 0) return 1;\n    if(n == 1 || m == 1) return n;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n == m){\n        return 1;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(m == 0){\n        return 1;\n    }\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\n",
    "    if(n < m) return 0;\n    if(n == m) return 1;\n    if(m == 0) return 1;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\n",
    "    var arr = [];\n    for(var i = 0; i <= n; i++){\n        arr.push([]);\n        for(var j = 0; j <= m; j++){\n            if(i == 0 || j == 0){\n                arr[i].push(1);\n            }\n            else{\n                arr[i].push(arr[i - 1][j - 1] + (i - 1) * arr[i - 1][j]);\n            }\n        }\n    }\n    return arr[n][m];\n}\n"
  ]
}
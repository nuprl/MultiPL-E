{
  "name": "mbpp_753_min_k",
  "language": "js",
  "prompt": "//Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/jsthon-find-minimum-k-records-from-array-array/ - in this case a verbatim cojs of test cases\nfunction min_k(test_list, K){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_k;\n  assert.deepEqual(candidate([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]]);\n  assert.deepEqual(candidate([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]]);\n  assert.deepEqual(candidate([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var min_k = [];\n    var min_k_heap = new Heap(function(a,b){return a.value - b.value});\n    for(var i = 0; i < test_list.length; i++){\n        min_k_heap.push({value: test_list[i], index: i});\n        if(min_k_heap.size() > K){\n            min_k_heap.pop();\n        }\n    }\n    while(min_k_heap.size() > 0){\n        min_k.push(min_k_heap.pop().value);\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort((a,b)=>a-b);\n            if(test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [2, 3, 4, 5, 6, 7, 8, 9, 1];\nvar K = 5;",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_index[0];\n        var max_value = min_k[0];\n        for(var j = 1; j < K; j++){\n            if(min_k[j] > max_value){\n                max_index = min_k_index[j];\n                max_value = min_k[j];\n            }\n        }\n        if(test_list[i] < max_value){\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k);\n            if(test_list[i] < max){\n                var index = min_k.indexOf(max);\n                min_k[index] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort();\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort();\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a, b){return a - b});\n            if(test_list[i] < min_k[K-1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    let min_k_list = [];\n    for(let i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort((a,b) => a - b);\n            if(test_list[i] > min_k_list[0]){\n                min_k_list[0] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort();\n            if(test_list[i] < min_k[K-1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min = test_list[0];\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        for(var j = 0; j < test_list.length; j++){\n            if(test_list[j] < min){\n                min = test_list[j];\n            }\n        }\n        min_list.push(min);\n        test_list.splice(test_list.indexOf(min), 1);\n        min = test_list[0];\n    }\n    return min_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort((a,b) => a-b);\n    return test_list.slice(0,K);\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_k = Math.max.apply(null, min_k);\n        if(test_list[i] < max_k){\n            var max_k_index = min_k_index[min_k.indexOf(max_k)];\n            min_k[min_k.indexOf(max_k)] = test_list[i];\n            min_k_index[min_k.indexOf(max_k)] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k_list);\n            if(test_list[i] < max){\n                min_k_list.splice(min_k_list.indexOf(max), 1);\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_list[K-1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_value = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n        min_k_value.push(test_list[i]);\n    }\n    min_k_value.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_value[K-1]){\n            min_k_value[K-1] = test_list[i];\n            min_k_index[K-1] = i;\n            min_k_value.sort();\n        }\n    }\n    for(var i = 0; i < K; i++){\n        min_k[i] = test_list[min_k_index[i]];\n    }\n    return min_k;\n}\n",
    "    var min_heap = new MinHeap();\n    for(var i = 0; i < test_list.length; i++){\n        if(min_heap.size() < K){\n            min_heap.insert(test_list[i]);\n        }\n        else if(min_heap.getMin() < test_list[i]){\n            min_heap.extractMin();\n            min_heap.insert(test_list[i]);\n        }\n    }\n    return min_heap.getHeap();\n}\n",
    "    let min_k_list = [];\n    let min_k_list_length = 0;\n    for(let i = 0; i < test_list.length; i++){\n        if(min_k_list_length < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_length++;\n        }\n        else{\n            min_k_list.sort();\n            if(test_list[i] < min_k_list[min_k_list_length - 1]){\n                min_k_list.pop();\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max_value = Math.max(...min_k_list);\n            if (test_list[i] < max_value){\n                var max_index = min_k_list.indexOf(max_value);\n                min_k_list[max_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k = [];\n    var min_k_heap = new Heap(function(a,b){\n        return a.value - b.value;\n    });\n    for(var i = 0; i < test_list.length; i++){\n        min_k_heap.push({\n            value: test_list[i],\n            index: i\n        });\n    }\n    for(var i = 0; i < K; i++){\n        min_k.push(min_k_heap.pop().value);\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(i < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            var max_val = Math.max.apply(null, min_k);\n            if (test_list[i] < max_val){\n                min_k.splice(min_k.indexOf(max_val), 1);\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    var min_list_len = 0;\n    var test_list_len = test_list.length;\n    var i = 0;\n    var j = 0;\n    var min_index = 0;\n    var min_value = 0;\n    var temp = 0;\n    var temp_index = 0;\n    var temp_value = 0;\n    var temp_list = [];\n    var temp_list_len = 0;\n    var temp_list_index = 0;\n    var temp_list_value = 0;\n    var temp_list_index_value = 0;\n    var temp_list_index_value_len = 0;\n    var temp_list_index_value_len_index = 0;\n    var temp_list_index_value_len_index_value = 0;\n    var temp_list_index_value_len_index_value_len = 0;\n    var temp_list_index_value_len_index_value_len_index = 0;\n    var temp_list_index_value_len_index_value_len_index_value = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len_index = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len_index_value = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len_index_value_len = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len_index_value_len_index = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len_index_value_len_index_value = 0;\n    var temp_list_index_value_len_index_value_len_index_value_len_index_value_len_index_value_len = 0;\n    var temp_list_index_value_len_index_value",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a, b){return a-b});\n            if (test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_list.length < K){\n            min_list.push(test_list[i]);\n        }else{\n            var max_index = 0;\n            for(var j = 0; j < min_list.length; j++){\n                if(min_list[j] > min_list[max_index]){\n                    max_index = j;\n                }\n            }\n            if(min_list[max_index] > test_list[i]){\n                min_list[max_index] = test_list[i];\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_value = [];\n    var min_k_list_value_index = [];\n    var min_k_list_value_index_temp = [];\n    var min_k_list_value_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp = [];\n    var min_k_list_value_index_temp_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp_index_temp = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp_index = [];\n    var min_k_list_value_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp_index_temp = [];\n    var min_k_list_value_index_temp",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a,b){return a-b});\n            if(test_list[i] > min_k_list[0]){\n                min_k_list[0] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n        min_k_list_index.push(i);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var max_index = min_k_list_index[0];\n        for (var j = 0; j < min_k_list_index.length; j++){\n            if (min_k_list[j] > min_k_list[max_index]){\n                max_index = j;\n            }\n        }\n        if (test_list[i] < min_k_list[max_index]){\n            min_k_list[max_index] = test_list[i];\n            min_k_list_index[max_index] = i;\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_count = 0;\n    var min_k_list_index_max = K - 1;\n    var min_k_list_max = K;\n    var test_list_len = test_list.length;\n    var test_list_len_max = test_list_len - 1;\n    var test_list_len_max_minus_k = test_list_len - K;\n    var test_list_len_max_minus_k_plus_one = test_list_len - K + 1;\n    var test_list_len_max_minus_k_plus_one_minus_one = test_list_len - K + 1 - 1;\n    var test_list_len_max_minus_k_plus_one_minus_one_minus_one = test_list_len - K + 1 - 1 - 1;\n    var test_list_len_max_minus_k_plus_one_minus_one_minus_one_minus_one = test_list_len - K + 1 - 1 - 1 - 1;\n    var test_list_len_max_minus_k_plus_one_minus_one_minus_one_minus_one_minus_one = test_list_len - K + 1 - 1 - 1 - 1 - 1;\n    var test_list_len_max_minus_k_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one = test_list_len - K + 1 - 1 - 1 - 1 - 1 - 1;\n    var test_list_len_max_minus_k_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = test_list_len - K + 1 - 1 - 1 - 1 - 1 - 1 - 1;\n    var test_list_len_max_minus_k_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_value = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n        min_k_value.push(test_list[i]);\n    }\n    min_k_value.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_value[K-1]){\n            min_k[min_k_index[K-1]] = test_list[i];\n            min_k_index[K-1] = i;\n            min_k_value[K-1] = test_list[i];\n            min_k_value.sort();\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max = Math.max(...min_k);\n        if(test_list[i] < max){\n            min_k.splice(min_k.indexOf(max), 1);\n            min_k.push(test_list[i]);\n        }\n    }\n    return min_k;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //output = [1, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //output = [1, 2, 9, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 5\n    //output = [1, 2, 9, 12, 23]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 6\n    //output = [1, 2, 9, 12, 23, 30]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 7\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 8\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 9\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 10\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 11\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 12\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 13\n    //output = [1, 2, 9, 12, 23, 30, 50]\n    //test",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    for(var i = 0; i < test_list_len; i++){\n        if(min_k_list_len < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_len++;\n            min_k_list.sort(function(a,b){return a-b});\n        }else{\n            if(test_list[i] < min_k_list[min_k_list_len-1]){\n                min_k_list[min_k_list_len-1] = test_list[i];\n                min_k_list.sort(function(a,b){return a-b});\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a, b){return a-b});\n            if (test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    let min_k = []\n    let min_k_set = new Set()\n    let min_k_set_size = 0\n    for(let i = 0; i < test_list.length; i++){\n        if(min_k_set_size < K){\n            min_k_set.add(test_list[i])\n            min_k_set_size++\n        }\n        else{\n            let max_val = Math.max(...min_k_set)\n            if(test_list[i] < max_val){\n                min_k_set.delete(max_val)\n                min_k_set.add(test_list[i])\n            }\n        }\n    }\n    return min_k_set\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_count = 0;\n    var min_k_count = 0;\n    var min_k_index_count_max = K;\n    var min_k_count_max = K;\n    var min_k_index_count_min = 0;\n    var min_k_count_min = 0;\n    var min_k_index_count_min_max = K - 1;\n    var min_k_count_min_max = K - 1;\n    var min_k_index_count_min_max_min = K - 2;\n    var min_k_count_min_max_min = K - 2;\n    var min_k_index_count_min_max_min_max = K - 3;\n    var min_k_count_min_max_min_max = K - 3;\n    var min_k_index_count_min_max_min_max_min = K - 4;\n    var min_k_count_min_max_min_max_min = K - 4;\n    var min_k_index_count_min_max_min_max_min_max = K - 5;\n    var min_k_count_min_max_min_max_min_max = K - 5;\n    var min_k_index_count_min_max_min_max_min_max_min = K - 6;\n    var min_k_count_min_max_min_max_min_max_min = K - 6;\n    var min_k_index_count_min_max_min_max_min_max_min_max = K - 7;\n    var min_k_count_min_max_min_max_min_max_min_max = K - 7;\n    var min_k_index_count_min_max_min_max_min_max_min_max_min = K - 8;\n    var min_k_count_min_max_min_max_min_max_min_max_min = K - 8;\n    var min_k_index_count_min_max",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }else{\n            var max = Math.max(...min_k);\n            if(test_list[i] < max){\n                min_k.splice(min_k.indexOf(max), 1);\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_list[K-1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a,b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_list[K-1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k_list);\n            if (test_list[i] < max){\n                min_k_list.splice(min_k_list.indexOf(max), 1, test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_heap = new MinHeap();\n    for (var i = 0; i < test_list.length; i++){\n        min_heap.insert(test_list[i]);\n    }\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(min_heap.extract_min());\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_idx = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_idx.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_idx = min_k_idx[0];\n        for(var j = 1; j < K; j++){\n            if(min_k[j] > min_k[max_idx]){\n                max_idx = j;\n            }\n        }\n        if(test_list[i] < min_k[max_idx]){\n            min_k[max_idx] = test_list[i];\n            min_k_idx[max_idx] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var min_k_list_max_len = K;\n    var test_list_len = test_list.length;\n    for(var i = 0; i < test_list_len; i++){\n        if(min_k_list_len < min_k_list_max_len){\n            min_k_list.push(test_list[i]);\n            min_k_list_len++;\n        }\n        else{\n            var min_k_list_max_index = 0;\n            for(var j = 0; j < min_k_list_len; j++){\n                if(min_k_list[j] > min_k_list[min_k_list_max_index]){\n                    min_k_list_max_index = j;\n                }\n            }\n            if(test_list[i] < min_k_list[min_k_list_max_index]){\n                min_k_list[min_k_list_max_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_list[K - 1]){\n            min_k_list[K - 1] = test_list[i];\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k);\n            if(test_list[i] < max){\n                min_k.splice(min_k.indexOf(max), 1, test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k.pop();\n            min_k.push(test_list[i]);\n            min_k.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_count = 0;\n    var test_list_length = test_list.length;\n    var test_list_index = 0;\n    var test_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_one = K - 1;\n    var min_k_list_index_count_max_minus_two = K - 2;\n    var min_k_list_index_count_max_minus_three = K - 3;\n    var min_k_list_index_count_max_minus_four = K - 4;\n    var min_k_list_index_count_max_minus_five = K - 5;\n    var min_k_list_index_count_max_minus_six = K - 6;\n    var min_k_list_index_count_max_minus_seven = K - 7;\n    var min_k_list_index_count_max_minus_eight = K - 8;\n    var min_k_list_index_count_max_minus_nine = K - 9;\n    var min_k_list_index_count_max_minus_ten = K - 10;\n    var min_k_list_index_count_max_minus_eleven = K - 11;\n    var min_k_list_index_count_max_minus_twelve = K - 12;\n    var min_k_list_index_count_max_minus_thirteen = K - 13;\n    var min_k_list_index_count_max_minus_fourteen = K - 14;\n    var min_k_list_index_count_max_minus_fifteen = K - 15;\n    var min_k_list_index_count_max_minus_sixteen = K - 16;\n    var min_k_list_index_count_max_minus_seventeen = K - 17;\n    var min_k_",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n        min_k_list_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_list_index[0];\n        var max_value = min_k_list[0];\n        for(var j = 1; j < K; j++){\n            if(min_k_list[j] > max_value){\n                max_index = min_k_list_index[j];\n                max_value = min_k_list[j];\n            }\n        }\n        if(test_list[i] < max_value){\n            min_k_list[max_index] = test_list[i];\n            min_k_list_index[max_index] = i;\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_list = [];\n    for(var i=0; i<K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a,b){return a-b});\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i]<min_list[K-1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_list = [];\n    var min_list_len = 0;\n    var test_list_len = test_list.length;\n    for(var i = 0; i < test_list_len; i++){\n        if(min_list_len < K){\n            min_list.push(test_list[i]);\n            min_list_len++;\n            if(min_list_len == K){\n                min_list.sort(function(a, b){return a-b});\n            }\n        }else{\n            if(test_list[i] < min_list[K-1]){\n                min_list[K-1] = test_list[i];\n                min_list.sort(function(a, b){return a-b});\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a - b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_list[K - 1]){\n            min_list[K - 1] = test_list[i];\n            min_list.sort(function(a, b){return a - b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_heap = new MinHeap();\n    for(var i = 0; i < test_list.length; i++){\n        min_heap.add(test_list[i]);\n    }\n    var result = [];\n    for(var i = 0; i < K; i++){\n        result.push(min_heap.remove());\n    }\n    return result;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_count = 0;\n    var min_k_count = 0;\n    var min_k_index_count_max = K;\n    var min_k_count_max = K;\n    var min_k_index_count_max_minus_one = K - 1;\n    var min_k_count_max_minus_one = K - 1;\n    var min_k_index_count_max_minus_two = K - 2;\n    var min_k_count_max_minus_two = K - 2;\n    var min_k_index_count_max_minus_three = K - 3;\n    var min_k_count_max_minus_three = K - 3;\n    var min_k_index_count_max_minus_four = K - 4;\n    var min_k_count_max_minus_four = K - 4;\n    var min_k_index_count_max_minus_five = K - 5;\n    var min_k_count_max_minus_five = K - 5;\n    var min_k_index_count_max_minus_six = K - 6;\n    var min_k_count_max_minus_six = K - 6;\n    var min_k_index_count_max_minus_seven = K - 7;\n    var min_k_count_max_minus_seven = K - 7;\n    var min_k_index_count_max_minus_eight = K - 8;\n    var min_k_count_max_minus_eight = K - 8;\n    var min_k_index_count_max_minus_nine = K - 9;\n    var min_k_count_max_minus_nine = K - 9;\n    var min_k_index_count_max_minus_ten = K - 10;\n    var min_k_count_max_minus_ten = K - 10;\n    var min_k_index_count_max_minus_eleven = K - 11;\n    var min_k_count_max_minus_eleven = K - 11;",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n            min_k_list.sort(function(a, b){return a - b});\n        }\n        else{\n            if(test_list[i] < min_k_list[min_k_list.length - 1]){\n                min_k_list.pop();\n                min_k_list.push(test_list[i]);\n                min_k_list.sort(function(a, b){return a - b});\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    if(test_list.length < K){\n        return test_list;\n    }\n    let min_k_list = [];\n    for(let i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort((a, b) => a - b);\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort((a, b) => a - b);\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_list[K-1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort();\n            if(test_list[i] < min_k[0]){\n                min_k[0] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a, b){return a-b});\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list.pop();\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var min_k_list_max_len = K;\n    var min_k_list_max_val = 0;\n    var min_k_list_max_val_index = 0;\n    var test_list_len = test_list.length;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var temp = 0;\n    var temp_index = 0;\n    var temp_val = 0;\n    var temp_val_index = 0;\n    var temp_val_index_2 = 0;\n    var temp_val_index_3 = 0;\n    var temp_val_index_4 = 0;\n    var temp_val_index_5 = 0;\n    var temp_val_index_6 = 0;\n    var temp_val_index_7 = 0;\n    var temp_val_index_8 = 0;\n    var temp_val_index_9 = 0;\n    var temp_val_index_10 = 0;\n    var temp_val_index_11 = 0;\n    var temp_val_index_12 = 0;\n    var temp_val_index_13 = 0;\n    var temp_val_index_14 = 0;\n    var temp_val_index_15 = 0;\n    var temp_val_index_16 = 0;\n    var temp_val_index_17 = 0;\n    var temp_val_index_18 = 0;\n    var temp_val_index_19 = 0;\n    var temp_val_index_20 = 0;\n    var temp_val_index_21 = 0;\n    var temp_val_index_22 = 0;\n    var temp_val_index_23 = 0;\n    var temp_val_index_24 = 0;\n    var temp_val_index_25 = 0;\n    var temp_val_index_26 = 0;\n    var temp_val_index_27 = 0;\n    var temp_val_index_28 = 0;\n    var temp_val_index_29 = 0;\n    var temp_val",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max = Math.max(...min_list);\n        if(test_list[i] < max){\n            min_list.splice(min_list.indexOf(max), 1);\n            min_list.push(test_list[i]);\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = 0;\n        for(var j = 0; j < K; j++){\n            if(min_k[j] > min_k[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k[max_index]){\n            min_k[max_index] = test_list[i];\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    for(var i = 0; i < test_list_len; i++){\n        if(min_k_list_len < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_len++;\n        }\n        else{\n            var max_val = Math.max(...min_k_list);\n            if(test_list[i] < max_val){\n                var max_val_index = min_k_list.indexOf(max_val);\n                min_k_list[max_val_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    var min_k_idx = [];\n    var min_k_val = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_idx.push(i);\n        min_k_val.push(test_list[i]);\n    }\n    min_k_val.sort();\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_val[0]){\n            min_k[min_k_idx[0]] = test_list[i];\n            min_k_val[0] = test_list[i];\n            min_k_idx.sort();\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort();\n            if(test_list[i] < min_k_list[0]){\n                min_k_list[0] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max_value = Math.max(...min_k_list);\n            if (test_list[i] < max_value){\n                min_k_list.splice(min_k_list.indexOf(max_value), 1);\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n        min_k_list_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_list_index[0];\n        for(var j = 0; j < min_k_list_index.length; j++){\n            if(min_k_list[j] > min_k_list[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k_list[max_index]){\n            min_k_list[max_index] = test_list[i];\n            min_k_list_index[max_index] = i;\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_val = Math.max(...min_k_list);\n        if(test_list[i] < max_val){\n            min_k_list.splice(min_k_list.indexOf(max_val), 1);\n            min_k_list.push(test_list[i]);\n        }\n    }\n    return min_k_list;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50];\n    //K = 3;\n    //test_list = [1, 23, 12, 9, 30, 2, 50, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2",
    "    test_list.sort(function(a,b){return a-b});\n    return test_list.slice(0,K);\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_count = 0;\n    var min_k_count = 0;\n    var min_k_index_count_max = K;\n    var min_k_count_max = K;\n    var min_k_index_count_min = 0;\n    var min_k_count_min = 0;\n    var min_k_index_count_min_index = 0;\n    var min_k_count_min_index = 0;\n    var min_k_index_count_max_index = 0;\n    var min_k_count_max_index = 0;\n    var min_k_index_count_min_value = 0;\n    var min_k_count_min_value = 0;\n    var min_k_index_count_max_value = 0;\n    var min_k_count_max_value = 0;\n    var min_k_index_count_min_value_index = 0;\n    var min_k_count_min_value_index = 0;\n    var min_k_index_count_max_value_index = 0;\n    var min_k_count_max_value_index = 0;\n    var min_k_index_count_min_value_index_value = 0;\n    var min_k_count_min_value_index_value = 0;\n    var min_k_index_count_max_value_index_value = 0;\n    var min_k_count_max_value_index_value = 0;\n    var min_k_index_count_min_value_index_value_index = 0;\n    var min_k_count_min_value_index_value_index = 0;\n    var min_k_index_count_max_value_index_value_index = 0;\n    var min_k_count_max_value_index_value_index = 0;\n    var min_k_index_count_min_value_index_value_index_value = 0;\n    var min_k_count_min_value_index_value_index_value =",
    "    var min_k = [];\n    for(var i=0; i<K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){return a-b});\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i]<min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i=0; i<K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a,b){return a-b});\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i] < min_list[K-1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_list[K-1]){\n            min_list[K-1] = test_list[i];\n            min_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50];\n    //K = 3;\n    //test_list = [1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50];\n    //K = 5;\n    //test_list = [1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2, 50, 1, 23, 12, 9, 30, 2,",
    "  var min_k_list = [];\n  var min_k_list_index = [];\n  var min_k_list_index_value = [];\n  var min_k_list_index_value_index = [];\n  var min_k_list_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n  var min_k_list_index_value_index_value_index_value_index_value_index",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //Output: [1, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //Output: [1, 2, 9, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 5\n    //Output: [1, 2, 9, 12, 23]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 6\n    //Output: [1, 2, 9, 12, 23, 30]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 7\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 8\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 9\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 10\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 11\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 12\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 13\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_value = [];\n    var min_k_value_index = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n        min_k_value.push(test_list[i]);\n        min_k_value_index.push(i);\n    }\n    min_k_value.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_value[0]){\n            min_k_value[0] = test_list[i];\n            min_k_value_index[0] = i;\n            min_k_value.sort(function(a, b){return a-b});\n        }\n    }\n    for (var i = 0; i < K; i++){\n        min_k[i] = min_k_value[i];\n        min_k_index[i] = min_k_value_index[i];\n    }\n    return [min_k, min_k_index];\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_value = [];\n    var min_k_list_value_index = [];\n    var min_k_list_value_index_value = [];\n    var min_k_list_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value",
    "    //console.log(test_list);\n    //console.log(K);\n    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    //console.log(min_k_list);\n    for(var i = K; i < test_list.length; i++){\n        var max = min_k_list[0];\n        var max_index = 0;\n        for(var j = 1; j < min_k_list.length; j++){\n            if(min_k_list[j] > max){\n                max = min_k_list[j];\n                max_index = j;\n            }\n        }\n        if(test_list[i] < max){\n            min_k_list[max_index] = test_list[i];\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    var min_k_idx = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_idx.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_idx = min_k_idx[0];\n        var max = min_k[0];\n        for(var j = 1; j < min_k.length; j++){\n            if(min_k[j] > max){\n                max = min_k[j];\n                max_idx = min_k_idx[j];\n            }\n        }\n        if(test_list[i] < max){\n            min_k[max_idx] = test_list[i];\n            min_k_idx[max_idx] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    for(var i = 0; i < test_list_len; i++){\n        if(min_k_list_len < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_len++;\n        }\n        else{\n            var max_val = Math.max(...min_k_list);\n            if(test_list[i] < max_val){\n                var max_val_index = min_k_list.indexOf(max_val);\n                min_k_list[max_val_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        var j = 0;\n        while(j < K && min_k[j] < test_list[i]){\n            j++;\n        }\n        if(j < K){\n            min_k[j] = test_list[i];\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_index[0];\n        for(var j = 1; j < K; j++){\n            if(min_k[j] > min_k[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k[max_index]){\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_idx = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_idx.push(i);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var max_idx = min_k_idx[0];\n        for (var j = 1; j < K; j++){\n            if (min_k[j] > min_k[max_idx]){\n                max_idx = j;\n            }\n        }\n        if (test_list[i] < min_k[max_idx]){\n            min_k[max_idx] = test_list[i];\n            min_k_idx[max_idx] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //return [1, 2, 9]\n    var min_list = []\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i])\n    }\n    min_list.sort(function(a, b){return a - b})\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_list[K - 1]){\n            min_list[K - 1] = test_list[i]\n            min_list.sort(function(a, b){return a - b})\n        }\n    }\n    return min_list\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }else{\n            var max_value = Math.max(...min_k_list);\n            if(test_list[i] < max_value){\n                min_k_list.splice(min_k_list.indexOf(max_value), 1);\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    var min_k_set = new Set();\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n            min_k_set.add(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k);\n            if(test_list[i] < max){\n                min_k_set.delete(max);\n                min_k_set.add(test_list[i]);\n                min_k = Array.from(min_k_set);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort(function(a, b){return a-b});\n    return test_list.slice(0, K);\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a - b;\n            });\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_value = [];\n    for (var i = 0; i < K; i++){\n        min_k_list_index.push(i);\n        min_k_list_value.push(test_list[i]);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var max_value = Math.max(...min_k_list_value);\n        var max_value_index = min_k_list_value.indexOf(max_value);\n        if (test_list[i] < max_value){\n            min_k_list_value[max_value_index] = test_list[i];\n            min_k_list_index[max_value_index] = i;\n        }\n    }\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[min_k_list_index[i]]);\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n        min_k_list_index.push(i);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var max_index = min_k_list_index[0];\n        for (var j = 1; j < min_k_list_index.length; j++){\n            if (min_k_list[j] > min_k_list[max_index]){\n                max_index = j;\n            }\n        }\n        if (test_list[i] < min_k_list[max_index]){\n            min_k_list[max_index] = test_list[i];\n            min_k_list_index[max_index] = i;\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k;\n}\n",
    "    var min_heap = new MinHeap();\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        min_heap.insert(test_list[i]);\n    }\n    for(var i = 0; i < K; i++){\n        result.push(min_heap.removeMin());\n    }\n    return result;\n}\n\nvar test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar K = 5;",
    "    if(K > test_list.length){\n        return \"K is greater than the length of the list\"\n    }\n    else{\n        return test_list.sort((a,b) => a-b).slice(0,K)\n    }\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_count_max = K;\n    var min_k_list_index_count_max_minus_1 = K - 1;\n    var min_k_list_count_max_minus_1 = K - 1;\n    var min_k_list_index_count_max_minus_2 = K - 2;\n    var min_k_list_count_max_minus_2 = K - 2;\n    var min_k_list_index_count_max_minus_3 = K - 3;\n    var min_k_list_count_max_minus_3 = K - 3;\n    var min_k_list_index_count_max_minus_4 = K - 4;\n    var min_k_list_count_max_minus_4 = K - 4;\n    var min_k_list_index_count_max_minus_5 = K - 5;\n    var min_k_list_count_max_minus_5 = K - 5;\n    var min_k_list_index_count_max_minus_6 = K - 6;\n    var min_k_list_count_max_minus_6 = K - 6;\n    var min_k_list_index_count_max_minus_7 = K - 7;\n    var min_k_list_count_max_minus_7 = K - 7;\n    var min_k_list_index_count_max_minus_8 = K - 8;\n    var min_k_list_count_max_minus_8 = K - 8;\n    var min_k_list_index_count_max_minus_9 = K - 9;\n    var min_k_list_count_max_minus_9 = K - 9;\n    var min_k_list_index_count_max_minus_10 = K - 10;\n    var min_k_list_count_",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //Output: [1, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //Output: [1, 2, 9, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 6\n    //Output: [1, 2, 9, 12, 23, 30]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 7\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 8\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 9\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 10\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 0\n    //Output: []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 1\n    //Output: [1]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 2\n    //Output: [1, 2]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //Output: [1, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //Output: [1, 2, 9, 12]\n   ",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_set = new Set();\n    var min_k_index_set_size = 0;\n    var min_k_index_set_max_size = K;\n    var min_k_index_set_max_size_minus_1 = K-1;\n    var test_list_length = test_list.length;\n    var test_list_length_minus_1 = test_list.length-1;\n    var test_list_length_minus_1_minus_K = test_list.length-1-K;\n    var test_list_length_minus_1_minus_K_minus_1 = test_list.length-1-K-1;\n    var test_list_length_minus_1_minus_K_minus_1_minus_K = test_list.length-1-K-1-K;\n    var test_list_length_minus_1_minus_K_minus_1_minus_K_minus_1 = test_list.length-1-K-1-K-1;\n    var test_list_length_minus_1_minus_K_minus_1_minus_K_minus_1_minus_K = test_list.length-1-K-1-K-1-K;\n    var test_list_length_minus_1_minus_K_minus_1_minus_K_minus_1_minus_K_minus_1 = test_list.length-1-K-1-K-1-K-1;\n    var test_list_length_minus_1_minus_K_minus_1_minus_K_minus_1_minus_K_minus_1_minus_K = test_list.length-1-K-1-K-1-K-1-K;\n    var test_list_length_minus_1_minus_K_minus_1_minus_K_minus_1_minus_K_minus_1_minus_K_minus_1 = test_list.length-1-K-1-K-1-K-1-K-1;\n    var test_",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    for(var i = 0; i < test_list_len; i++){\n        var test_list_i = test_list[i];\n        if(min_k_list_len < K){\n            min_k_list.push(test_list_i);\n            min_k_list_len++;\n        }\n        else{\n            var min_k_list_max = Math.max(...min_k_list);\n            if(test_list_i < min_k_list_max){\n                min_k_list.splice(min_k_list.indexOf(min_k_list_max), 1);\n                min_k_list.push(test_list_i);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //Output: [9, 2, 1]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //Output: [9, 2, 1, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 5\n    //Output: [9, 2, 1, 12, 23]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 6\n    //Output: [9, 2, 1, 12, 23, 2]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 7\n    //Output: [9, 2, 1, 12, 23, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 8\n    //Output: [9, 2, 1, 12, 23, 2, 9, 1]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 9\n    //Output: [9, 2, 1, 12, 23, 2, 9, 1, 23]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 10\n    //Output: [9, 2, 1, 12, 23, 2, 9, 1, 23, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 11\n    //Output: [9, 2, 1, 12, 23, 2, 9, 1, 23, 12, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 12\n    //Output: [9, 2, 1, 12, 23, 2, 9, 1, 23, 12, 9, 30]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max = Math.max(...min_k);\n        if(test_list[i] < max){\n            min_k.splice(min_k.indexOf(max), 1);\n            min_k.push(test_list[i]);\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n        min_k_list_index.push(i);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var max_val = Math.max(...min_k_list);\n        var max_val_index = min_k_list.indexOf(max_val);\n        if (test_list[i] < max_val){\n            min_k_list[max_val_index] = test_list[i];\n            min_k_list_index[max_val_index] = i;\n        }\n    }\n    return min_k_list_index;\n}\n",
    "    var min_heap = new MinHeap();\n    for (var i = 0; i < test_list.length; i++){\n        min_heap.insert(test_list[i]);\n    }\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(min_heap.extract_min());\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (i < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a, b){return a - b});\n            if (test_list[i] < min_k[K - 1]){\n                min_k[K - 1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a, b){return a - b});\n            if (test_list[i] < min_k[K - 1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){\n        return a-b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k.pop();\n            min_k.push(test_list[i]);\n            min_k.sort(function(a,b){\n                return a-b;\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    test_list.sort((a,b) => a-b);\n    return test_list.slice(0, K);\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k;\n}\n",
    "    test_list.sort();\n    return test_list.slice(0, K);\n}\n",
    "    //console.log(test_list);\n    //console.log(K);\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_value = [];\n    var min_k_list_value_index = [];\n    var min_k_list_value_index_value = [];\n    var min_k_list_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_list_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value",
    "    var min_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_list.length < K){\n            min_list.push(test_list[i]);\n        }\n        else{\n            min_list.sort(function(a,b){return a-b});\n            if(test_list[i] < min_list[min_list.length-1]){\n                min_list.pop();\n                min_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        } else {\n            min_k.sort(function(a,b){return a - b});\n            if (test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //return [1, 2, 9]\n    var min_list = []\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i])\n    }\n    min_list.sort()\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_list[K-1]){\n            min_list[K-1] = test_list[i]\n            min_list.sort()\n        }\n    }\n    return min_list\n}\n",
    "    let min_k = [];\n    for(let i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort((a,b) => a-b);\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort((a,b) => a-b);\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_count = 0;\n    var min_k_count = 0;\n    var min_k_index_count_max = K;\n    var min_k_count_max = K;\n    var min_k_index_count_min = 0;\n    var min_k_count_min = 0;\n    var min_k_index_count_min_max = K;\n    var min_k_count_min_max = K;\n    var min_k_index_count_min_max_count = 0;\n    var min_k_count_min_max_count = 0;\n    var min_k_index_count_min_max_count_max = K;\n    var min_k_count_min_max_count_max = K;\n    var min_k_index_count_min_max_count_min = 0;\n    var min_k_count_min_max_count_min = 0;\n    var min_k_index_count_min_max_count_min_max = K;\n    var min_k_count_min_max_count_min_max = K;\n    var min_k_index_count_min_max_count_min_max_count = 0;\n    var min_k_count_min_max_count_min_max_count = 0;\n    var min_k_index_count_min_max_count_min_max_count_max = K;\n    var min_k_count_min_max_count_min_max_count_max = K;\n    var min_k_index_count_min_max_count_min_max_count_min = 0;\n    var min_k_count_min_max_count_min_max_count_min = 0;\n    var min_k_index_count_min_max_count_min_max_count_min_max = K;\n    var min_k_count_min_max_count_min_max_count_min_max = K;\n    var min_k_index_count_min_max",
    "    //test_list.sort(function(a,b){return a-b});\n    //return test_list.slice(0,K);\n    //return test_list.sort(function(a,b){return a-b}).slice(0,K);\n    return test_list.sort(function(a,b){return a-b}).slice(0,K);\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    //console.log(test_list);\n    //console.log(K);\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_sorted = [];\n    var min_k_list_sorted = [];\n    var min_k_list_index_sorted_final = [];\n    var min_k_list_sorted_final = [];\n    var min_k_list_index_sorted_final_string = \"\";\n    var min_k_list_sorted_final_string = \"\";\n    var min_k_list_index_sorted_final_string_final = \"\";\n    var min_k_list_sorted_final_string_final = \"\";\n    var min_k_list_index_sorted_final_string_final_final = \"\";\n    var min_k_list_sorted_final_string_final_final = \"\";\n    var min_k_list_index_sorted_final_string_final_final_final = \"\";\n    var min_k_list_sorted_final_string_final_final_final = \"\";\n    var min_k_list_index_sorted_final_string_final_final_final_final = \"\";\n    var min_k_list_sorted_final_string_final_final_final_final = \"\";\n    var min_k_list_index_sorted_final_string_final_final_final_final_final = \"\";\n    var min_k_list_sorted_final_string_final_final_final_final_final = \"\";\n    var min_k_list_index_sorted_final_string_final_final_final_final_final_final = \"\";\n    var min_k_list_sorted_final_string_final_final_final_final_final_final = \"\";\n    var min_k_list_index_sorted_final_string_final_final_final_final_final_final_final = \"\";\n    var min_k_list_sorted_final_string_final_final_final_final_final_",
    "    var min_k_list = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort();\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    let min_k = [];\n    for(let i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort((a,b) => a - b);\n            if(test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K - 1]){\n            min_k_list[K - 1] = test_list[i];\n            min_k_list.sort(function(a, b){\n                return a - b;\n            });\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_index = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n        min_k_list_index.push(i);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var max_index = 0;\n        for (var j = 0; j < K; j++){\n            if (min_k_list[j] > min_k_list[max_index]){\n                max_index = j;\n            }\n        }\n        if (test_list[i] < min_k_list[max_index]){\n            min_k_list[max_index] = test_list[i];\n            min_k_list_index[max_index] = i;\n        }\n    }\n    return min_k_list_index;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }else{\n            var max = Math.max(...min_k);\n            if(test_list[i] < max){\n                min_k.splice(min_k.indexOf(max), 1);\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }else{\n            min_k.sort();\n            if(test_list[i] < min_k[0]){\n                min_k[0] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_list[K - 1]){\n            min_list[K - 1] = test_list[i];\n            min_list.sort(function(a, b){\n                return a - b;\n            });\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max = Math.max(...min_k);\n        if(test_list[i] < max){\n            var max_index = min_k.indexOf(max);\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k_index;\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = test_list.slice(0, K);\n    min_k.sort(function(a, b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_length = 0;\n    var test_list_length = test_list.length;\n    for(var i = 0; i < test_list_length; i++){\n        if(min_k_list_length < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_length++;\n        }\n        else{\n            var max_value = Math.max(...min_k_list);\n            if(test_list[i] < max_value){\n                min_k_list.splice(min_k_list.indexOf(max_value), 1, test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a - b});\n            if (test_list[i] < min_k[0]){\n                min_k[0] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_set = new Set();\n    var min_k_set_size = 0;\n    var min_k_set_max_size = K;\n    var min_k_set_max_size_reached = false;\n    var min_k_set_max_size_reached_index = 0;\n    var min_k_set_max_size_reached_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value_index_value = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_value_index_value_index_value_index = 0;\n    var min_k_set_max_size_reached_index_value_index_value_index_value_index_",
    "    var min_heap = new MinHeap();\n    var i;\n    for(i=0; i<test_list.length; i++){\n        min_heap.insert(test_list[i]);\n    }\n    var result = [];\n    for(i=0; i<K; i++){\n        result.push(min_heap.extractMin());\n    }\n    return result;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a,b){\n        return a - b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a,b){\n                return a - b;\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            var max_val = Math.max.apply(null, min_k);\n            if(test_list[i] < max_val){\n                min_k.splice(min_k.indexOf(max_val), 1, test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a-b});\n            if (test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    //create a new array to store the results\n    var result = [];\n    //sort the array\n    test_list.sort();\n    //loop through the array\n    for(var i = 0; i < K; i++){\n        //push the first K elements into the result array\n        result.push(test_list[i]);\n    }\n    //return the result array\n    return result;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_count = 0;\n    var min_k_count = 0;\n    var min_k_index_count_max = K;\n    var min_k_count_max = K;\n    var min_k_index_count_min = 0;\n    var min_k_count_min = 0;\n    var min_k_index_count_min_index = 0;\n    var min_k_count_min_index = 0;\n    var min_k_index_count_max_index = 0;\n    var min_k_count_max_index = 0;\n    var min_k_index_count_min_index_value = 0;\n    var min_k_count_min_index_value = 0;\n    var min_k_index_count_max_index_value = 0;\n    var min_k_count_max_index_value = 0;\n    var min_k_index_count_min_index_value_index = 0;\n    var min_k_count_min_index_value_index = 0;\n    var min_k_index_count_max_index_value_index = 0;\n    var min_k_count_max_index_value_index = 0;\n    var min_k_index_count_min_index_value_index_value = 0;\n    var min_k_count_min_index_value_index_value = 0;\n    var min_k_index_count_max_index_value_index_value = 0;\n    var min_k_count_max_index_value_index_value = 0;\n    var min_k_index_count_min_index_value_index_value_index = 0;\n    var min_k_count_min_index_value_index_value_index = 0;\n    var min_k_index_count_max_index_value_index_value_index = 0;\n    var min_k_count_max_index_value_index_value_index = 0;\n    var min_k_index_count_min_index",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50];\n    //K = 3;\n    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_sorted = [];\n    var min_k_sorted = [];\n    var min_k_sorted_index = [];\n    var min_k_sorted_index_sorted = [];\n    var min_k_sorted_sorted = [];\n    var min_k_sorted_sorted_index = [];\n    var min_k_sorted_sorted_index_sorted = [];\n    var min_k_sorted_sorted_sorted = [];\n    var min_k_sorted_sorted_sorted_index = [];\n    var min_k_sorted_sorted_sorted_index_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_index = [];\n    var min_k_sorted_sorted_sorted_sorted_index_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_index = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_index_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_sorted_index = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index = [];\n    var min_k_sorted_sorted_sorted_s",
    "    var min_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_list.length < K){\n            min_list.push(test_list[i]);\n        }\n        else{\n            min_list.sort(function(a,b){return a-b});\n            if (test_list[i] < min_list[K-1]){\n                min_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    var i = 0;\n    var j = 0;\n    var temp = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len_max = K;\n    var min_k_list_len_max_minus_1 = K - 1;\n    var min_k_list_len_max_minus_2 = K - 2;\n    var min_k_list_len_max_minus_3 = K - 3;\n    var min_k_list_len_max_minus_4 = K - 4;\n    var min_k_list_len_max_minus_5 = K - 5;\n    var min_k_list_len_max_minus_6 = K - 6;\n    var min_k_list_len_max_minus_7 = K - 7;\n    var min_k_list_len_max_minus_8 = K - 8;\n    var min_k_list_len_max_minus_9 = K - 9;\n    var min_k_list_len_max_minus_10 = K - 10;\n    var min_k_list_len_max_minus_11 = K - 11;\n    var min_k_list_len_max_minus_12 = K - 12;\n    var min_k_list_len_max_minus_13 = K - 13;\n    var min_k_list_len_max_minus_14 = K - 14;\n    var min_k_list_len_max_minus_15 = K - 15;\n    var min_k_list_len_max_minus_16 = K - 16;\n    var min_k_list_len_max_minus_17 = K - 17;\n    var min_k_list_len_max_minus_18 = K - 18;\n    var min_k_list_len_max_minus_19 = K - 19;\n    var min_k_list_len_max_minus_20 = K - 20;\n    var min_",
    "    var min_k_list = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k_list);\n            if(test_list[i] < max){\n                var index = min_k_list.indexOf(max);\n                min_k_list[index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k = [];\n    var min_k_indices = [];\n    var min_k_values = [];\n    var min_k_values_indices = [];\n    var min_k_values_indices_sorted = [];\n    var min_k_sorted = [];\n    var min_k_indices_sorted = [];\n    var min_k_values_sorted = [];\n    var min_k_values_indices_sorted = [];\n    var min_k_values_indices_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    var min_k_values_indices_sorted_sorted_sorted_sorted_sorted",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    var i = 0;\n    var j = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len_max = K;\n    var min_k_list_len_max_minus_1 = K - 1;\n    var min_k_list_len_max_minus_2 = K - 2;\n    var min_k_list_len_max_minus_3 = K - 3;\n    var min_k_list_len_max_minus_4 = K - 4;\n    var min_k_list_len_max_minus_5 = K - 5;\n    var min_k_list_len_max_minus_6 = K - 6;\n    var min_k_list_len_max_minus_7 = K - 7;\n    var min_k_list_len_max_minus_8 = K - 8;\n    var min_k_list_len_max_minus_9 = K - 9;\n    var min_k_list_len_max_minus_10 = K - 10;\n    var min_k_list_len_max_minus_11 = K - 11;\n    var min_k_list_len_max_minus_12 = K - 12;\n    var min_k_list_len_max_minus_13 = K - 13;\n    var min_k_list_len_max_minus_14 = K - 14;\n    var min_k_list_len_max_minus_15 = K - 15;\n    var min_k_list_len_max_minus_16 = K - 16;\n    var min_k_list_len_max_minus_17 = K - 17;\n    var min_k_list_len_max_minus_18 = K - 18;\n    var min_k_list_len_max_minus_19 = K - 19;\n    var min_k_list_len_max_minus_20 = K - 20;\n    var min_k_list_len_max",
    "    var min_list = [];\n    var min_list_size = 0;\n    var i = 0;\n    var j = 0;\n    var temp = 0;\n    var min_index = 0;\n    var min_value = 0;\n    for(i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n        min_list_size++;\n    }\n    for(i = K; i < test_list.length; i++){\n        min_index = 0;\n        min_value = min_list[0];\n        for(j = 1; j < min_list_size; j++){\n            if(min_list[j] < min_value){\n                min_value = min_list[j];\n                min_index = j;\n            }\n        }\n        if(test_list[i] < min_value){\n            min_list[min_index] = test_list[i];\n        }\n    }\n    return min_list;\n}\n\nvar test_list = [2, 1, 3, 5, 4, 8, 6, 7, 9];\nvar K = 3;",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    var test_list_len = test_list.length;\n    var i = 0;\n    var j = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_k_list_len = 0;\n    var min_",
    "    var min_k = test_list.slice(0, K);\n    min_k.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K - 1]){\n            min_k[K - 1] = test_list[i];\n            min_k.sort(function(a, b){\n                return a - b;\n            });\n        }\n    }\n    return min_k;\n}\n",
    "    let min_list = [];\n    let min_list_len = 0;\n    let test_list_len = test_list.length;\n    for(let i = 0; i < test_list_len; i++){\n        if(min_list_len < K){\n            min_list.push(test_list[i]);\n            min_list_len++;\n        }\n        else{\n            let max_index = 0;\n            for(let j = 1; j < min_list_len; j++){\n                if(min_list[j] > min_list[max_index]){\n                    max_index = j;\n                }\n            }\n            if(min_list[max_index] > test_list[i]){\n                min_list[max_index] = test_list[i];\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_index[0];\n        for(var j = 1; j < min_k_index.length; j++){\n            if(min_k[j] > min_k[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k[max_index]){\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    for (var i = K; i < test_list.length; i++){\n        for (var j = 0; j < K; j++){\n            if (test_list[i] < min_k[j]){\n                min_k[j] = test_list[i];\n                break;\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = [];\n    var min_list_size = 0;\n    var test_list_size = test_list.length;\n    for(var i = 0; i < test_list_size; i++){\n        if(min_list_size < K){\n            min_list.push(test_list[i]);\n            min_list_size++;\n        }\n        else{\n            min_list.sort(function(a, b){return a - b});\n            if(test_list[i] < min_list[min_list_size - 1]){\n                min_list.pop();\n                min_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var n = test_list.length;\n    var min_k_list = [];\n    for(var i = 0; i < n; i++){\n        if(i < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max = min_k_list[0];\n            var max_index = 0;\n            for(var j = 1; j < K; j++){\n                if(min_k_list[j] > max){\n                    max = min_k_list[j];\n                    max_index = j;\n                }\n            }\n            if(test_list[i] < max){\n                min_k_list[max_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //Output: [1, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //Output: [1, 2, 9, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 5\n    //Output: [1, 2, 9, 12, 23]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 6\n    //Output: [1, 2, 9, 12, 23, 30]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 7\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 8\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 9\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 10\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 11\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 12\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 13\n    //Output: [1, 2, 9, 12, 23, 30, 50]\n    //test",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort();\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_indexes = [];\n    var min_k_indexes_set = new Set();\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_indexes.push(i);\n        min_k_indexes_set.add(i);\n    }\n    min_k.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort(function(a, b){return a-b});\n            min_k_indexes[K-1] = i;\n            min_k_indexes.sort(function(a, b){return a-b});\n            min_k_indexes_set.add(i);\n        }\n    }\n    return min_k;\n}\n",
    "    let min_list = [];\n    let min_list_len = 0;\n    let test_list_len = test_list.length;\n    for(let i = 0; i < test_list_len; i++){\n        if(min_list_len < K){\n            min_list.push(test_list[i]);\n            min_list_len++;\n        }\n        else{\n            min_list.sort();\n            if(test_list[i] < min_list[min_list_len - 1]){\n                min_list.pop();\n                min_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var min_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_list.length < K){\n            min_list.push(test_list[i]);\n        }\n        else{\n            min_list.sort(function(a,b){\n                return a-b;\n            });\n            if(test_list[i] < min_list[K-1]){\n                min_list.pop();\n                min_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_list;\n}\n",
    "    var min_heap = new MinHeap();\n    for (var i = 0; i < test_list.length; i++){\n        min_heap.insert(test_list[i]);\n    }\n    var min_k = [];\n    for (var i = 0; i < K; i++){\n        min_k.push(min_heap.extract_min());\n    }\n    return min_k;\n}\n",
    "    let min_k = [];\n    let min_k_index = [];\n    let min_k_index_count = 0;\n    let min_k_index_count_max = K;\n    let min_k_index_count_max_minus_one = K - 1;\n    let min_k_index_count_max_minus_two = K - 2;\n    let min_k_index_count_max_minus_three = K - 3;\n    let min_k_index_count_max_minus_four = K - 4;\n    let min_k_index_count_max_minus_five = K - 5;\n    let min_k_index_count_max_minus_six = K - 6;\n    let min_k_index_count_max_minus_seven = K - 7;\n    let min_k_index_count_max_minus_eight = K - 8;\n    let min_k_index_count_max_minus_nine = K - 9;\n    let min_k_index_count_max_minus_ten = K - 10;\n    let min_k_index_count_max_minus_eleven = K - 11;\n    let min_k_index_count_max_minus_twelve = K - 12;\n    let min_k_index_count_max_minus_thirteen = K - 13;\n    let min_k_index_count_max_minus_fourteen = K - 14;\n    let min_k_index_count_max_minus_fifteen = K - 15;\n    let min_k_index_count_max_minus_sixteen = K - 16;\n    let min_k_index_count_max_minus_seventeen = K - 17;\n    let min_k_index_count_max_minus_eighteen = K - 18;\n    let min_k_index_count_max_minus_nineteen = K - 19;\n    let min_k_index_count_max_minus_twenty = K - 20;\n    let min_k_index_count_max_minus_twenty_one = K - 21;\n    let min_k_index_count_",
    "    var min_list = [];\n    var min_list_len = 0;\n    var min_list_max_index = 0;\n    var min_list_max_value = 0;\n    var test_list_len = test_list.length;\n    var test_list_index = 0;\n    var test_list_value = 0;\n    var test_list_value_index = 0;\n    var min_list_index = 0;\n    var min_list_value = 0;\n    var min_list_value_index = 0;\n\n    //initialize min_list\n    for(min_list_index = 0; min_list_index < K; min_list_index++){\n        min_list[min_list_index] = test_list[min_list_index];\n    }\n    min_list_len = min_list.length;\n    min_list_max_index = min_list_len - 1;\n    min_list_max_value = min_list[min_list_max_index];\n\n    //iterate over test_list\n    for(test_list_index = K; test_list_index < test_list_len; test_list_index++){\n        test_list_value = test_list[test_list_index];\n        if(test_list_value < min_list_max_value){\n            //find the index of the max value in min_list\n            for(min_list_index = 0; min_list_index < min_list_len; min_list_index++){\n                min_list_value = min_list[min_list_index];\n                if(min_list_value == min_list_max_value){\n                    min_list_value_index = min_list_index;\n                    break;\n                }\n            }\n            //replace the max value with the new value\n            min_list[min_list_value_index] = test_list_value;\n            //update min_list_max_value\n            min_list_max_value = min_list[min_list_max_index];\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_value = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n        min_k_value.push(test_list[i]);\n    }\n    min_k_value.sort(function(a, b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_value[0]){\n            min_k_value[0] = test_list[i];\n            min_k_index[0] = i;\n            min_k[0] = test_list[i];\n            min_k_value.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar K = 5;",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //Output: [1, 2, 9]\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_sorted = [];\n    var min_k_list_sorted = [];\n    var min_k_list_index_sorted_final = [];\n    var min_k_list_sorted_final = [];\n    var min_k_list_index_sorted_final_final = [];\n    var min_k_list_sorted_final_final = [];\n    var min_k_list_index_sorted_final_final_final = [];\n    var min_k_list_sorted_final_final_final = [];\n    var min_k_list_index_sorted_final_final_final_final = [];\n    var min_k_list_sorted_final_final_final_final = [];\n    var min_k_list_index_sorted_final_final_final_final_final = [];\n    var min_k_list_sorted_final_final_final_final_final = [];\n    var min_k_list_index_sorted_final_final_final_final_final_final = [];\n    var min_k_list_sorted_final_final_final_final_final_final = [];\n    var min_k_list_index_sorted_final_final_final_final_final_final_final = [];\n    var min_k_list_sorted_final_final_final_final_final_final_final = [];\n    var min_k_list_index_sorted_final_final_final_final_final_final_final_final = [];\n    var min_k_list_sorted_final_final_final_final_final_final_final_final = [];\n    var min_k_list_index_sorted_final_final_final_final_final_final_final_final_final = [];\n    var min_k_list_sorted_final_final_final_final_final",
    "    var min_k_list = [];\n    for(var i=0; i<K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a,b){return a-b});\n    for(var i=K; i<test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a,b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_size = 0;\n    var min_k_list_max = 0;\n    var min_k_list_min = 0;\n    var min_k_list_min_index = 0;\n    var min_k_list_max_index = 0;\n    var min_k_list_min_value = 0;\n    var min_k_list_max_value = 0;\n    var min_k_list_min_value_index = 0;\n    var min_k_list_max_value_index = 0;\n    var min_k_list_min_value_index_new = 0;\n    var min_k_list_max_value_index_new = 0;\n    var min_k_list_min_value_new = 0;\n    var min_k_list_max_value_new = 0;\n    var min_k_list_min_value_new_index = 0;\n    var min_k_list_max_value_new_index = 0;\n    var min_k_list_min_value_new_index_new = 0;\n    var min_k_list_max_value_new_index_new = 0;\n    var min_k_list_min_value_new_new = 0;\n    var min_k_list_max_value_new_new = 0;\n    var min_k_list_min_value_new_new_index = 0;\n    var min_k_list_max_value_new_new_index = 0;\n    var min_k_list_min_value_new_new_index_new = 0;\n    var min_k_list_max_value_new_new_index_new = 0;\n    var min_k_list_min_value_new_new_new = 0;\n    var min_k_list_max_value_new_new_new = 0;\n    var min_k_list_min_value_new_new_new_index = 0;\n    var min_k_list_max_value_new_new_new_index = 0;\n    var",
    "    var min_k = [];\n    var min_k_heap = new MinHeap();\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_heap.size() < K){\n            min_k_heap.insert(test_list[i]);\n        }\n        else if(min_k_heap.getMin() < test_list[i]){\n            min_k_heap.extractMin();\n            min_k_heap.insert(test_list[i]);\n        }\n    }\n    while(min_k_heap.size() > 0){\n        min_k.push(min_k_heap.extractMin());\n    }\n    return min_k;\n}\n\nvar test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar K = 5;",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k[min_k.length-1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    let min_k = [];\n    let min_k_index = [];\n    let min_k_index_count = 0;\n    for(let i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(let i = K; i < test_list.length; i++){\n        let min_k_index_count = 0;\n        for(let j = 0; j < min_k.length; j++){\n            if(min_k[j] < test_list[i]){\n                min_k_index_count++;\n            }\n        }\n        if(min_k_index_count < K){\n            let min_k_index_count = 0;\n            for(let j = 0; j < min_k.length; j++){\n                if(min_k[j] > test_list[i]){\n                    min_k[j] = test_list[i];\n                    min_k_index[j] = i;\n                    break;\n                }\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_count = 0;\n    var min_k_count = 0;\n    var min_k_index_count_max = K;\n    var test_list_length = test_list.length;\n    var test_list_length_max = test_list_length - 1;\n    var test_list_length_min = 0;\n    var min_k_index_count_max_minus_1 = min_k_index_count_max - 1;\n    var min_k_index_count_max_minus_2 = min_k_index_count_max - 2;\n    var min_k_index_count_max_minus_3 = min_k_index_count_max - 3;\n    var min_k_index_count_max_minus_4 = min_k_index_count_max - 4;\n    var min_k_index_count_max_minus_5 = min_k_index_count_max - 5;\n    var min_k_index_count_max_minus_6 = min_k_index_count_max - 6;\n    var min_k_index_count_max_minus_7 = min_k_index_count_max - 7;\n    var min_k_index_count_max_minus_8 = min_k_index_count_max - 8;\n    var min_k_index_count_max_minus_9 = min_k_index_count_max - 9;\n    var min_k_index_count_max_minus_10 = min_k_index_count_max - 10;\n    var min_k_index_count_max_minus_11 = min_k_index_count_max - 11;\n    var min_k_index_count_max_minus_12 = min_k_index_count_max - 12;\n    var min_k_index_count_max_minus_13 = min_k_index_count_max - 13;\n    var min_k_index_count_max_minus_14 = min_k_index_count_max - 14;\n   ",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_index[0];\n        for(var j = 0; j < min_k_index.length; j++){\n            if(min_k[j] > min_k[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k[max_index]){\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    var min_k_list_len = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k_list_len < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_len += 1;\n            if (min_k_list_len == K){\n                min_k_list.sort(function(a, b){return a - b});\n            }\n        }\n        else{\n            if (test_list[i] < min_k_list[K - 1]){\n                min_k_list.pop();\n                min_k_list.push(test_list[i]);\n                min_k_list.sort(function(a, b){return a - b});\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){return a-b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k_list[K-1]){\n                min_k_list[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort(function(a, b){return a - b});\n            if(test_list[i] < min_k_list[K - 1]){\n                min_k_list[K - 1] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_value = [];\n    for (var i = 0; i < K; i++){\n        min_k_index.push(i);\n        min_k_value.push(test_list[i]);\n    }\n    for (var i = K; i < test_list.length; i++){\n        var min_value = Math.min(...min_k_value);\n        var min_index = min_k_value.indexOf(min_value);\n        if (test_list[i] < min_value){\n            min_k_value[min_index] = test_list[i];\n            min_k_index[min_index] = i;\n        }\n    }\n    for (var i = 0; i < K; i++){\n        min_k.push(test_list[min_k_index[i]]);\n    }\n    return min_k;\n}\n",
    "    //console.log(test_list);\n    //console.log(K);\n    var min_k_list = [];\n    var min_k_list_index = [];\n    var min_k_list_index_count = 0;\n    var min_k_list_index_count_max = K;\n    var min_k_list_index_count_max_minus_one = K-1;\n    var min_k_list_index_count_max_minus_two = K-2;\n    var min_k_list_index_count_max_minus_three = K-3;\n    var min_k_list_index_count_max_minus_four = K-4;\n    var min_k_list_index_count_max_minus_five = K-5;\n    var min_k_list_index_count_max_minus_six = K-6;\n    var min_k_list_index_count_max_minus_seven = K-7;\n    var min_k_list_index_count_max_minus_eight = K-8;\n    var min_k_list_index_count_max_minus_nine = K-9;\n    var min_k_list_index_count_max_minus_ten = K-10;\n    var min_k_list_index_count_max_minus_eleven = K-11;\n    var min_k_list_index_count_max_minus_twelve = K-12;\n    var min_k_list_index_count_max_minus_thirteen = K-13;\n    var min_k_list_index_count_max_minus_fourteen = K-14;\n    var min_k_list_index_count_max_minus_fifteen = K-15;\n    var min_k_list_index_count_max_minus_sixteen = K-16;\n    var min_k_list_index_count_max_minus_seventeen = K-17;\n    var min_k_list_index_count_max_minus_eighteen = K-18;\n    var min_k_list_index_count_max_",
    "    var min_k = [];\n    var test_list_length = test_list.length;\n    for (var i = 0; i < test_list_length; i++){\n        if (i < K){\n            min_k.push(test_list[i]);\n        } else {\n            var min_k_length = min_k.length;\n            for (var j = 0; j < min_k_length; j++){\n                if (test_list[i] < min_k[j]){\n                    min_k.splice(j, 0, test_list[i]);\n                    min_k.pop();\n                    break;\n                }\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_list = []\n    for(var i = 0; i < K; i++){\n        min_list.push(test_list[i])\n    }\n    min_list.sort()\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_list[K-1]){\n            min_list[K-1] = test_list[i]\n            min_list.sort()\n        }\n    }\n    return min_list\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_max = [];\n    var min_k_max_index = [];\n    var min_k_max_index_value = [];\n    var min_k_max_index_value_index = [];\n    var min_k_max_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index = [];\n    var min_k_max_index_value_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index_value_index = [];\n    var min_k_max_index_value_index_value_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    var min_k_max_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    var min_k_max",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max_val = Math.max(...min_k_list);\n            if(test_list[i] < max_val){\n                var max_val_index = min_k_list.indexOf(max_val);\n                min_k_list[max_val_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort(function(a, b){return a - b});\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K - 1]){\n            min_k[K - 1] = test_list[i];\n            min_k.sort(function(a, b){return a - b});\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = test_list.slice(0, K);\n    for(var i = K; i < test_list.length; i++){\n        var max_k = Math.max(...min_k);\n        if(test_list[i] < max_k){\n            min_k[min_k.indexOf(max_k)] = test_list[i];\n        }\n    }\n    return min_k;\n}\n",
    "    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 3\n    //return [1, 2, 9]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 4\n    //return [1, 2, 9, 12]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 7\n    //return [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 8\n    //return [1, 2, 9, 12, 23, 30, 50]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 2\n    //return [1, 2]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 1\n    //return [1]\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = 0\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -1\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -2\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -3\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -4\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -5\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -6\n    //return []\n    //test_list = [1, 23, 12, 9, 30, 2, 50]\n    //K = -7",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max = Math.max(...min_k);\n        if(test_list[i] < max){\n            var index = min_k_index[min_k.indexOf(max)];\n            min_k[min_k.indexOf(max)] = test_list[i];\n            min_k_index[min_k.indexOf(max)] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_arr = [];\n    var min_arr_len = 0;\n    var min_val = Number.MAX_SAFE_INTEGER;\n    var min_val_index = -1;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] < min_val){\n            min_val = test_list[i];\n            min_val_index = i;\n        }\n    }\n    min_arr.push(min_val);\n    min_arr_len++;\n    while(min_arr_len < K){\n        min_val = Number.MAX_SAFE_INTEGER;\n        min_val_index = -1;\n        for(var i = 0; i < test_list.length; i++){\n            if(test_list[i] < min_val && !min_arr.includes(test_list[i])){\n                min_val = test_list[i];\n                min_val_index = i;\n            }\n        }\n        min_arr.push(min_val);\n        min_arr_len++;\n    }\n    return min_arr;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_index_map = {};\n    var min_k_index_map_count = 0;\n    var min_k_index_map_count_max = K;\n    var min_k_index_map_count_max_minus_one = K - 1;\n    var min_k_index_map_count_max_minus_two = K - 2;\n    var min_k_index_map_count_max_minus_three = K - 3;\n    var min_k_index_map_count_max_minus_four = K - 4;\n    var min_k_index_map_count_max_minus_five = K - 5;\n    var min_k_index_map_count_max_minus_six = K - 6;\n    var min_k_index_map_count_max_minus_seven = K - 7;\n    var min_k_index_map_count_max_minus_eight = K - 8;\n    var min_k_index_map_count_max_minus_nine = K - 9;\n    var min_k_index_map_count_max_minus_ten = K - 10;\n    var min_k_index_map_count_max_minus_eleven = K - 11;\n    var min_k_index_map_count_max_minus_twelve = K - 12;\n    var min_k_index_map_count_max_minus_thirteen = K - 13;\n    var min_k_index_map_count_max_minus_fourteen = K - 14;\n    var min_k_index_map_count_max_minus_fifteen = K - 15;\n    var min_k_index_map_count_max_minus_sixteen = K - 16;\n    var min_k_index_map_count_max_minus_seventeen = K - 17;\n    var min_k_index_map_count_max_minus_eighteen = K - 18;\n    var min_k_index_map_count_max_minus_nineteen = K - 19;\n   ",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = 0;\n        for(var j = 0; j < K; j++){\n            if(min_k[j] > min_k[max_index]){\n                max_index = j;\n            }\n        }\n        if(test_list[i] < min_k[max_index]){\n            min_k[max_index] = test_list[i];\n        }\n    }\n    return min_k;\n}\n",
    "    let min_k_list = [];\n    for(let i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort();\n    for(let i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_list[K-1]){\n            min_k_list.pop();\n            min_k_list.push(test_list[i]);\n            min_k_list.sort();\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort();\n        }\n    }\n    return min_k;\n}\n"
  ]
}
{
  "name": "mbpp_753_min_k",
  "language": "js",
  "prompt": "//Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/jsthon-find-minimum-k-records-from-array-array/ - in this case a verbatim cojs of test cases\nfunction min_k(test_list, K){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_k;\n  assert.deepEqual(candidate([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]]);\n  assert.deepEqual(candidate([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]]);\n  assert.deepEqual(candidate([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var min_k = [];\n    var min_k_heap = new Heap(function(a,b){return a.value - b.value});\n    for(var i = 0; i < test_list.length; i++){\n        min_k_heap.push({value: test_list[i], index: i});\n        if(min_k_heap.size() > K){\n            min_k_heap.pop();\n        }\n    }\n    while(min_k_heap.size() > 0){\n        min_k.push(min_k_heap.pop().value);\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i=0; i<test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort((a,b)=>a-b);\n            if(test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [2, 3, 4, 5, 6, 7, 8, 9, 1];\nvar K = 5;",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_index = min_k_index[0];\n        var max_value = min_k[0];\n        for(var j = 1; j < K; j++){\n            if(min_k[j] > max_value){\n                max_index = min_k_index[j];\n                max_value = min_k[j];\n            }\n        }\n        if(test_list[i] < max_value){\n            min_k[max_index] = test_list[i];\n            min_k_index[max_index] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k);\n            if(test_list[i] < max){\n                var index = min_k.indexOf(max);\n                min_k[index] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort();\n        }\n    }\n    return min_k;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;",
    "    var min_k = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n    }\n    min_k.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k[K-1]){\n            min_k[K-1] = test_list[i];\n            min_k.sort();\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a,b){return a-b});\n            if(test_list[i] < min_k[K-1]){\n                min_k[K-1] = test_list[i];\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort(function(a, b){return a - b});\n            if(test_list[i] < min_k[K-1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    let min_k_list = [];\n    for(let i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            min_k_list.sort((a,b) => a - b);\n            if(test_list[i] > min_k_list[0]){\n                min_k_list[0] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k.length < K){\n            min_k.push(test_list[i]);\n        }\n        else{\n            min_k.sort();\n            if(test_list[i] < min_k[K-1]){\n                min_k.pop();\n                min_k.push(test_list[i]);\n            }\n        }\n    }\n    return min_k;\n}\n",
    "    var min = test_list[0];\n    var min_list = [];\n    for(var i = 0; i < K; i++){\n        for(var j = 0; j < test_list.length; j++){\n            if(test_list[j] < min){\n                min = test_list[j];\n            }\n        }\n        min_list.push(min);\n        test_list.splice(test_list.indexOf(min), 1);\n        min = test_list[0];\n    }\n    return min_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < K; i++){\n        min_k_list.push(test_list[i]);\n    }\n    min_k_list.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_k_list[K-1]){\n            min_k_list[K-1] = test_list[i];\n            min_k_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_k_list;\n}\n",
    "    test_list.sort((a,b) => a-b);\n    return test_list.slice(0,K);\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n    }\n    for(var i = K; i < test_list.length; i++){\n        var max_k = Math.max.apply(null, min_k);\n        if(test_list[i] < max_k){\n            var max_k_index = min_k_index[min_k.indexOf(max_k)];\n            min_k[min_k.indexOf(max_k)] = test_list[i];\n            min_k_index[min_k.indexOf(max_k)] = i;\n        }\n    }\n    return min_k;\n}\n",
    "    var min_k_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max = Math.max(...min_k_list);\n            if(test_list[i] < max){\n                min_k_list.splice(min_k_list.indexOf(max), 1);\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_list = [];\n    for (var i = 0; i < K; i++){\n        min_list.push(test_list[i]);\n    }\n    min_list.sort(function(a, b){return a-b});\n    for (var i = K; i < test_list.length; i++){\n        if (test_list[i] < min_list[K-1]){\n            min_list.pop();\n            min_list.push(test_list[i]);\n            min_list.sort(function(a, b){return a-b});\n        }\n    }\n    return min_list;\n}\n",
    "    var min_k = [];\n    var min_k_index = [];\n    var min_k_value = [];\n    for(var i = 0; i < K; i++){\n        min_k.push(test_list[i]);\n        min_k_index.push(i);\n        min_k_value.push(test_list[i]);\n    }\n    min_k_value.sort();\n    for(var i = K; i < test_list.length; i++){\n        if(test_list[i] < min_k_value[K-1]){\n            min_k_value[K-1] = test_list[i];\n            min_k_index[K-1] = i;\n            min_k_value.sort();\n        }\n    }\n    for(var i = 0; i < K; i++){\n        min_k[i] = test_list[min_k_index[i]];\n    }\n    return min_k;\n}\n",
    "    var min_heap = new MinHeap();\n    for(var i = 0; i < test_list.length; i++){\n        if(min_heap.size() < K){\n            min_heap.insert(test_list[i]);\n        }\n        else if(min_heap.getMin() < test_list[i]){\n            min_heap.extractMin();\n            min_heap.insert(test_list[i]);\n        }\n    }\n    return min_heap.getHeap();\n}\n",
    "    let min_k_list = [];\n    let min_k_list_length = 0;\n    for(let i = 0; i < test_list.length; i++){\n        if(min_k_list_length < K){\n            min_k_list.push(test_list[i]);\n            min_k_list_length++;\n        }\n        else{\n            min_k_list.sort();\n            if(test_list[i] < min_k_list[min_k_list_length - 1]){\n                min_k_list.pop();\n                min_k_list.push(test_list[i]);\n            }\n        }\n    }\n    return min_k_list;\n}\n",
    "    var min_k_list = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (min_k_list.length < K){\n            min_k_list.push(test_list[i]);\n        }\n        else{\n            var max_value = Math.max(...min_k_list);\n            if (test_list[i] < max_value){\n                var max_index = min_k_list.indexOf(max_value);\n                min_k_list[max_index] = test_list[i];\n            }\n        }\n    }\n    return min_k_list;\n}\n\nvar test_list = [1, 23, 12, 9, 30, 2, 50];\nvar K = 3;"
  ]
}
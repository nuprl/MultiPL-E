{
  "name": "mbpp_630_get_coordinates",
  "language": "js",
  "prompt": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n",
    "    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            else{\n                coord_list.push([x+i, y+j]);\n            }\n        }\n    }\n    return coord_list;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n",
    "    var test_tup = [1,2];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adjacent_coordinates = [[x+1,y],[x-1,y],[x,y+1],[x,y-1]];\n    return adjacent_coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x+1,y+1]);\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x-1,y+1]);\n    return coordinates;\n}\n",
    "\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var test_list = [[x-1,y-1],[x-1,y],[x-1,y+1],[x,y-1],[x,y+1],[x+1,y-1],[x+1,y],[x+1,y+1]];\n    return test_list;\n}\n",
    "\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x-1,y]);\n\treturn coordinates;\n}\n",
    "    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var coord = test_tup[i];\n        var x = coord[0];\n        var y = coord[1];\n        coordinates.push([x,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y+1]);\n        coordinates.push([x-1,y-1]);\n        coordinates.push([x+1,y-1]);\n        coordinates.push([x-1,y+1]);\n    }\n    return coordinates;\n}\n",
    "\tvar test_arr = test_tup.split(\",\");\n\tvar test_x = parseInt(test_arr[0]);\n\tvar test_y = parseInt(test_arr[1]);\n\tvar test_z = parseInt(test_arr[2]);\n\tvar test_w = parseInt(test_arr[3]);\n\tvar test_v = parseInt(test_arr[4]);\n\tvar test_u = parseInt(test_arr[5]);\n\tvar test_arr_adj = [];\n\tfor(var i = 0; i < 6; i++){\n\t\tvar test_arr_adj_temp = [];\n\t\tif(i == 0){\n\t\t\ttest_arr_adj_temp.push(test_x-1);\n\t\t\ttest_arr_adj_temp.push(test_y);\n\t\t\ttest_arr_adj_temp.push(test_z);\n\t\t\ttest_arr_adj_temp.push(test_w);\n\t\t\ttest_arr_adj_temp.push(test_v);\n\t\t\ttest_arr_adj_temp.push(test_u);\n\t\t}\n\t\tif(i == 1){\n\t\t\ttest_arr_adj_temp.push(test_x+1);\n\t\t\ttest_arr_adj_temp.push(test_y);\n\t\t\ttest_arr_adj_temp.push(test_z);\n\t\t\ttest_arr_adj_temp.push(test_w);\n\t\t\ttest_arr_adj_temp.push(test_v);\n\t\t\ttest_arr_adj_temp.push(test_u);\n\t\t}\n\t\tif(i == 2){\n\t\t\ttest_arr_adj_temp.push(test_x);\n\t\t\ttest_arr_adj_temp.push(test_y-1);\n\t\t\ttest_arr_adj_temp.push(test_z);\n\t\t\ttest_arr_adj_temp.push(test_w);\n\t\t\ttest_arr_adj_temp.push(test_v);\n\t\t\ttest_arr_adj_temp.push(",
    "    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var coordinate = test_tup[i];\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var coordinate_1 = [x+1,y];\n        var coordinate_2 = [x-1,y];\n        var coordinate_3 = [x,y+1];\n        var coordinate_4 = [x,y-1];\n        coordinates.push(coordinate_1);\n        coordinates.push(coordinate_2);\n        coordinates.push(coordinate_3);\n        coordinates.push(coordinate_4);\n    }\n    return coordinates;\n}\n",
    "    var test_tup = [1,2];\n    var test_tup_x = test_tup[0];\n    var test_tup_y = test_tup[1];\n    var test_tup_x_plus = test_tup_x + 1;\n    var test_tup_x_minus = test_tup_x - 1;\n    var test_tup_y_plus = test_tup_y + 1;\n    var test_tup_y_minus = test_tup_y - 1;\n    var test_tup_x_plus_y_plus = [test_tup_x_plus, test_tup_y_plus];\n    var test_tup_x_plus_y_minus = [test_tup_x_plus, test_tup_y_minus];\n    var test_tup_x_minus_y_plus = [test_tup_x_minus, test_tup_y_plus];\n    var test_tup_x_minus_y_minus = [test_tup_x_minus, test_tup_y_minus];\n    var test_tup_x_plus_y = [test_tup_x_plus, test_tup_y];\n    var test_tup_x_minus_y = [test_tup_x_minus, test_tup_y];\n    var test_tup_x_y_plus = [test_tup_x, test_tup_y_plus];\n    var test_tup_x_y_minus = [test_tup_x, test_tup_y_minus];\n    var test_tup_adjacent = [test_tup_x_plus_y_plus, test_tup_x_plus_y_minus, test_tup_x_minus_y_plus, test_tup_x_minus_y_minus, test_tup_x_plus_y, test_tup_x_minus_y, test_tup_x_y_plus, test_tup_x_y_minus];\n    return test_tup_adj",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    var coordinates = [];\n    for(var i = 0; i < x_coordinates.length; i++){\n        for(var j = 0; j < y_coordinates.length; j++){\n            coordinates.push([x_coordinates[i], y_coordinates[j]]);\n        }\n    }\n    return coordinates;\n}\n",
    "\tvar adjacent_coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tfor(var i = x-1; i <= x+1; i++){\n\t\tfor(var j = y-1; j <= y+1; j++){\n\t\t\tif(i >= 0 && i < 10 && j >= 0 && j < 10){\n\t\t\t\tif(!(i == x && j == y)){\n\t\t\t\t\tadjacent_coordinates.push([i,j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn adjacent_coordinates;\n}\n",
    "    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n    }\n    return coordinates;\n}\n",
    "    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [];\n    for(var i = x-1; i <= x+1; i++){\n        for(var j = y-1; j <= y+1; j++){\n            if(i != x || j != y){\n                adj_coordinates.push([i,j]);\n            }\n        }\n    }\n    return adj_coordinates;\n}\n",
    "    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n"
  ]
}
{
  "name": "mbpp_252_convert",
  "language": "js",
  "prompt": "//Write a jsthon function to convert complex numbers to polar coordinates.\nfunction convert(numbers){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_252_convert.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = convert;\n  assert.deepEqual(candidate(1),[1.0, 0.0]);\n  assert.deepEqual(candidate(4),[4.0, 0.0]);\n  assert.deepEqual(candidate(5),[5.0, 0.0]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var real = numbers.real;\n    var imaginary = numbers.imaginary;\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    var polar = {\n        r: r,\n        theta: theta\n    };\n    return polar;\n}\nvar numbers = {\n    real: 3,\n    imaginary: 4\n};",
    "    var a = numbers[0];\n    var b = numbers[1];\n    var r = Math.sqrt(a*a + b*b);\n    var theta = Math.atan(b/a);\n    console.log(r);\n    console.log(theta);\n}\nconvert([1,1]);\n",
    "    var a = numbers[0];\n    var b = numbers[1];\n    var r = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    var theta = Math.atan(b/a);\n    return [r, theta];\n}\n",
    "    var real = numbers.real;\n    var imaginary = numbers.imaginary;\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    console.log(\"The polar coordinates are: \" + r + \" and \" + theta);\n}\n\nconvert({real: 3, imaginary: 4});\n",
    "    var real = numbers[0];\n    var imaginary = numbers[1];\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    return [r,theta];\n}\n",
    "    var real = numbers[0];\n    var imaginary = numbers[1];\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    var result = [r, theta];\n    return result;\n}\n",
    "    var polar = [];\n    for(var i = 0; i < numbers.length; i++){\n        var x = numbers[i][0];\n        var y = numbers[i][1];\n        var r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n        var theta = Math.atan(y/x);\n        polar.push([r, theta]);\n    }\n    return polar;\n}\n\nvar numbers = [[1, 2], [3, 4], [5, 6]];",
    "    var real = numbers[0];\n    var imaginary = numbers[1];\n    var r = Math.sqrt(Math.pow(real,2) + Math.pow(imaginary,2));\n    var theta = Math.atan(imaginary/real);\n    var polar = [r,theta];\n    return polar;\n}\n",
    "    var real = numbers[0];\n    var imaginary = numbers[1];\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    return [r, theta];\n}\n",
    "    var a = numbers[0];\n    var b = numbers[1];\n    var r = Math.sqrt(a*a + b*b);\n    var phi = Math.atan(b/a);\n    return [r, phi];\n}\n",
    "    var real = numbers.real;\n    var imaginary = numbers.imaginary;\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    var polar = {\n        r: r,\n        theta: theta\n    };\n    return polar;\n}\n\nvar numbers = {\n    real: 3,\n    imaginary: 4\n};\n",
    "    var real = numbers.real;\n    var imag = numbers.imag;\n    var r = Math.sqrt(real*real + imag*imag);\n    var theta = Math.atan(imag/real);\n    return {r:r, theta:theta};\n}\n",
    "    var a = numbers.real;\n    var b = numbers.imaginary;\n    var r = Math.sqrt(a*a + b*b);\n    var theta = Math.atan(b/a);\n    return [r,theta];\n}\n",
    "    var real = numbers.real;\n    var imaginary = numbers.imaginary;\n    var r = Math.sqrt(real*real+imaginary*imaginary);\n    var theta = Math.atan2(imaginary,real);\n    return [r,theta];\n}",
    "    var r = Math.sqrt(numbers.real * numbers.real + numbers.imaginary * numbers.imaginary);\n    var theta = Math.atan(numbers.imaginary / numbers.real);\n    return {r: r, theta: theta};\n}\n",
    "    var real = numbers.real;\n    var imaginary = numbers.imaginary;\n    var r = Math.sqrt(Math.pow(real,2) + Math.pow(imaginary,2));\n    var theta = Math.atan(imaginary/real);\n    return {r: r, theta: theta};\n}\n",
    "    var real = numbers.real;\n    var imaginary = numbers.imaginary;\n    var r = Math.sqrt(Math.pow(real, 2) + Math.pow(imaginary, 2));\n    var theta = Math.atan(imaginary/real);\n    return {r: r, theta: theta};\n}",
    "    var complex = numbers.split(',');\n    var real = complex[0];\n    var imaginary = complex[1];\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    return [r, theta];\n}\n",
    "    var real = numbers[0];\n    var imaginary = numbers[1];\n    var r = Math.sqrt(real*real + imaginary*imaginary);\n    var theta = Math.atan(imaginary/real);\n    return [r, theta];\n}\n",
    "    var real = numbers[0];\n    var imaginary = numbers[1];\n    var r = Math.sqrt(Math.pow(real,2)+Math.pow(imaginary,2));\n    var theta = Math.atan(imaginary/real);\n    return [r,theta];\n}"
  ]
}
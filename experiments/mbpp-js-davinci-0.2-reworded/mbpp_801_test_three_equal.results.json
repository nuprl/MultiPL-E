{
  "name": "mbpp_801_test_three_equal",
  "language": "js",
  "prompt": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x==y && y==z){\n        return 3;\n    }\n    else if(x==y || y==z || x==z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || x == z)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || z == x){\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    } else if (x == y || y == z || x == z) {\n        return 2;\n    } else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x === y && y === z){\n        return 3;\n    }\n    else if(x === y || y === z || x === z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || z == x){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7ck2e6v0.js:13:10)\n    at Object.<anonymous> (/tmp/tmp7ck2e6v0.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpjuy0c1w1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpjuy0c1w1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || x == z || y == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || z == x){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x === y && y === z){\n        return 30;\n    }\n    else{\n        return 20;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpgw4q11oh.js:15:10)\n    at Object.<anonymous> (/tmp/tmpgw4q11oh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z)\n        return 3;\n    else if(x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z)\n        return 3;\n    else if(x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && x == z){\n        return 3;\n    }\n    else if(x == y || x == z || y == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x==y && y==z){\n        return 3;\n    }\n    else if(x==y || y==z || x==z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpz07etzkj.js:14:10)\n    at Object.<anonymous> (/tmp/tmpz07etzkj.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x==y && y==z){\n        return 3;\n    }\n    else if(x==y || y==z || z==x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    } else if (x == y || y == z || x == z) {\n        return 2;\n    } else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && x == z){\n        return 3;\n    }\n    else if(x == y || x == z || y == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x === y && y === z){\n        return 30;\n    }\n    else{\n        return 20;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpgw4q11oh.js:15:10)\n    at Object.<anonymous> (/tmp/tmpgw4q11oh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x === y && y === z){\n        return 30;\n    }\n    else{\n        return 20;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpgw4q11oh.js:15:10)\n    at Object.<anonymous> (/tmp/tmpgw4q11oh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    } else if (x == y || y == z || z == x) {\n        return 2;\n    } else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || x == z)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpjuy0c1w1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpjuy0c1w1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || z == x){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    } else if (x == y || y == z || x == z) {\n        return 2;\n    } else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n\tif(x == y && y == z){\n\t\treturn 3;\n\t}else if(x == y || y == z || x == z){\n\t\treturn 2;\n\t}else{\n\t\treturn 0;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || x == z)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return \"3\";\n    }\n    else if(x == y || y == z || x == z){\n        return \"2\";\n    }\n    else{\n        return \"0\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && x == z) {\n        return 3;\n    }\n    if (x == y || x == z || y == z) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7ck2e6v0.js:13:10)\n    at Object.<anonymous> (/tmp/tmp7ck2e6v0.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || z == x){\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    } else if (x == y || y == z || x == z) {\n        return 2;\n    } else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x === y && y === z){\n        return 3;\n    }\n    else if(x === y || y === z || x === z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123440,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || x == z){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    if(x == y || y == z || z == x){\n        return 2;\n    }\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1665510281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if(x == y && y == z){\n        return 3;\n    }\n    else if(x == y || y == z || z == x){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z){\n        return 3;\n    }\n    else if (x == y || y == z || x == z){\n        return 2;\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to count the number of equal numbers from three given integers.\nfunction test_three_equal(x, y, z){\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = test_three_equal;\n  assert.deepEqual(candidate(1, 1, 1),3);\n  assert.deepEqual(candidate(-1, -2, -3),0);\n  assert.deepEqual(candidate(1, 2, 2),2);\n}\n\ntest();",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
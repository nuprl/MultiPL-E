{
  "name": "mbpp_747_lcs_of_three",
  "language": "js",
  "prompt": "//Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three(X, Y, Z){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = lcs_of_three;\n  assert.deepEqual(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\"),2);\n  assert.deepEqual(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\"),5);\n  assert.deepEqual(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\"),3);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i - 1] == Y[j - 1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i - 1][j - 1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i - 1][j][k], L[i][j - 1][k]),L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = new Array(m+1);\n    for(let i=0; i<=m; i++){\n        L[i] = new Array(n+1);\n        for(let j=0; j<=n; j++){\n            L[i][j] = new Array(o+1);\n            for(let k=0; k<=o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i=0; i<=m; i++){\n        for(let j=0; j<=n; j++){\n            for(let k=0; k<=o; k++){\n                if(i==0 || j==0 || k==0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1]==Y[j-1] && X[i-1]==Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i-1] == Y[j-1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i-1][j][k], L[i][j-1][k]),L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0 || k == 0) {\n                    L[i][j][k] = 0;\n                } else if (X[i - 1] == Y[j - 1] && X[i - 1] == Z[k - 1]) {\n                    L[i][j][k] = L[i - 1][j - 1][k - 1] + 1;\n                } else {\n                    L[i][j][k] = Math.max(L[i - 1][j][k], L[i][j - 1][k], L[i][j][k - 1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i - 1] == Y[j - 1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i - 1][j - 1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i - 1][j][k], L[i][j - 1][k]),L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0 || k == 0) {\n                    L[i][j][k] = 0;\n                } else if (X[i-1] == Y[j-1] && X[i-1] == Z[k-1]) {\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                } else {\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = [];\n    for(let i = 0; i <= m; i++){\n        L[i] = [];\n        for(let j = 0; j <= n; j++){\n            L[i][j] = [];\n            for(let k = 0; k <= o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i = 0; i <= m; i++){\n        for(let j = 0; j <= n; j++){\n            for(let k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i - 1] == Y[j - 1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i - 1][j - 1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i - 1][j][k], L[i][j - 1][k]),L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i=0; i<=m; i++) {\n        L[i] = new Array(n+1);\n        for (var j=0; j<=n; j++)\n            L[i][j] = new Array(o+1);\n    }\n    for (var i=0; i<=m; i++) {\n        for (var j=0; j<=n; j++) {\n            for (var k=0; k<=o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i-1] == Y[j-1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i-1][j][k], L[i][j-1][k]),L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for(var i = 0; i <= m; i++){\n        L[i] = new Array(n+1);\n        for(var j = 0; j <= n; j++){\n            L[i][j] = new Array(o+1);\n            for(var k = 0; k <= o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(var i = 0; i <= m; i++){\n        for(var j = 0; j <= n; j++){\n            for(var k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = new Array(m+1).fill(0).map(() => new Array(n+1).fill(0).map(() => new Array(o+1).fill(0)));\n    for(let i = 0; i <= m; i++){\n        for(let j = 0; j <= n; j++){\n            for(let k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = [];\n    for(let i = 0; i <= m; i++){\n        L[i] = [];\n        for(let j = 0; j <= n; j++){\n            L[i][j] = [];\n            for(let k = 0; k <= o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i = 0; i <= m; i++){\n        for(let j = 0; j <= n; j++){\n            for(let k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (var j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (var k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (var i = 0; i <= m; i++) {\n        for (var j = 0; j <= n; j++) {\n            for (var k = 0; k <= o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i - 1] == Y[j - 1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i - 1][j - 1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i - 1][j][k],\n                        L[i][j - 1][k]),\n                        L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = [];\n    for(let i = 0; i <= m; i++){\n        L[i] = [];\n        for(let j = 0; j <= n; j++){\n            L[i][j] = [];\n            for(let k = 0; k <= o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i = 0; i <= m; i++){\n        for(let j = 0; j <= n; j++){\n            for(let k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    var m = X.length;\n    var n = Y.length;\n    var o = Z.length;\n    var L = new Array(m+1);\n    for (var i=0; i<=m; i++) {\n        L[i] = new Array(n+1);\n        for (var j=0; j<=n; j++)\n            L[i][j] = new Array(o+1);\n    }\n    for (var i=0; i<=m; i++) {\n        for (var j=0; j<=n; j++) {\n            for (var k=0; k<=o; k++) {\n                if (i == 0 || j == 0||k==0)\n                    L[i][j][k] = 0;\n                else if (X[i-1] == Y[j-1] && X[i-1]==Z[k-1])\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                else\n                    L[i][j][k] = Math.max(Math.max(L[i-1][j][k], L[i][j-1][k]),L[i][j][k-1]);\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = new Array(m+1);\n    for(let i=0; i<=m; i++){\n        L[i] = new Array(n+1);\n        for(let j=0; j<=n; j++){\n            L[i][j] = new Array(o+1).fill(0);\n        }\n    }\n    for(let i=0; i<=m; i++){\n        for(let j=0; j<=n; j++){\n            for(let k=0; k<=o; k++){\n                if(i==0 || j==0 || k==0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1]==Y[j-1] && X[i-1]==Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = new Array(m+1);\n    for (let i = 0; i <= m; i++) {\n        L[i] = new Array(n+1);\n        for (let j = 0; j <= n; j++) {\n            L[i][j] = new Array(o+1);\n            for (let k = 0; k <= o; k++) {\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for (let i = 0; i <= m; i++) {\n        for (let j = 0; j <= n; j++) {\n            for (let k = 0; k <= o; k++) {\n                if (i == 0 || j == 0 || k == 0) {\n                    L[i][j][k] = 0;\n                } else if (X[i-1] == Y[j-1] && X[i-1] == Z[k-1]) {\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                } else {\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = new Array(m+1);\n    for(let i = 0; i <= m; i++){\n        L[i] = new Array(n+1);\n        for(let j = 0; j <= n; j++){\n            L[i][j] = new Array(o+1);\n            for(let k = 0; k <= o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i = 0; i <= m; i++){\n        for(let j = 0; j <= n; j++){\n            for(let k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = new Array(m+1);\n    for(let i=0; i<=m; i++){\n        L[i] = new Array(n+1);\n        for(let j=0; j<=n; j++){\n            L[i][j] = new Array(o+1);\n            for(let k=0; k<=o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i=0; i<=m; i++){\n        for(let j=0; j<=n; j++){\n            for(let k=0; k<=o; k++){\n                if(i==0 || j==0 || k==0){\n                    L[i][j][k] = 0;\n                }\n                else if(X[i-1] == Y[j-1] && X[i-1] == Z[k-1]){\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1;\n                }\n                else{\n                    L[i][j][k] = Math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n",
    "    let m = X.length;\n    let n = Y.length;\n    let o = Z.length;\n    let L = [];\n    for(let i = 0; i <= m; i++){\n        L[i] = [];\n        for(let j = 0; j <= n; j++){\n            L[i][j] = [];\n            for(let k = 0; k <= o; k++){\n                L[i][j][k] = 0;\n            }\n        }\n    }\n    for(let i = 0; i <= m; i++){\n        for(let j = 0; j <= n; j++){\n            for(let k = 0; k <= o; k++){\n                if(i == 0 || j == 0 || k == 0){\n                    L[i][j][k] = 0;\n                }else if(X[i - 1] == Y[j - 1] && X[i - 1] == Z[k - 1]){\n                    L[i][j][k] = L[i - 1][j - 1][k - 1] + 1;\n                }else{\n                    L[i][j][k] = Math.max(L[i - 1][j][k], L[i][j - 1][k], L[i][j][k - 1]);\n                }\n            }\n        }\n    }\n    return L[m][n][o];\n}\n"
  ]
}
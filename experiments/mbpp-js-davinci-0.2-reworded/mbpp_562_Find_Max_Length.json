{
  "name": "mbpp_562_Find_Max_Length",
  "language": "js",
  "prompt": "//Write a jsthon function to find the length of the longest subarrays.\nfunction Find_Max_Length(lst){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Find_Max_Length;\n  assert.deepEqual(candidate([[1], [1, 4], [5, 6, 7, 8]]),4);\n  assert.deepEqual(candidate([[0, 1], [2, 2], [3, 2, 1]]),3);\n  assert.deepEqual(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]),5);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var max_len = 0;\n    var temp_len = 0;\n    var dict = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_len += 1;\n        }\n        else{\n            temp_len -= 1;\n        }\n        if(temp_len == 0){\n            max_len = i+1;\n        }\n        if(dict[temp_len] == undefined){\n            dict[temp_len] = i;\n        }\n        else{\n            if(max_len < i - dict[temp_len]){\n                max_len = i - dict[temp_len];\n            }\n        }\n    }\n    return max_len;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while (i < lst.length){\n        if (lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length++;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        i++;\n    }\n    return max_length;\n}\n\nvar lst = [1,0,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,1,1,0,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,0,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i;\n    for(i=0;i<lst.length;i++){\n        if(lst[i]==0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,1,0,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var current_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            current_length = 0;\n        }\n        else{\n            current_length += 1;\n            max_length = Math.max(max_length, current_length);\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i;\n    for(i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,",
    "    var max_length = 0;\n    var max_length_arr = [];\n    for(var i=0; i<lst.length; i++){\n        var length = 0;\n        var arr = [];\n        for(var j=i; j<lst.length; j++){\n            if(lst[j] == 0){\n                length = length + 1;\n                arr.push(lst[j]);\n            }\n            else{\n                length = length - 1;\n                arr.push(lst[j]);\n            }\n            if(length == 0){\n                if(max_length < arr.length){\n                    max_length = arr.length;\n                    max_length_arr = arr;\n                }\n            }\n        }\n    }\n    return max_length_arr;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    var hash_map = {};\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            current_length += 1;\n        }\n        else{\n            current_length -= 1;\n        }\n        if(current_length == 0){\n            max_length = i + 1;\n        }\n        if(hash_map[current_length] == undefined){\n            hash_map[current_length] = i;\n        }\n        else{\n            if(max_length < i - hash_map[current_length]){\n                max_length = i - hash_map[current_length];\n            }\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            length = 0;\n        }\n        else{\n            length++;\n            if(length > max_length){\n                max_length = length;\n            }\n        }\n        i++;\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var temp_len = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_len = 0;\n        }\n        else{\n            temp_len += 1;\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n        }\n        i += 1;\n    }\n    return max_len;\n}\n\nvar lst = [1,0,0,1,1,0,1,1,1,0,1,1,1];",
    "    var max_length = 0;\n    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}\nvar lst = [0,1,1,0,1,1,1,0,1,1];",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max = Math.max(max, count);\n        }\n    }\n    return max;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,1,0,1,1,1,0,1,1,0,0,0,1,1,1,1];",
    "    var max_length = 0;\n    var start_index = 0;\n    var end_index = 0;\n    var sum = 0;\n    var n = lst.length;\n    for(var i = 0; i < n; i++){\n        sum += lst[i];\n        if(sum == 0){\n            end_index = i;\n            var length = end_index - start_index + 1;\n            if(length > max_length){\n                max_length = length;\n            }\n        }\n        if(sum < 0){\n            sum = 0;\n            start_index = i + 1;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            length += 1;\n        }\n        else{\n            length = 0;\n        }\n        if(length > max_length){\n            max_length = length;\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 1, 1, 1, 0, 0];\nvar max_length = Find_Max_Length(lst);",
    "    var max_len = 0;\n    var count = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            count++;\n        }\n        if(count == 2){\n            while(lst[j] != 0){\n                j++;\n            }\n            j++;\n            count--;\n        }\n        max_len = Math.max(max_len, i - j + 1);\n        i++;\n    }\n    return max_len;\n}\n\nvar lst = [0, 1, 0, 0, 1, 1, 0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] == 0) {\n            temp_length = 0;\n        } else {\n            temp_length += 1;\n            if (temp_length > max_length) {\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            temp_length = 0;\n        }\n        if(temp_length > max_length){\n            max_length = temp_length;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            temp_length = 0;\n        }\n        if(temp_length > max_length){\n            max_length = temp_length;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            count += 1;\n        }\n        else{\n            count = 0;\n        }\n        if(count > max_length){\n            max_length = count;\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var length = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length && j < lst.length){\n        if(lst[i] == lst[j]){\n            length = j - i + 1;\n            if(length > max_length){\n                max_length = length;\n            }\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,2,3,2,1,4,5,6,7,8,9,10,11,12,13,14,15];\nvar max_length = Find_Max_Length(lst);",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] == 0) {\n            temp_length += 1;\n        }\n        else {\n            if (temp_length > max_length) {\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,1,1,1,0,0];",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(count, max_length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            current_length = 0;\n        }\n        else{\n            current_length += 1;\n            max_length = Math.max(max_length, current_length);\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var curr_len = 0;\n    var i;\n    for(i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            curr_len = 0;\n        }\n        else{\n            curr_len += 1;\n            max_len = Math.max(max_len,curr_len);\n        }\n    }\n    return max_len;\n}\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            length = 0;\n        }\n        else{\n            length += 1;\n            max_length = Math.max(max_length, length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var start = 0;\n    var end = 0;\n    var hash_map = {};\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            lst[i] = -1;\n        }\n    }\n    for(var i = 0; i < lst.length; i++){\n        sum = sum + lst[i];\n        if(sum == 0){\n            max_length = i + 1;\n            end = i;\n        }\n        if(hash_map[sum + lst.length] != null){\n            if(max_length < i - hash_map[sum + lst.length]){\n                max_length = i - hash_map[sum + lst.length];\n                end = i;\n                start = hash_map[sum + lst.length] + 1;\n            }\n        }else{\n            hash_map[sum + lst.length] = i;\n        }\n    }\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == -1){\n            lst[i] = 0;\n        }\n    }\n    console.log(\"The longest subarray is: \");\n    for(var i = start; i <= end; i++){\n        console.log(lst[i]);\n    }\n}\nFind_Max_Length([1, 0, 0, 1, 0, 1, 1]);\nFind_Max_Length([1, 0, 1, 0, 1, 1, 0]);\nFind_Max_Length([1, 1, 1, 1]);\nFind_Max_Length([0, 0, 1, 1, 0]);",
    "    var max_length = 0;\n    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length && j < lst.length){\n        if(lst[i] == lst[j]){\n            count = j - i + 1;\n            if(count > max_length){\n                max_length = count;\n            }\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,2,3,4,5,6,7,8,9,10];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    var dict = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            lst[i] = -1;\n        }\n    }\n    for(var i=0; i<lst.length; i++){\n        current_length += lst[i];\n        if(current_length == 0){\n            max_length = i+1;\n        }\n        if(dict[current_length] != null){\n            max_length = Math.max(max_length, i-dict[current_length]);\n        }\n        else{\n            dict[current_length] = i;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            max_length = Math.max(max_length,temp_length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var curr_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            curr_length = 0;\n        }\n        else{\n            curr_length += 1;\n            max_length = Math.max(max_length, curr_length);\n        }\n        i += 1;\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i;\n    for(i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1];",
    "    var max_length = 0;\n    var start = 0;\n    var end = 0;\n    var n = lst.length;\n    var map = {};\n    for (var i = 0; i < n; i++) {\n        if (map[lst[i]] != null) {\n            start = Math.max(start, map[lst[i]] + 1);\n        }\n        map[lst[i]] = i;\n        max_length = Math.max(max_length, i - start + 1);\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var temp_len = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_len += 1;\n        }\n        else{\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n            temp_len = 0;\n        }\n    }\n    return max_len;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            max_length = Math.max(max_length, temp_length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var start = 0;\n    var end = 0;\n    var hash = {};\n    for(var i = 0; i < lst.length; i++){\n        if(hash[lst[i]] == undefined){\n            hash[lst[i]] = i;\n        }\n        else{\n            if(max_length < i - start){\n                max_length = i - start;\n                end = i;\n            }\n            start = hash[lst[i]] + 1;\n            hash[lst[i]] = i;\n        }\n    }\n    return lst.slice(end - max_length, end + 1);\n}\n\nvar lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,",
    "    var max_len = 0;\n    var temp_len = 0;\n    var i;\n    for(i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_len = 0;\n        }\n        else{\n            temp_len += 1;\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n        }\n    }\n    return max_len;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    var hash_map = {};\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] == 0) {\n            current_length += 1;\n        }\n        else {\n            current_length -= 1;\n        }\n        if (current_length == 0) {\n            max_length = i + 1;\n        }\n        if (hash_map[current_length] == null) {\n            hash_map[current_length] = i;\n        }\n        else {\n            if (max_length < i - hash_map[current_length]) {\n                max_length = i - hash_map[current_length];\n            }\n        }\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var max_len_arr = [];\n    var temp_len = 0;\n    var temp_len_arr = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_len_arr.push(lst[i]);\n            temp_len += 1;\n        }\n        else{\n            if(temp_len > max_len){\n                max_len = temp_len;\n                max_len_arr = temp_len_arr;\n            }\n            temp_len = 0;\n            temp_len_arr = [];\n        }\n    }\n    return max_len_arr;\n}\n\nvar lst = [1,0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i;\n    for(i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}\nvar lst = [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
    "    var max_len = 0;\n    var len = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            len = 0;\n            i++;\n        }\n        else{\n            len++;\n            i++;\n            if(len > max_len){\n                max_len = len;\n            }\n        }\n    }\n    return max_len;\n}\nvar lst = [1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length = 0;\n    var current_length = 0;\n    var dict = {};\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            current_length += 1;\n        }\n        else{\n            current_length -= 1;\n        }\n        if(current_length == 0){\n            max_length = i + 1;\n        }\n        if(dict[current_length] == null){\n            dict[current_length] = i;\n        }\n        else{\n            max_length = Math.max(max_length, i - dict[current_length]);\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var curr_length = 0;\n    var hash = {};\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            lst[i] = -1;\n        }\n    }\n    for(var i=0;i<lst.length;i++){\n        curr_length += lst[i];\n        if(curr_length == 0){\n            max_length = i+1;\n        }\n        if(hash[curr_length] != undefined){\n            if(max_length < i-hash[curr_length]){\n                max_length = i-hash[curr_length];\n            }\n        }else{\n            hash[curr_length] = i;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,0,0];",
    "    var max_len = 0;\n    var temp_len = 0;\n    var i;\n    for(i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_len = 0;\n        }\n        else{\n            temp_len += 1;\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n        }\n    }\n    return max_len;\n}\nvar lst = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            length = 0;\n        }\n        else{\n            length += 1;\n            max_length = Math.max(max_length,length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < lst.length && j < lst.length){\n        if(lst[i] == lst[j]){\n            count++;\n            if(count > max_length){\n                max_length = count;\n            }\n            j++;\n        }\n        else{\n            i = j;\n            count = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var start = 0;\n    var end = 0;\n    var hash_map = {};\n    for(var i = 0; i < lst.length; i++){\n        if(hash_map[lst[i]] == undefined){\n            hash_map[lst[i]] = i;\n        }\n        else{\n            if(hash_map[lst[i]] >= start){\n                start = hash_map[lst[i]] + 1;\n            }\n            hash_map[lst[i]] = i;\n        }\n        end = i;\n        max_length = Math.max(max_length, end - start + 1);\n    }\n    return max_length;\n}\n\nvar lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] == 1) {\n            temp_length += 1;\n        } else {\n            if (temp_length > max_length) {\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,1,1,0,1,0,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var count = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length && j < lst.length){\n        if(lst[i] == lst[j]){\n            count = j - i + 1;\n            if(count > max_len){\n                max_len = count;\n            }\n            j++;\n        }\n        else{\n            i = j;\n        }\n    }\n    return max_len;\n}",
    "    var max_length = 0;\n    var curr_length = 0;\n    var dict = {};\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]==0){\n            curr_length += -1;\n        }\n        else{\n            curr_length += 1;\n        }\n        if(curr_length == 0){\n            max_length = i+1;\n        }\n        if(curr_length in dict){\n            max_length = Math.max(max_length,i-dict[curr_length]);\n        }\n        else{\n            dict[curr_length] = i;\n        }\n    }\n    return max_length;\n}\nvar lst = [0,0,1,0,1,0,0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            temp_length = 0;\n        }\n        if(temp_length > max_length){\n            max_length = temp_length;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_len = 0;\n    var temp_len = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_len = 0;\n        }\n        else{\n            temp_len += 1;\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n        }\n        i += 1;\n    }\n    return max_len;\n}",
    "    var max_length = 0;\n    var curr_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            curr_length = 0;\n        }\n        else{\n            curr_length += 1;\n            max_length = Math.max(max_length, curr_length);\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        else{\n            temp_length = 0;\n        }\n        i += 1;\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 1){\n            count += 1;\n        }\n        else{\n            count = 0;\n        }\n        if(count > max_length){\n            max_length = count;\n        }\n    }\n    return max_length;\n}",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max = Math.max(max, count);\n        }\n    }\n    return max;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            current_length = 0;\n        }\n        else{\n            current_length += 1;\n            max_length = Math.max(max_length, current_length);\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var current_length = 0;\n    var dict = {};\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            current_length += 1;\n        }\n        else{\n            current_length -= 1;\n        }\n        if(current_length == 0){\n            max_length = i + 1;\n        }\n        if(current_length in dict){\n            max_length = Math.max(max_length, i - dict[current_length]);\n        }\n        else{\n            dict[current_length] = i;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 1){\n            length += 1;\n        }\n        else{\n            length = 0;\n        }\n        if(max_length < length){\n            max_length = length;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i;\n    for(i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,0,0,1,1,0,1,1,0,0,0,1,1,1,1];\nvar result = Find_Max_Length(lst);",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n            j = i;\n            while(j < lst.length){\n                if(lst[j] == 1){\n                    temp_length += 1;\n                }\n                else{\n                    break;\n                }\n                j += 1;\n            }\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            i = j;\n        }\n        else{\n            i += 1;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0, 0, 1, 0, 1, 1, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    var max_len = 0;\n    var len = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            len = 0;\n            i++;\n        }\n        else{\n            len++;\n            i++;\n            if(len > max_len){\n                max_len = len;\n            }\n        }\n    }\n    return max_len;\n}\nvar lst = [1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    var max_length = 0;\n    var length = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            j = i;\n            while(j < lst.length){\n                if(lst[j] == 1){\n                    break;\n                }\n                length += 1;\n                j += 1;\n            }\n            if(length > max_length){\n                max_length = length;\n            }\n            length = 0;\n            i = j;\n        }\n        i += 1;\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,0,0];",
    "    var max_length = 0;\n    var current_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            current_length += 1;\n        }\n        else{\n            if(max_length < current_length){\n                max_length = current_length;\n            }\n            current_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    let max_len = 0;\n    let curr_len = 0;\n    let hash = {};\n    for(let i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            curr_len += -1;\n        }\n        else{\n            curr_len += 1;\n        }\n        if(curr_len == 0){\n            max_len = i+1;\n        }\n        if(hash.hasOwnProperty(curr_len)){\n            max_len = Math.max(max_len,i-hash[curr_len]);\n        }\n        else{\n            hash[curr_len] = i;\n        }\n    }\n    return max_len;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while (i < lst.length){\n        if (lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n        i += 1;\n    }\n    return max_length;\n}\nvar lst = [1,1,0,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var length = 0;\n    var i = 0;\n    var j = 0;\n    while(i<lst.length){\n        if(lst[i] == 0){\n            length = 0;\n            j = i;\n            while(j<lst.length){\n                if(lst[j] == 1){\n                    length += 1;\n                }\n                else{\n                    break;\n                }\n                j += 1;\n            }\n            if(length > max_length){\n                max_length = length;\n            }\n            i = j;\n        }\n        i += 1;\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        else{\n            temp_length = 0;\n        }\n        i += 1;\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,1,1,0,0,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1",
    "    var max_length = 0;\n    var current_length = 0;\n    var hash = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            current_length += 1;\n        }\n        else{\n            current_length -= 1;\n        }\n        if(current_length == 0){\n            max_length = i+1;\n        }\n        if(hash[current_length] == undefined){\n            hash[current_length] = i;\n        }\n        else{\n            if(max_length < i - hash[current_length]){\n                max_length = i - hash[current_length];\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0, 0, 1, 0, 1, 0, 0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n        i += 1;\n    }\n    return max_length;\n}\n\nvar lst = [1,0,1,1,1,0,0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    var hash_map = {};\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            lst[i] = -1;\n        }\n    }\n    for(var i = 0; i < lst.length; i++){\n        current_length += lst[i];\n        if(current_length == 0){\n            max_length = i + 1;\n        }\n        if(hash_map[current_length + ''] != null){\n            if(max_length < i - hash_map[current_length + '']){\n                max_length = i - hash_map[current_length + ''];\n            }\n        }else{\n            hash_map[current_length + ''] = i;\n        }\n    }\n    return max_length;\n}\nvar lst = [0, 0, 1, 0, 1, 0, 0];",
    "    var max_length = 0;\n    var length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            length = 0;\n        }\n        else{\n            length += 1;\n            max_length = Math.max(max_length, length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        i += 1;\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,1,1,0,1,0,1,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1,0,1,1,1,1,0,0,0,1,1,1,1];",
    "    var max_length = 0;\n    var len = lst.length;\n    for(var i=0; i<len; i++){\n        var count = 0;\n        for(var j=i; j<len; j++){\n            if(lst[i] == lst[j]){\n                count++;\n            }\n            else{\n                break;\n            }\n        }\n        if(count > max_length){\n            max_length = count;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length=0;\n    var count=0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]==0){\n            count=count+1;\n        }\n        else{\n            count=count-1;\n        }\n        if(count==0){\n            max_length=i+1;\n        }\n    }\n    return max_length;\n}\nvar lst=[0,0,1,0,1,0,0];\nvar result=Find_Max_Length(lst);",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var count = 0;\n    var hash_map = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            count = count - 1;\n        }\n        else{\n            count = count + 1;\n        }\n        if(count == 0){\n            max_length = i + 1;\n        }\n        if(hash_map[count] == null){\n            hash_map[count] = i;\n        }\n        else{\n            if(max_length < i - hash_map[count]){\n                max_length = i - hash_map[count];\n            }\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0, 0, 1, 0, 1, 0, 0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            temp_length = 0;\n        }\n        if(temp_length > max_length){\n            max_length = temp_length;\n        }\n    }\n    return max_length;\n}\nvar lst = [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] == 0) {\n            temp_length += 1;\n        } else {\n            temp_length = 0;\n        }\n        if (temp_length > max_length) {\n            max_length = temp_length;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i;\n    for(i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_len = 0;\n    var temp_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_len = 0;\n        }\n        else{\n            temp_len += 1;\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n        }\n    }\n    return max_len;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,1,0,1,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
    "    var max_length = 0;\n    var curr_length = 0;\n    var dict = {0: -1};\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            curr_length += -1;\n        }\n        else{\n            curr_length += 1;\n        }\n        if(dict.hasOwnProperty(curr_length)){\n            max_length = Math.max(max_length, i-dict[curr_length]);\n        }\n        else{\n            dict[curr_length] = i;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,0,0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1,1,1,0,1,1,0,0,0,1,1,1,1];",
    "    var max_length = 0;\n    var length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 1){\n            length += 1;\n        }\n        else{\n            length = 0;\n        }\n        if(length > max_length){\n            max_length = length;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    while (i < lst.length){\n        if (lst[i] == 0){\n            count = 0;\n            i++;\n            while (i < lst.length && lst[i] == 0){\n                count++;\n                i++;\n            }\n            if (count > max_length){\n                max_length = count;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_len = 0;\n    var temp_len = 0;\n    var dict = {};\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_len += 1;\n        }\n        else{\n            temp_len -= 1;\n        }\n        if(temp_len == 0){\n            max_len = i + 1;\n        }\n        if(dict.hasOwnProperty(temp_len)){\n            if(max_len < i - dict[temp_len]){\n                max_len = i - dict[temp_len];\n            }\n        }\n        else{\n            dict[temp_len] = i;\n        }\n    }\n    return max_len;\n}\nvar lst = [0, 0, 1, 0, 1, 0, 0];",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 1){\n            count++;\n        }\n        else{\n            count = 0;\n        }\n        if(count > max_length){\n            max_length = count;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            count += 1;\n        }\n        else{\n            count -= 1;\n        }\n        if(count == 0){\n            max_length = Math.max(max_length, i - j + 1);\n        }\n        else if(count < 0){\n            j = i + 1;\n            count = 0;\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,1,0,1,0,1,1,1,1,0,0,0,1,1,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max = Math.max(max, count);\n        }\n    }\n    return max;\n}\n\nvar lst = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
    "    var max_length = 0;\n    var length = 0;\n    var i = 0;\n    var j = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            length += 1;\n        }\n        else{\n            length -= 1;\n        }\n        if(length == 0){\n            max_length = Math.max(max_length, i - j + 1);\n        }\n        if(length < 0){\n            length = 0;\n            j = i + 1;\n        }\n        i += 1;\n    }\n    return max_length;\n}\nvar lst = [0,0,1,0,1,0,0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            temp_length += 1;\n        }\n        else{\n            temp_length = 0;\n        }\n        if(temp_length > max_length){\n            max_length = temp_length;\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        i += 1;\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            max_length = Math.max(max_length, temp_length);\n        }\n        i++;\n    }\n    return max_length;\n}\nvar lst = [1, 0, 1, 1, 1, 0, 0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_len = 0;\n    var temp_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_len += 1;\n        }\n        else{\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n            temp_len = 0;\n        }\n    }\n    return max_len;\n}\n\nvar lst = [1,0,0,1,0,1,1];",
    "    var max_len = 0;\n    var start = 0;\n    var end = 0;\n    var len = 0;\n    var dict = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            lst[i] = -1;\n        }\n    }\n    for(var i=0; i<lst.length; i++){\n        len += lst[i];\n        if(len == 0){\n            end = i;\n            var len_new = end - start + 1;\n            if(len_new > max_len){\n                max_len = len_new;\n            }\n        }\n        if(dict[len + \"\"] == null){\n            dict[len + \"\"] = i;\n        }\n        else{\n            var len_new = i - dict[len + \"\"];\n            if(len_new > max_len){\n                max_len = len_new;\n            }\n        }\n    }\n    return max_len;\n}\n\nvar lst = [0, 0, 1, 0, 1, 0, 0];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,1,0,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length = 0;\n    var current_length = 0;\n    var hash_map = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            current_length += 1;\n        }\n        else{\n            current_length -= 1;\n        }\n        if(current_length == 0){\n            max_length = i+1;\n        }\n        if(hash_map[current_length] == undefined){\n            hash_map[current_length] = i;\n        }\n        else{\n            if(max_length < i - hash_map[current_length]){\n                max_length = i - hash_map[current_length];\n            }\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var temp_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_len += 1;\n        }\n        else{\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n            temp_len = 0;\n        }\n    }\n    return max_len;\n}\n\nvar lst = [1,0,0,1,1,0,1,0,1,1];",
    "    var max_len = 0;\n    var count = 0;\n    var i = 0;\n    var j = 0;\n    for(i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max_len = Math.max(max_len, count);\n        }\n    }\n    return max_len;\n}\nvar lst = [1,1,1,0,0,1,1,1,1,0,1,1,1];",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nvar lst = [1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}\nvar lst = [0,1,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var curr_length = 0;\n    var start_index = 0;\n    var end_index = 0;\n    var i = 0;\n    var j = 0;\n    for(i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            curr_length += 1;\n        }\n        else{\n            curr_length -= 1;\n        }\n        if(curr_length == 0){\n            end_index = i;\n            if(max_length < end_index - start_index + 1){\n                max_length = end_index - start_index + 1;\n            }\n        }\n        else if(curr_length < 0){\n            curr_length = 0;\n            start_index = i + 1;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            count += 1;\n        }\n        else{\n            count -= 1;\n        }\n        if(count == 0){\n            temp_length = i+1;\n        }\n        if(count in lst){\n            temp_length = i - lst[count];\n        }\n        else{\n            lst[count] = i;\n        }\n        max_length = Math.max(max_length, temp_length);\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var current_length = 0;\n    var dict = {};\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] in dict){\n            current_length = i - dict[lst[i]];\n        }\n        else{\n            current_length += 1;\n        }\n        if(current_length > max_length){\n            max_length = current_length;\n        }\n        dict[lst[i]] = i;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if (temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0,1,1,1,0,1,0,0",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1];",
    "    var max_length = 0;\n    var current_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 1){\n            current_length += 1;\n            if(current_length > max_length){\n                max_length = current_length;\n            }\n        }\n        else{\n            current_length = 0;\n        }\n        i += 1;\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    var j = 0;\n    var n = lst.length;\n    for(i = 0; i < n; i++){\n        temp_length = 0;\n        for(j = i; j < n; j++){\n            if(lst[i] == lst[j]){\n                temp_length = temp_length + 1;\n            }\n            else{\n                break;\n            }\n        }\n        if(temp_length > max_length){\n            max_length = temp_length;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,",
    "    var max_length = 0;\n    var count = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max = Math.max(max, count);\n        }\n    }\n    return max;\n}\nvar lst = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1,0,0,1,0,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    var max_length = 0;\n    var current_length = 0;\n    var dict = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] in dict){\n            current_length = i - dict[lst[i]];\n        }\n        else{\n            current_length += 1;\n        }\n        max_length = Math.max(max_length, current_length);\n        dict[lst[i]] = i;\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1,1,1,0,1,1,0,0,0,1,1,1,1];\nvar max_length = Find_Max_Length(lst);",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max = Math.max(max, count);\n        }\n    }\n    return max;\n}\n",
    "    var max = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nvar lst = [1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,0,1,0,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            length = 0;\n        }\n        else{\n            length += 1;\n            max_length = Math.max(max_length, length);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var i = 0;\n    while(i < lst.length){\n        if(lst[i] == 0){\n            temp_length = 0;\n        }\n        else{\n            temp_length += 1;\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n        }\n        i += 1;\n    }\n    return max_length;\n}",
    "    var max_len = 0;\n    var temp_len = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_len = 0;\n        }else{\n            temp_len += 1;\n            if(temp_len > max_len){\n                max_len = temp_len;\n            }\n        }\n    }\n    return max_len;\n}\nvar lst = [1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count += 1;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}",
    "    var max_length = 0;\n    var temp_length = 0;\n    var dict = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            temp_length -= 1;\n        }\n        if(temp_length == 0){\n            max_length = i+1;\n        }\n        if(temp_length in dict){\n            max_length = Math.max(max_length, i-dict[temp_length]);\n        }\n        else{\n            dict[temp_length] = i;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0, 0, 1, 0, 1, 0, 0];",
    "    var max_length = 0;\n    var start = 0;\n    var end = 0;\n    var sum = 0;\n    var n = lst.length;\n    while(end < n){\n        if(lst[end] == 0){\n            sum += -1;\n        }\n        else{\n            sum += 1;\n        }\n        if(sum == 0){\n            max_length = Math.max(max_length, end - start + 1);\n        }\n        if(sum < 0){\n            start = end + 1;\n            sum = 0;\n        }\n        end += 1;\n    }\n    return max_length;\n}\n",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}\nvar lst = [1,0,1,1,0,1,1,1,0,1,1,1,1,1,1];",
    "    var max_length = 0;\n    var temp_length = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            temp_length += 1;\n        }\n        else{\n            if(temp_length > max_length){\n                max_length = temp_length;\n            }\n            temp_length = 0;\n        }\n    }\n    return max_length;\n}\n\nvar lst = [1, 0, 0, 1, 0, 1, 1];",
    "    var max_length = 0;\n    var curr_length = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            curr_length = 0;\n        }\n        else{\n            curr_length += 1;\n            max_length = Math.max(max_length, curr_length);\n        }\n    }\n    return max_length;\n}\n\nvar lst = [0,0,1,0,1,1,1,0,1,1];",
    "    var max_length = 0;\n    var start = 0;\n    var end = 0;\n    var sum = 0;\n    var n = lst.length;\n    for(var i = 0; i < n; i++){\n        sum = sum + lst[i];\n        end = i;\n        if(sum == 0){\n            var len = end - start + 1;\n            if(max_length < len){\n                max_length = len;\n            }\n        }\n        if(sum < 0){\n            sum = 0;\n            start = i + 1;\n        }\n    }\n    return max_length;\n}\nvar lst = [15, -2, 2, -8, 1, 7, 10, 23];\nvar max_length = Find_Max_Length(lst);",
    "    var max_length = 0;\n    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == 0){\n            count = 0;\n        }\n        else{\n            count++;\n            max_length = Math.max(max_length, count);\n        }\n    }\n    return max_length;\n}\nvar lst = [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1];",
    "    var max_len = 0;\n    var len = 0;\n    var dict = {};\n    for(var i=0; i<lst.length; i++){\n        if(lst[i] == 0){\n            lst[i] = -1;\n        }\n    }\n    for(var i=0; i<lst.length; i++){\n        len += lst[i];\n        if(len == 0){\n            max_len = i+1;\n        }\n        if(dict[len+''] != null){\n            max_len = Math.max(max_len, i-dict[len+'']);\n        }else{\n            dict[len+''] = i;\n        }\n    }\n    return max_len;\n}\n"
  ]
}
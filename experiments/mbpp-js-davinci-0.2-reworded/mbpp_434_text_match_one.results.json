{
  "name": "mbpp_434_text_match_one",
  "language": "js",
  "prompt": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_434_text_match_one.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    var result = regex.test(text);\n    if(result == true){\n        return \"Match\";\n    }else{\n        return \"Not Match\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Not Match'\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqy73vhzm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpqy73vhzm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Not Match',\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    var result = regex.test(text);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        console.log(\"Match found\");\n    }else{\n        console.log(\"Match not found\");\n    }\n}\ntext_match_one(\"abbc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "Match found\nMatch not found\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpibedtvny.js:17:10)\n    at Object.<anonymous> (/tmp/tmpibedtvny.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    var result = regex.test(text);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  if (regex.test(text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n\tvar regex = /ab+/;\n\treturn regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  if (regex.test(text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    let regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        console.log(\"Yes, there is a match!\");\n    }else{\n        console.log(\"No match found!\");\n    }\n}\ntext_match_one(\"abb\");\ntext_match_one(\"ab\");\ntext_match_one(\"ac\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "Yes, there is a match!\nYes, there is a match!\nNo match found!\nNo match found!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgnsy6yx6.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgnsy6yx6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpo_e0c3mw.js:11:10)\n    at Object.<anonymous> (/tmp/tmpo_e0c3mw.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    return text.match(/ab+/);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpee1e1u_e.js:10:10)\n    at Object.<anonymous> (/tmp/tmpee1e1u_e.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if (text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        console.log(\"Found a match!\");\n    } else {\n        console.log(\"Did not find a match!\");\n    }\n}\ntext_match_one(\"acb\");\ntext_match_one(\"abb\");\ntext_match_one(\"abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "/tmp/tmp_frrc4k3.js:12\ntext_match_one(\"abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nn\nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if (text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        console.log(\"Yes, there is a match!\");\n    }\n    else{\n        console.log(\"No match found.\");\n    }\n}\ntext_match_one(\"abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "/tmp/tmp7lw_1437.js:11\ntext_match_one(\"abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nn\nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    return text.match(/ab+/);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpee1e1u_e.js:10:10)\n    at Object.<anonymous> (/tmp/tmpee1e1u_e.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  if (regex.test(text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  if (regex.test(text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    let regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqv6238_e.js:12:10)\n    at Object.<anonymous> (/tmp/tmpqv6238_e.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    var result = regex.test(text);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        console.log(\"Yes, there is at least one match!\");\n    } else {\n        console.log(\"No match found.\");\n    }\n}\ntext_match_one(\"abbc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "Yes, there is at least one match!\nNo match found.\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmph6mo5t8y.js:17:10)\n    at Object.<anonymous> (/tmp/tmph6mo5t8y.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var pattern = /ab+/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if (text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)){\n        console.log(\"Yes, there is at least one match!\");\n    } else {\n        console.log(\"No match found.\");\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "No match found.\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnl437w9i.js:16:10)\n    at Object.<anonymous> (/tmp/tmpnl437w9i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  if (regex.test(text)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regexp = /ab+/;\n    if (regexp.test(text)) {\n        console.log(\"Yes, there is at least one match!\");\n    } else {\n        console.log(\"No match!\");\n    }\n}\ntext_match_one(\"abbc\");\ntext_match_one(\"acb\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "Yes, there is at least one match!\nNo match!\nNo match!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxc26q5lr.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxc26q5lr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        console.log(\"Found a match!\");\n    } else {\n        console.log(\"Did not find a match!\");\n    }\n}\ntext_match_one(\"cab\");\ntext_match_one(\"ab\");\ntext_match_one(\"abbc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "Found a match!\nFound a match!\nFound a match!\nDid not find a match!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqa78hj50.js:19:10)\n    at Object.<anonymous> (/tmp/tmpqa78hj50.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var pattern = /ab+/;\n    if (pattern.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    var result = regex.test(text);\n    if(result){\n        return \"Found a match!\";\n    }\n    else{\n        return \"Did not find a match!\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Did not find a match!'\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8fgscz2r.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8fgscz2r.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Did not find a match!',\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        console.log(\"Found a match!\");\n    } else {\n        console.log(\"Did not find a match!\");\n    }\n}\ntext_match_one(\"acb\");\ntext_match_one(\"abb\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "Did not find a match!\nFound a match!\nDid not find a match!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa7w8_52f.js:18:10)\n    at Object.<anonymous> (/tmp/tmpa7w8_52f.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n\tvar regex = /ab+/;\n\tif (regex.test(text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    return text.match(/ab+/);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpee1e1u_e.js:10:10)\n    at Object.<anonymous> (/tmp/tmpee1e1u_e.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    var result = regex.test(text);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n  var regex = /ab+/;\n  return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var pattern = /ab+/;\n    if(pattern.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1666123975,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an a followed by one or more b's.\nfunction text_match_one(text){\n    var regex = /ab+/;\n    if (regex.test(text)) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abba\"),true);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
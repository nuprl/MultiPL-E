{
  "name": "mbpp_257_swap_numbers",
  "language": "js",
  "prompt": "//Write a function that takes in two numbers and returns an array with the second number and then the first number.\nfunction swap_numbers(a, b){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_257_swap_numbers.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = swap_numbers;\n  assert.deepEqual(candidate(10, 20),[20, 10]);\n  assert.deepEqual(candidate(15, 17),[17, 15]);\n  assert.deepEqual(candidate(100, 200),[200, 100]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var temp = a;\n    a = b;\n    b = temp;\n    return [a, b];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b, a);\n    return arr;\n}\n",
    "    var new_array = [b, a];\n    return new_array;\n}",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "  return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b, a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "  return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    var arr = [];\n    arr.push(b, a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "  return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b, a);\n    return arr;\n}",
    "  return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "\treturn [b, a];\n}\n",
    "    return [b, a]\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "\treturn [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "  var arr = [b, a];\n  return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    var arr = [];\n    arr.push(b, a);\n    return arr;\n}\n",
    "    var array = [];\n    array.push(b);\n    array.push(a);\n    return array;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "\tvar arr = [];\n\tarr.push(b);\n\tarr.push(a);\n\treturn arr;\n}\n",
    "    return [b, a];\n}\n",
    "  var arr = [b, a];\n  return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "\tvar arr = [];\n\tarr.push(b);\n\tarr.push(a);\n\treturn arr;\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [b, a];\n    return arr;\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}\n",
    "    return [b, a];\n}\n",
    "    var arr = [];\n    arr.push(b);\n    arr.push(a);\n    return arr;\n}",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "\tvar arr = [b, a];\n\treturn arr;\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a]\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n",
    "    return [b, a];\n}\n"
  ]
}
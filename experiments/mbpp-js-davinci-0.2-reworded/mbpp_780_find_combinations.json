{
  "name": "mbpp_780_find_combinations",
  "language": "js",
  "prompt": "//Write a function to find the combinations of sums with arrays in the given array array. https://www.geeksforgeeks.org/jsthon-combinations-of-sum-with-arrays-in-array-array/\nfunction find_combinations(test_list){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_780_find_combinations.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_combinations;\n  assert.deepEqual(candidate([[2, 4], [6, 7], [5, 1], [6, 10]]),[[8, 11], [7, 5], [8, 14], [11, 8], [12, 17], [11, 11]]);\n  assert.deepEqual(candidate([[3, 5], [7, 8], [6, 2], [7, 11]]),[[10, 13], [9, 7], [10, 16], [13, 10], [14, 19], [13, 13]]);\n  assert.deepEqual(candidate([[4, 6], [8, 9], [7, 3], [8, 12]]),[[12, 15], [11, 9], [12, 18], [15, 12], [16, 21], [15, 15]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n\nvar test_list = [1, 2, 3, 4, 5];",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        temp = [];\n        sum = 0;\n        for(var j = i; j < len; j++){\n            sum += test_list[j];\n            temp.push(test_list[j]);\n            if(sum === 0){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [2, -4, 6, -3, 9];",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        temp = [];\n        sum = 0;\n        for(var j = i; j < len; j++){\n            sum += test_list[j];\n            temp.push(test_list[j]);\n            if(sum == 10){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var sum = 0;\n    for(var i=0;i<test_list.length;i++){\n        sum += test_list[i];\n    }\n    var half_sum = sum/2;\n    var half_sum_list = [];\n    for(var i=0;i<test_list.length;i++){\n        if(test_list[i]<=half_sum){\n            half_sum_list.push(test_list[i]);\n        }\n    }\n    var half_sum_list_length = half_sum_list.length;\n    for(var i=0;i<half_sum_list_length;i++){\n        for(var j=i+1;j<half_sum_list_length;j++){\n            if(half_sum_list[i]+half_sum_list[j]==half_sum){\n                result.push([half_sum_list[i],half_sum_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_set = [];\n    var result_set_index = 0;\n    var result_index = 0;\n    var result_sum = 0;\n    var result_length = 0;\n    var result_set_length = 0;\n    var result_set_sum = 0;\n    var result_set_index = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length =",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i,j,k;\n    for(i=0;i<test_list.length;i++){\n        for(j=i+1;j<test_list.length;j++){\n            for(k=j+1;k<test_list.length;k++){\n                if(test_list[i]+test_list[j]+test_list[k]==0){\n                    result.push([test_list[i],test_list[j],test_list[k]]);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var arr = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] instanceof Array){\n            arr = test_list[i];\n            sum = 0;\n            for(var j = 0; j < arr.length; j++){\n                sum += arr[j];\n            }\n            result.push(sum);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                temp = [];\n                temp.push(test_list[i]);\n                temp.push(test_list[j]);\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_set = [];\n    var result_set_index = 0;\n    var result_set_index_2 = 0;\n    var result_set_index_3 = 0;\n    var result_set_index_4 = 0;\n    var result_set_index_5 = 0;\n    var result_set_index_6 = 0;\n    var result_set_index_7 = 0;\n    var result_set_index_8 = 0;\n    var result_set_index_9 = 0;\n    var result_set_index_10 = 0;\n    var result_set_index_11 = 0;\n    var result_set_index_12 = 0;\n    var result_set_index_13 = 0;\n    var result_set_index_14 = 0;\n    var result_set_index_15 = 0;\n    var result_set_index_16 = 0;\n    var result_set_index_17 = 0;\n    var result_set_index_18 = 0;\n    var result_set_index_19 = 0;\n    var result_set_index_20 = 0;\n    var result_set_index_21 = 0;\n    var result_set_index_22 = 0;\n    var result_set_index_23 = 0;\n    var result_set_index_24 = 0;\n    var result_set_index_25 = 0;\n    var result_set_index_26 = 0;\n    var result_set_index_27 = 0;\n    var result_set_index_28 = 0;\n    var result_set_index_29 = 0;\n    var result_set_index_30 = 0;\n    var result_set_index_31 = 0;\n    var result_set_index_32 = 0;\n    var result_set_index_33 = 0;\n    var result_set_index_34 = 0;\n    var result_set_index_35 = 0;\n    var result_set_index_36 = 0;\n    var result_set_index_37 = 0;\n    var result_set_index_38 = 0;\n    var result_set",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j]==0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i, j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if(Math.floor(i / Math.pow(2, j)) % 2 == 1){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var test_list_length = test_list.length;\n    for(var i = 0; i < test_list_length; i++){\n        var first_list = test_list[i];\n        var first_list_length = first_list.length;\n        for(var j = 0; j < first_list_length; j++){\n            var first_list_element = first_list[j];\n            for(var k = i + 1; k < test_list_length; k++){\n                var second_list = test_list[k];\n                var second_list_length = second_list.length;\n                for(var l = 0; l < second_list_length; l++){\n                    var second_list_element = second_list[l];\n                    if(first_list_element + second_list_element == 0){\n                        result.push([i, j, k, l]);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [[5, 3, -2, -1, 0], [-1, 0, 2, 3, 5]];",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i,j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if(i & (1 << j)){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var temp_list = [];\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    for(i = 0; i < test_list.length; i++){\n        for(j = 0; j < test_list[i].length; j++){\n            for(k = 0; k < test_list[i][j].length; k++){\n                sum = sum + test_list[i][j][k];\n            }\n            temp_list.push(sum);\n            sum = 0;\n        }\n        result_list.push(temp_list);\n        temp_list = [];\n    }\n    return result_list;\n}\n"
  ]
}
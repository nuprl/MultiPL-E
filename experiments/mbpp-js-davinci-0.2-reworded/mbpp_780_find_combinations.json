{
  "name": "mbpp_780_find_combinations",
  "language": "js",
  "prompt": "//Write a function to find the combinations of sums with arrays in the given array array. https://www.geeksforgeeks.org/jsthon-combinations-of-sum-with-arrays-in-array-array/\nfunction find_combinations(test_list){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_780_find_combinations.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_combinations;\n  assert.deepEqual(candidate([[2, 4], [6, 7], [5, 1], [6, 10]]),[[8, 11], [7, 5], [8, 14], [11, 8], [12, 17], [11, 11]]);\n  assert.deepEqual(candidate([[3, 5], [7, 8], [6, 2], [7, 11]]),[[10, 13], [9, 7], [10, 16], [13, 10], [14, 19], [13, 13]]);\n  assert.deepEqual(candidate([[4, 6], [8, 9], [7, 3], [8, 12]]),[[12, 15], [11, 9], [12, 18], [15, 12], [16, 21], [15, 15]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n\nvar test_list = [1, 2, 3, 4, 5];",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        temp = [];\n        sum = 0;\n        for(var j = i; j < len; j++){\n            sum += test_list[j];\n            temp.push(test_list[j]);\n            if(sum === 0){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [2, -4, 6, -3, 9];",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        temp = [];\n        sum = 0;\n        for(var j = i; j < len; j++){\n            sum += test_list[j];\n            temp.push(test_list[j]);\n            if(sum == 10){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var sum = 0;\n    for(var i=0;i<test_list.length;i++){\n        sum += test_list[i];\n    }\n    var half_sum = sum/2;\n    var half_sum_list = [];\n    for(var i=0;i<test_list.length;i++){\n        if(test_list[i]<=half_sum){\n            half_sum_list.push(test_list[i]);\n        }\n    }\n    var half_sum_list_length = half_sum_list.length;\n    for(var i=0;i<half_sum_list_length;i++){\n        for(var j=i+1;j<half_sum_list_length;j++){\n            if(half_sum_list[i]+half_sum_list[j]==half_sum){\n                result.push([half_sum_list[i],half_sum_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_set = [];\n    var result_set_index = 0;\n    var result_index = 0;\n    var result_sum = 0;\n    var result_length = 0;\n    var result_set_length = 0;\n    var result_set_sum = 0;\n    var result_set_index = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length = 0;\n    var result_set_index_sum = 0;\n    var result_set_index_length =",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i,j,k;\n    for(i=0;i<test_list.length;i++){\n        for(j=i+1;j<test_list.length;j++){\n            for(k=j+1;k<test_list.length;k++){\n                if(test_list[i]+test_list[j]+test_list[k]==0){\n                    result.push([test_list[i],test_list[j],test_list[k]]);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var arr = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] instanceof Array){\n            arr = test_list[i];\n            sum = 0;\n            for(var j = 0; j < arr.length; j++){\n                sum += arr[j];\n            }\n            result.push(sum);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                temp = [];\n                temp.push(test_list[i]);\n                temp.push(test_list[j]);\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_set = [];\n    var result_set_index = 0;\n    var result_set_index_2 = 0;\n    var result_set_index_3 = 0;\n    var result_set_index_4 = 0;\n    var result_set_index_5 = 0;\n    var result_set_index_6 = 0;\n    var result_set_index_7 = 0;\n    var result_set_index_8 = 0;\n    var result_set_index_9 = 0;\n    var result_set_index_10 = 0;\n    var result_set_index_11 = 0;\n    var result_set_index_12 = 0;\n    var result_set_index_13 = 0;\n    var result_set_index_14 = 0;\n    var result_set_index_15 = 0;\n    var result_set_index_16 = 0;\n    var result_set_index_17 = 0;\n    var result_set_index_18 = 0;\n    var result_set_index_19 = 0;\n    var result_set_index_20 = 0;\n    var result_set_index_21 = 0;\n    var result_set_index_22 = 0;\n    var result_set_index_23 = 0;\n    var result_set_index_24 = 0;\n    var result_set_index_25 = 0;\n    var result_set_index_26 = 0;\n    var result_set_index_27 = 0;\n    var result_set_index_28 = 0;\n    var result_set_index_29 = 0;\n    var result_set_index_30 = 0;\n    var result_set_index_31 = 0;\n    var result_set_index_32 = 0;\n    var result_set_index_33 = 0;\n    var result_set_index_34 = 0;\n    var result_set_index_35 = 0;\n    var result_set_index_36 = 0;\n    var result_set_index_37 = 0;\n    var result_set_index_38 = 0;\n    var result_set",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j]==0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i, j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if(Math.floor(i / Math.pow(2, j)) % 2 == 1){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var test_list_length = test_list.length;\n    for(var i = 0; i < test_list_length; i++){\n        var first_list = test_list[i];\n        var first_list_length = first_list.length;\n        for(var j = 0; j < first_list_length; j++){\n            var first_list_element = first_list[j];\n            for(var k = i + 1; k < test_list_length; k++){\n                var second_list = test_list[k];\n                var second_list_length = second_list.length;\n                for(var l = 0; l < second_list_length; l++){\n                    var second_list_element = second_list[l];\n                    if(first_list_element + second_list_element == 0){\n                        result.push([i, j, k, l]);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [[5, 3, -2, -1, 0], [-1, 0, 2, 3, 5]];",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i,j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if(i & (1 << j)){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var temp_list = [];\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    for(i = 0; i < test_list.length; i++){\n        for(j = 0; j < test_list[i].length; j++){\n            for(k = 0; k < test_list[i][j].length; k++){\n                sum = sum + test_list[i][j][k];\n            }\n            temp_list.push(sum);\n            sum = 0;\n        }\n        result_list.push(temp_list);\n        temp_list = [];\n    }\n    return result_list;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var combinations_size = 1 << list_size;\n    for(var i = 0; i < combinations_size ; i++){\n        var combination = [];\n        for(var j=0;j<list_size;j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var index = 0;\n    var sum = 0;\n    var start = 0;\n    var end = 0;\n    var length = test_list.length;\n    for(var i = 0; i < length; i++){\n        temp_list.push(test_list[i]);\n        sum += test_list[i];\n        end++;\n        if(sum == 0){\n            result.push(temp_list.slice(0));\n            temp_list = [];\n            sum = 0;\n            start = end;\n        }\n        else if(sum < 0){\n            while(sum < 0){\n                sum -= test_list[start];\n                start++;\n            }\n            if(sum == 0){\n                result.push(temp_list.slice(start, end));\n                temp_list = [];\n                sum = 0;\n                start = end;\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    for(var i=0; i<test_list.length; i++){\n        var sum = 0;\n        for(var j=i; j<test_list.length; j++){\n            sum += test_list[j];\n            result_list.push(sum);\n        }\n    }\n    return result_list;\n}",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var temp_sum = 0;\n    var temp_index = 0;\n    var temp_index_list = [];\n    var temp_index_sum = 0;\n    var temp_index_list_sum = 0;\n    var temp_index_list_sum_index = 0;\n    var temp_index_list_sum_index_list = [];\n    var temp_index_list_sum_index_list_sum = 0;\n    var temp_index_list_sum_index_list_sum_index = 0;\n    var temp_index_list_sum_index_list_sum_index_list = [];\n    var temp_index_list_sum_index_list_sum_index_list_sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        temp_sum = test_list[i];\n        temp_list.push(test_list[i]);\n        for(var j = i + 1; j < test_list.length; j++){\n            temp_sum += test_list[j];\n            temp_list.push(test_list[j]);\n            for(var k = j + 1; k < test_list.length; k++){\n                temp_sum += test_list[k];\n                temp_list.push(test_list[k]);\n                for(var l = k + 1; l < test_list.length; l++){\n                    temp_sum += test_list[l];\n                    temp_list.push(test_list[l]);\n                    for(var m = l + 1; m < test_list.length; m++){\n                        temp_sum += test_list[m];\n                        temp_list.push(test_list[m]);\n                        if(temp_sum == 0){\n                            result.push(temp_list);\n                        }\n                        temp_sum -= test_list[m];\n                        temp_list.pop();\n                    }\n                    temp_sum -= test_list[l];\n                    temp_list.pop();\n                }\n                temp_sum -= test_list[k];\n                temp_list.pop();",
    "    var result = [];\n    var list_size = test_list.length;\n    var combinations_size = 1 << list_size;\n    for(var i = 0; i < combinations_size ; i++){\n        var combination = [];\n        for(var j=0;j<list_size;j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var res = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            sum = test_list[i] + test_list[j];\n            if(test_list.indexOf(sum) > -1){\n                temp_list.push(test_list[i]);\n                temp_list.push(test_list[j]);\n                temp_list.push(sum);\n                res.push(temp_list);\n                temp_list = [];\n            }\n        }\n    }\n    return res;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            sum = test_list[i] + test_list[j];\n            temp_list = [];\n            temp_list.push(test_list[i]);\n            temp_list.push(test_list[j]);\n            for(var k=0;k<test_list.length;k++){\n                if(sum == test_list[k]){\n                    temp_list.push(test_list[k]);\n                    result.push(temp_list);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_length = test_list.length;\n    for(var i = 0; i < list_length; i++){\n        for(var j = i + 1; j < list_length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [2, -2, -4, 4, -6, 6, -8, 8];",
    "    var result = [];\n    var temp_list = [];\n    var temp_sum = 0;\n    var start = 0;\n    var end = 0;\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        sum += test_list[i];\n    }\n    for(var i = 0; i < test_list.length; i++){\n        temp_sum = test_list[i];\n        temp_list.push(test_list[i]);\n        start = i + 1;\n        end = test_list.length - 1;\n        while(start < end){\n            if(temp_sum + test_list[start] + test_list[end] == sum){\n                temp_list.push(test_list[start]);\n                temp_list.push(test_list[end]);\n                result.push(temp_list);\n                temp_list = [];\n                temp_list.push(test_list[i]);\n                start++;\n                end--;\n            }\n            else if(temp_sum + test_list[start] + test_list[end] < sum){\n                start++;\n            }\n            else{\n                end--;\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [2, 4, 5, 3, 1];",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i; j < test_list.length; j++){\n            temp_list.push(test_list[j]);\n            sum += test_list[j];\n            if(sum == 10){\n                result.push(temp_list);\n            }\n        }\n        temp_list = [];\n        sum = 0;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var test_list_length = test_list.length;\n    var all_possible_combinations = (1 << test_list_length)\n    for(var i = 0; i < all_possible_combinations; i++){\n        var combination = [];\n        for(var j = 0; j < test_list_length; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 1; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if(i & (1 << j)){\n                combination.push(test_list[j]);\n            }\n        }\n        result.push(combination);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result[result_index] = [test_list[i], test_list[j]];\n                result_index++;\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var i;\n    for(i=0;i<len;i++){\n        temp = test_list[i];\n        result.push(temp);\n        for(var j=i+1;j<len;j++){\n            temp = temp.concat(test_list[j]);\n            result.push(temp);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var combinations_size = 1 << list_size;\n    for(var i = 0; i < combinations_size ; i++){\n        var combination = [];\n        for(var j=0;j<list_size;j++){\n            if((i & (1 << j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i = 0;\n    var j = 0;\n    var sum = 0;\n    var temp = [];\n    for(i = 0; i < all_bits; i++){\n        sum = 0;\n        temp = [];\n        for(j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                sum += test_list[j];\n                temp.push(test_list[j]);\n            }\n        }\n        if(sum == 10){\n            result.push(temp);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    var half = sum/2;\n    for(var i = 0; i < len; i++){\n        if(test_list[i] == half){\n            result.push([test_list[i]]);\n        }\n    }\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            if(test_list[i] + test_list[j] == half){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            for(var k = j+1; k < len; k++){\n                if(test_list[i] + test_list[j] + test_list[k] == half){\n                    result.push([test_list[i], test_list[j], test_list[k]]);\n                }\n            }\n        }\n    }\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            for(var k = j+1; k < len; k++){\n                for(var l = k+1; l < len; l++){\n                    if(test_list[i] + test_list[j] + test_list[k] + test_list[l] == half){\n                        result.push([test_list[i], test_list[j], test_list[k], test_list[l]]);\n                    }\n                }\n            }\n        }\n    }\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            for(var k = j+1; k < len",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let temp_list = [];\n    let sum = 0;\n    for(let i=0;i<test_list.length;i++){\n        for(let j=i+1;j<test_list.length;j++){\n            sum = test_list[i]+test_list[j];\n            temp_list.push(sum);\n        }\n    }\n    for(let i=0;i<temp_list.length;i++){\n        for(let j=i+1;j<temp_list.length;j++){\n            sum = temp_list[i]+temp_list[j];\n            result.push(sum);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_index = 0;\n    var list_size = test_list.length;\n    for(var i = 0; i < list_size; i++){\n        var first_list = test_list[i];\n        var first_list_size = first_list.length;\n        for(var j = 0; j < first_list_size; j++){\n            var first_list_num = first_list[j];\n            for(var k = i + 1; k < list_size; k++){\n                var second_list = test_list[k];\n                var second_list_size = second_list.length;\n                for(var l = 0; l < second_list_size; l++){\n                    var second_list_num = second_list[l];\n                    if(first_list_num + second_list_num == 0){\n                        result[result_index] = [i, j, k, l];\n                        result_index++;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [[3, 2, -7, 1], [1, -6, -7, -8], [-5, -1, -4, 7]];",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i; j < len; j++){\n            temp = [];\n            sum = 0;\n            for(var k = i; k <= j; k++){\n                temp.push(test_list[k]);\n                sum += test_list[k];\n            }\n            result.push([sum, temp]);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j] == 0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var f = function(prefix, test_list){\n        for(var i=0; i<test_list.length; i++){\n            result.push(prefix.concat(test_list[i]));\n            f(prefix.concat(test_list[i]), test_list.slice(i+1));\n        }\n    }\n    f([], test_list);\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j] == 0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n\nvar test_list = [1, 2, 3, 4];",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    for(var i = 0; i < Math.pow(2, list_size); i++){\n        var temp = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                temp.push(test_list[j]);\n            }\n        }\n        if(temp.length > 0){\n            result.push(temp);\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            sum = test_list[i] + test_list[j];\n            temp_list.push(test_list[i]);\n            temp_list.push(test_list[j]);\n            temp_list.push(sum);\n            result_list.push(temp_list);\n            temp_list = [];\n        }\n    }\n    return result_list;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar n = test_list.length;\n\tfor(var i = 0; i < (1<<n); i++){\n\t\tvar sum = 0;\n\t\tvar temp = [];\n\t\tfor(var j = 0; j < n; j++){\n\t\t\tif(i & (1<<j)){\n\t\t\t\tsum += test_list[j];\n\t\t\t\ttemp.push(test_list[j]);\n\t\t\t}\n\t\t}\n\t\tif(sum === 0){\n\t\t\tresult.push(temp);\n\t\t}\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var n = test_list.length;\n    var sum = 0;\n    for (var i = 0; i < n; i++) {\n        sum += test_list[i];\n    }\n    var k = sum / 2;\n    var j = 0;\n    var i = 0;\n    while (i < n) {\n        if (temp.length < k) {\n            temp.push(test_list[i]);\n            i++;\n        }\n        else {\n            if (temp.length == k) {\n                result.push(temp);\n            }\n            temp.pop();\n            j++;\n            i = j;\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var test_list_length = test_list.length;\n    for(var i = 0; i < test_list_length; i++){\n        var first_list = test_list[i];\n        var first_list_length = first_list.length;\n        for(var j = 0; j < first_list_length; j++){\n            var first_list_element = first_list[j];\n            for(var k = i + 1; k < test_list_length; k++){\n                var second_list = test_list[k];\n                var second_list_length = second_list.length;\n                for(var l = 0; l < second_list_length; l++){\n                    var second_list_element = second_list[l];\n                    if(first_list_element + second_list_element == 0){\n                        result.push([i, j, k, l]);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i=0; i<test_list.length; i++){\n        sum = 0;\n        for(var j=i; j<test_list.length; j++){\n            sum += test_list[j];\n            temp_list.push(test_list[j]);\n            if(sum === 0){\n                result_list.push(temp_list);\n            }\n        }\n        temp_list = [];\n    }\n    return result_list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j]==0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var temp_sum = 0;\n    var temp_index = 0;\n    var temp_index_2 = 0;\n    var temp_index_3 = 0;\n    var temp_index_4 = 0;\n    var temp_index_5 = 0;\n    var temp_index_6 = 0;\n    var temp_index_7 = 0;\n    var temp_index_8 = 0;\n    var temp_index_9 = 0;\n    var temp_index_10 = 0;\n    var temp_index_11 = 0;\n    var temp_index_12 = 0;\n    var temp_index_13 = 0;\n    var temp_index_14 = 0;\n    var temp_index_15 = 0;\n    var temp_index_16 = 0;\n    var temp_index_17 = 0;\n    var temp_index_18 = 0;\n    var temp_index_19 = 0;\n    var temp_index_20 = 0;\n    var temp_index_21 = 0;\n    var temp_index_22 = 0;\n    var temp_index_23 = 0;\n    var temp_index_24 = 0;\n    var temp_index_25 = 0;\n    var temp_index_26 = 0;\n    var temp_index_27 = 0;\n    var temp_index_28 = 0;\n    var temp_index_29 = 0;\n    var temp_index_30 = 0;\n    var temp_index_31 = 0;\n    var temp_index_32 = 0;\n    var temp_index_33 = 0;\n    var temp_index_34 = 0;\n    var temp_index_35 = 0;\n    var temp_index_36 = 0;\n    var temp_index_37 = 0;\n    var temp_index_38 = 0;\n    var temp_index_39 = 0;\n    var temp_index_40 = 0;\n    var temp_index_41 = 0;\n    var temp_index_42 = 0;\n    var temp_index_43 = 0;\n    var temp_index_44 = 0;\n    var temp_index_",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    if(sum % 2 == 1){\n        return result;\n    }\n    sum = sum / 2;\n    var visited = [];\n    for(var i = 0; i < len; i++){\n        visited.push(false);\n    }\n    find_combinations_rec(test_list, result, temp, visited, sum, 0);\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var n = test_list.length;\n    var sum = 0;\n    for(var i=0;i<n;i++){\n        sum += test_list[i];\n    }\n    var half_sum = Math.floor(sum/2);\n    for(var i=0;i<n;i++){\n        if(test_list[i] <= half_sum){\n            temp = [];\n            temp.push(test_list[i]);\n            for(var j=i+1;j<n;j++){\n                if(test_list[i]+test_list[j] <= half_sum){\n                    temp.push(test_list[j]);\n                }\n            }\n            result.push(temp);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i, j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    for(var i = 0; i < len; i++){\n        temp = [];\n        for(var j = i; j < len; j++){\n            temp.push(test_list[j]);\n            if(temp.reduce((a, b) => a + b, 0) == sum){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result_list.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result_list;\n}",
    "    var result = [];\n    var result_set = [];\n    var temp_set = [];\n    var temp_list = [];\n    for(var i = 0; i < test_list.length; i++){\n        temp_list = test_list[i];\n        for(var j = 0; j < temp_list.length; j++){\n            temp_set.push(temp_list[j]);\n        }\n        result_set.push(temp_set);\n        temp_set = [];\n    }\n    for(var i = 0; i < result_set.length; i++){\n        for(var j = 0; j < result_set[i].length; j++){\n            result.push(result_set[i][j]);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var current_list = [];\n    var current_sum = 0;\n    var current_index = 0;\n    var current_list_index = 0;\n\n    function find_combinations_recursive(test_list, current_list, current_sum, current_index, current_list_index){\n        if(current_sum == 0){\n            result.push(current_list.slice(0, current_list_index));\n            return;\n        }\n        if(current_index == test_list.length){\n            return;\n        }\n        if(current_sum < 0){\n            return;\n        }\n        current_list[current_list_index] = test_list[current_index];\n        find_combinations_recursive(test_list, current_list, current_sum - test_list[current_index], current_index + 1, current_list_index + 1);\n        find_combinations_recursive(test_list, current_list, current_sum, current_index + 1, current_list_index);\n    }\n    find_combinations_recursive(test_list, current_list, current_sum, current_index, current_list_index);\n    return result;\n}\n",
    "    var result = [];\n    var current_combination = [];\n    var current_sum = 0;\n    var current_index = 0;\n    var current_array = [];\n    var current_array_index = 0;\n    var current_array_sum = 0;\n    var current_array_combination = [];\n    var current_array_combination_index = 0;\n    var current_array_combination_sum = 0;\n    var current_array_combination_array = [];\n    var current_array_combination_array_index = 0;\n    var current_array_combination_array_sum = 0;\n    var current_array_combination_array_combination = [];\n    var current_array_combination_array_combination_index = 0;\n    var current_array_combination_array_combination_sum = 0;\n    var current_array_combination_array_combination_array = [];\n    var current_array_combination_array_combination_array_index = 0;\n    var current_array_combination_array_combination_array_sum = 0;\n    var current_array_combination_array_combination_array_combination = [];\n    var current_array_combination_array_combination_array_combination_index = 0;\n    var current_array_combination_array_combination_array_combination_sum = 0;\n    var current_array_combination_array_combination_array_combination_array = [];\n    var current_array_combination_array_combination_array_combination_array_index = 0;\n    var current_array_combination_array_combination_array_combination_array_sum = 0;\n    var current_array_combination_array_combination_array_combination_array_combination = [];\n    var current_array_combination_array_combination_array_combination_array_combination_index = 0;\n    var current_array_combination_array_combination_array_combination_array_combination_sum = 0;\n    var current_array_combination_array_combination_array_combination_array_comb",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0;i<len;i++){\n        for(var j=i+1;j<len;j++){\n            if(test_list[i]+test_list[j]==0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i, j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if(Math.floor(i / Math.pow(2, j)) % 2 == 1){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_set = [];\n    var result_set_index = 0;\n    var result_set_index_2 = 0;\n    var result_set_index_3 = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = 0; j < test_list[i].length; j++){\n            result.push(test_list[i][j]);\n        }\n    }\n    for(var i = 0; i < result.length; i++){\n        for(var j = i + 1; j < result.length; j++){\n            for(var k = j + 1; k < result.length; k++){\n                if(result[i] + result[j] + result[k] == 0){\n                    result_set[result_set_index] = [result[i], result[j], result[k]];\n                    result_set_index++;\n                }\n            }\n        }\n    }\n    for(var i = 0; i < result_set.length; i++){\n        for(var j = i + 1; j < result_set.length; j++){\n            if(result_set[i][0] == result_set[j][0] && result_set[i][1] == result_set[j][1] && result_set[i][2] == result_set[j][2]){\n                result_set[j][0] = 0;\n                result_set[j][1] = 0;\n                result_set[j][2] = 0;\n            }\n        }\n    }\n    for(var i = 0; i < result_set.length; i++){\n        if(result_set[i][0] != 0){\n            result_set_2[result_set_index_2] = result_set[i];\n            result_set_index_2++;\n        }\n    }\n    for(var i = 0; i < result_set_2.length; i++){\n        for(var j = i + 1; j < result_set_2.length; j++){\n            if(result",
    "    var result = [];\n    var temp_list = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            temp_list = [];\n            temp_list.push(test_list[i]);\n            temp_list.push(test_list[j]);\n            result.push(temp_list);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_list[i].length; j++){\n            temp.push(test_list[i][j]);\n        }\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] === 0){\n                result[result_index] = [test_list[i], test_list[j]];\n                result_index++;\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_length = test_list.length;\n    for(var i = 0; i < list_length; i++){\n        var first_list = test_list[i];\n        var first_list_length = first_list.length;\n        for(var j = 0; j < first_list_length; j++){\n            var first_list_element = first_list[j];\n            for(var k = i + 1; k < list_length; k++){\n                var second_list = test_list[k];\n                var second_list_length = second_list.length;\n                for(var l = 0; l < second_list_length; l++){\n                    var second_list_element = second_list[l];\n                    if(first_list_element + second_list_element == 0){\n                        result.push([i, j, k, l]);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 4, -2, -3], [3, 6, 5, -6, 4], [8, -7, 6, 5, 4, -4], [-3, -4, 6, 5, 3, 2]];",
    "    var result = [];\n    var result_set = new Set();\n    var len = test_list.length;\n    var sum = 0;\n    for(var i=0;i<len;i++){\n        sum += test_list[i];\n    }\n    var half_sum = sum/2;\n    for(var i=0;i<len;i++){\n        var temp = [];\n        var temp_sum = 0;\n        for(var j=i;j<len;j++){\n            temp_sum += test_list[j];\n            temp.push(test_list[j]);\n            if(temp_sum == half_sum){\n                result_set.add(temp);\n            }\n        }\n    }\n    result = Array.from(result_set);\n    return result;\n}\n\nvar test_list = [1,2,3,4,5,6,7,8,9,10];",
    "    var result = [];\n    var arr_len = test_list.length;\n    for(var i = 0; i < arr_len; i++){\n        for(var j = i+1; j < arr_len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    for(var i = 0; i < Math.pow(2, list_size); i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i; j < test_list.length; j++){\n            if(Array.isArray(test_list[j])){\n                for(var k = 0; k < test_list[j].length; k++){\n                    temp.push(test_list[j][k]);\n                    sum += test_list[j][k];\n                }\n            }else{\n                temp.push(test_list[j]);\n                sum += test_list[j];\n            }\n            result.push([temp, sum]);\n            temp = [];\n            sum = 0;\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    var n = test_list.length;\n    for(var i = 0; i < (1<<n); i++){\n        temp_list = [];\n        sum = 0;\n        for(var j = 0; j < n; j++){\n            if(i & (1<<j)){\n                temp_list.push(test_list[j]);\n                sum += test_list[j];\n            }\n        }\n        if(sum == 0){\n            result.push(temp_list);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    var half_sum = sum/2;\n    for(var i = 0; i < len; i++){\n        if(test_list[i] <= half_sum){\n            temp.push(test_list[i]);\n            half_sum -= test_list[i];\n        }\n    }\n    result.push(temp);\n    var temp2 = [];\n    for(var i = 0; i < len; i++){\n        if(!temp.includes(test_list[i])){\n            temp2.push(test_list[i]);\n        }\n    }\n    result.push(temp2);\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        var first = test_list[i];\n        for(var j=i+1; j<len; j++){\n            var second = test_list[j];\n            if(first + second === 0){\n                result.push([first, second]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    for(var i=0; i<test_list.length; i++){\n        var sum = 0;\n        for(var j=i; j<test_list.length; j++){\n            sum += test_list[j];\n            result_list.push(sum);\n        }\n    }\n    return result_list;\n}",
    "    var result = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        sum += test_list[i];\n    }\n    for(var i = 0; i < test_list.length; i++){\n        var temp = [];\n        for(var j = i; j < test_list.length; j++){\n            temp.push(test_list[j]);\n            if(sum == temp.reduce((a, b) => a + b, 0)){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        var first = test_list[i];\n        for(var j=i+1; j<len; j++){\n            var second = test_list[j];\n            if(first + second == 0){\n                result.push([first, second]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        let temp = [];\n        for(let j = 0; j < test_list[i].length; j++){\n            temp.push(test_list[i][j]);\n        }\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < test_list.length){\n        var j = i + 1;\n        while(j < test_list.length){\n            var sum = test_list[i] + test_list[j];\n            var k = j + 1;\n            while(k < test_list.length){\n                if(sum == test_list[k]){\n                    result.push([test_list[i], test_list[j], test_list[k]]);\n                }\n                k++;\n            }\n            j++;\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        for (var j = i+1; j < test_list.length; j++){\n            if (test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j]==0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp_list = [];\n    var index = 0;\n    var sum = 0;\n    for(var i=0; i<test_list.length; i++){\n        sum = 0;\n        temp_list = [];\n        for(var j=i; j<test_list.length; j++){\n            sum += test_list[j];\n            temp_list.push(test_list[j]);\n            if(sum == 10){\n                result.push(temp_list);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    var half_sum = sum/2;\n    for(var i = 0; i < len; i++){\n        temp.push(test_list[i]);\n        if(test_list[i] == half_sum){\n            result.push(temp);\n            temp = [];\n        }\n        else{\n            for(var j = i+1; j < len; j++){\n                temp.push(test_list[j]);\n                if(test_list[i] + test_list[j] == half_sum){\n                    result.push(temp);\n                    temp = [];\n                }\n                else{\n                    for(var k = j+1; k < len; k++){\n                        temp.push(test_list[k]);\n                        if(test_list[i] + test_list[j] + test_list[k] == half_sum){\n                            result.push(temp);\n                            temp = [];\n                        }\n                        else{\n                            for(var l = k+1; l < len; l++){\n                                temp.push(test_list[l]);\n                                if(test_list[i] + test_list[j] + test_list[k] + test_list[l] == half_sum){\n                                    result.push(temp);\n                                    temp = [];\n                                }\n                                else{\n                                    for(var m = l+1; m < len; m++){\n                                        temp.push(test_list[m]);\n                                        if(test_list[i] + test_list[j] + test_list[k] + test_list[l] + test_list[m] == half_sum){\n                                            result.push(temp);\n                                            temp = [];\n                                        }\n                                        else{\n                                            for(var n = m+1; n < len; n++){\n                                                temp.push(test_list",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i, j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let temp = [];\n    let len = test_list.length;\n    let sum = 0;\n    for(let i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    if(sum % 2 != 0){\n        return result;\n    }\n    sum = sum / 2;\n    for(let i = 0; i < len; i++){\n        if(test_list[i] == sum){\n            temp.push(test_list[i]);\n            result.push(temp);\n            temp = [];\n        }\n        else if(test_list[i] < sum){\n            temp.push(test_list[i]);\n            find_combinations_recursive(test_list, sum, i + 1, temp, result);\n            temp = [];\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    var half = Math.floor(sum/2);\n    for(var i = 0; i < len; i++){\n        if(test_list[i] <= half){\n            temp.push(test_list[i]);\n            half -= test_list[i];\n        }\n    }\n    result.push(temp);\n    temp = [];\n    for(var i = 0; i < len; i++){\n        if(test_list[i] > half){\n            temp.push(test_list[i]);\n        }\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var n = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += test_list[i];\n    }\n    var half = Math.floor(sum/2);\n    for(var i = 0; i < n; i++){\n        if(test_list[i] <= half){\n            temp.push(test_list[i]);\n            find_combinations_rec(test_list, half, i+1, temp, result);\n            temp.pop();\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    var index = 0;\n    var length = test_list.length;\n    for(var i=0; i<length; i++){\n        if(test_list[i] instanceof Array){\n            var array_length = test_list[i].length;\n            for(var j=0; j<array_length; j++){\n                sum += test_list[i][j];\n                temp_list.push(test_list[i][j]);\n            }\n            result.push(sum);\n            sum = 0;\n            temp_list = [];\n        }\n        else{\n            sum += test_list[i];\n            temp_list.push(test_list[i]);\n            result.push(sum);\n            sum = 0;\n            temp_list = [];\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    var half = sum/2;\n    for(var i = 0; i < len; i++){\n        if(test_list[i] <= half){\n            temp.push(test_list[i]);\n            half -= test_list[i];\n        }\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i+1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i=0; i<all_bits; i++){\n        var combination = [];\n        for(var j=0; j<list_size; j++){\n            if((i & Math.pow(2, j))){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] === 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp_list = [];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = 0; j < test_list[i].length; j++){\n            temp_list[index] = test_list[i][j];\n            index++;\n        }\n    }\n    var temp_list_length = temp_list.length;\n    for(var i = 0; i < temp_list_length; i++){\n        for(var j = i + 1; j < temp_list_length; j++){\n            if(temp_list[i] + temp_list[j] === 0){\n                result.push([temp_list[i], temp_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i+1;j<test_list.length;j++){\n            if(test_list[i]+test_list[j] == 0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i=0;i<test_list.length;i++){\n        var temp = [];\n        for(var j=i+1;j<test_list.length;j++){\n            temp.push(test_list[i]+test_list[j]);\n        }\n        result.push(temp);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i; j < len; j++){\n            sum = 0;\n            for(var k = i; k <= j; k++){\n                sum += test_list[k];\n            }\n            temp_list.push(sum);\n        }\n        result.push(temp_list);\n        temp_list = [];\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    for(var i = 0; i < len; i++){\n        temp = [];\n        for(var j = i; j < len; j++){\n            temp.push(test_list[j]);\n            if(temp.reduce((a,b) => a + b, 0) == sum){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i]+test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n        sum += test_list[i];\n    }\n    var half_sum = sum/2;\n    for(var i=0; i<len; i++){\n        if(test_list[i] <= half_sum){\n            temp.push(test_list[i]);\n            half_sum -= test_list[i];\n        }\n    }\n    result.push(temp);\n    temp = [];\n    for(var i=0; i<len; i++){\n        if(test_list[i] > half_sum){\n            temp.push(test_list[i]);\n        }\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result_list = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result_list.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result_list;\n}",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i=0;i<test_list.length;i++){\n        for(var j=i;j<test_list.length;j++){\n            for(var k=i;k<=j;k++){\n                sum += test_list[k];\n                temp_list.push(test_list[k]);\n            }\n            result.push([sum,temp_list]);\n            sum = 0;\n            temp_list = [];\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += test_list[i];\n    }\n    var half = sum/2;\n    for(var i = 0; i < len; i++){\n        if(test_list[i] <= half){\n            temp.push(test_list[i]);\n            half -= test_list[i];\n        }\n    }\n    result.push(temp);\n    temp = [];\n    for(var i = 0; i < len; i++){\n        if(test_list[i] > half){\n            temp.push(test_list[i]);\n        }\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var test_list_length = test_list.length;\n    for(var i=0; i<test_list_length; i++){\n        var first_list = test_list[i];\n        var first_list_length = first_list.length;\n        for(var j=0; j<first_list_length; j++){\n            var first_list_element = first_list[j];\n            for(var k=i+1; k<test_list_length; k++){\n                var second_list = test_list[k];\n                var second_list_length = second_list.length;\n                for(var l=0; l<second_list_length; l++){\n                    var second_list_element = second_list[l];\n                    if(first_list_element + second_list_element == 0){\n                        result.push([i,j,k,l]);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [[1,2,3],[-1,-2,-3],[1,2,3,-1,-2,-3]];",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_mask = Math.pow(2, list_size) - 1;\n    for(var mask = 1; mask <= all_mask; mask++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((mask & (1 << j)) !== 0){\n                combination.push(test_list[j]);\n            }\n        }\n        result.push(combination);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i]+test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var len = test_list.length;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    for(i = 0; i < len; i++){\n        sum = 0;\n        temp = [];\n        for(j = i; j < len; j++){\n            sum += test_list[j];\n            temp.push(test_list[j]);\n            if(sum == 0){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var sum = 0;\n    for(var i=0; i<test_list.length; i++){\n        sum += test_list[i];\n    }\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == sum){\n                result_list.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result_list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var n = test_list.length;\n    var r = 2;\n    var data = [];\n    for(var i = 0; i < r; i++){\n        data[i] = 0;\n    }\n    combinationUtil(test_list, data, 0, n-1, 0, r, sum, temp, result);\n    console.log(result);\n}",
    "    var result = [];\n    var temp = [];\n    var n = test_list.length;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += test_list[i];\n    }\n    var k = sum/2;\n    var j = 0;\n    for(var i = 0; i < n; i++){\n        if(test_list[i] <= k){\n            temp[j] = test_list[i];\n            j++;\n        }\n    }\n    var n = temp.length;\n    for(var i = 0; i < n; i++){\n        var sum = 0;\n        for(var j = i; j < n; j++){\n            sum += temp[j];\n            if(sum == k){\n                result.push(temp.slice(i,j+1));\n            }\n        }\n    }\n    return result;\n}\nvar test_list = [2,4,5,6,8,10];",
    "    var result = [];\n    var temp_list = [];\n    var sum = 0;\n    for(var i = 0; i < test_list.length; i++){\n        sum = 0;\n        temp_list = [];\n        for(var j = i; j < test_list.length; j++){\n            sum += test_list[j];\n            temp_list.push(test_list[j]);\n            if(sum === 0){\n                result.push(temp_list);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0;i<len;i++){\n        for(var j=i+1;j<len;j++){\n            if(test_list[i]+test_list[j] == 0){\n                result.push([test_list[i],test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n        sum += test_list[i];\n    }\n    var half = sum/2;\n    for(var i=0; i<len; i++){\n        if(test_list[i] <= half){\n            temp.push(test_list[i]);\n            half -= test_list[i];\n        }\n    }\n    result.push(temp);\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    var i,j,k;\n    for(i=0;i<len;i++){\n        for(j=i+1;j<len;j++){\n            for(k=j+1;k<len;k++){\n                if(test_list[i]+test_list[j]+test_list[k]==0){\n                    result.push([test_list[i],test_list[j],test_list[k]]);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var result_set = [];\n    var result_set_index = 0;\n    var result_set_index_2 = 0;\n    var result_set_index_3 = 0;\n    var result_set_index_4 = 0;\n    var result_set_index_5 = 0;\n    var result_set_index_6 = 0;\n    var result_set_index_7 = 0;\n    var result_set_index_8 = 0;\n    var result_set_index_9 = 0;\n    var result_set_index_10 = 0;\n    var result_set_index_11 = 0;\n    var result_set_index_12 = 0;\n    var result_set_index_13 = 0;\n    var result_set_index_14 = 0;\n    var result_set_index_15 = 0;\n    var result_set_index_16 = 0;\n    var result_set_index_17 = 0;\n    var result_set_index_18 = 0;\n    var result_set_index_19 = 0;\n    var result_set_index_20 = 0;\n    var result_set_index_21 = 0;\n    var result_set_index_22 = 0;\n    var result_set_index_23 = 0;\n    var result_set_index_24 = 0;\n    var result_set_index_25 = 0;\n    var result_set_index_26 = 0;\n    var result_set_index_27 = 0;\n    var result_set_index_28 = 0;\n    var result_set_index_29 = 0;\n    var result_set_index_30 = 0;\n    var result_set_index_31 = 0;\n    var result_set_index_32 = 0;\n    var result_set_index_33 = 0;\n    var result_set_index_34 = 0;\n    var result_set_index_35 = 0;\n    var result_set_index_36 = 0;\n    var result_set_index_37 = 0;\n    var result_set_index_38 = 0;\n    var result_set",
    "    let test_list_length = test_list.length;\n    let result_list = [];\n    for(let i = 0; i < test_list_length; i++){\n        let first_list = test_list[i];\n        let first_list_length = first_list.length;\n        for(let j = 0; j < first_list_length; j++){\n            let first_list_element = first_list[j];\n            for(let k = i + 1; k < test_list_length; k++){\n                let second_list = test_list[k];\n                let second_list_length = second_list.length;\n                for(let l = 0; l < second_list_length; l++){\n                    let second_list_element = second_list[l];\n                    if(first_list_element + second_list_element === 0){\n                        result_list.push([i, j, k, l]);\n                    }\n                }\n            }\n        }\n    }\n    return result_list;\n}\n\nlet test_list = [[1, 2, 3], [-3, -2, -1], [1, 2, 3]];",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_mask = Math.pow(2, list_size) - 1;\n    for(var i = 1; i <= all_mask; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        result.push(combination);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n        sum = sum + test_list[i];\n    }\n    var half = sum/2;\n    for(var i=0; i<len; i++){\n        if(test_list[i] == half){\n            temp.push(test_list[i]);\n            result.push(temp);\n            temp = [];\n        }\n        else{\n            temp.push(test_list[i]);\n            for(var j=i+1; j<len; j++){\n                if(test_list[i]+test_list[j] == half){\n                    temp.push(test_list[j]);\n                    result.push(temp);\n                    temp = [];\n                }\n            }\n        }\n    }\n    return result;\n}\nvar test_list = [2, 4, 5, 9, 7];",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i+1; j < len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i,j,k;\n    for(i=0;i<test_list.length;i++){\n        for(j=i+1;j<test_list.length;j++){\n            for(k=j+1;k<test_list.length;k++){\n                if(test_list[i]+test_list[j]+test_list[k]==0){\n                    result.push([test_list[i],test_list[j],test_list[k]]);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        for(var j=i+1; j<test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    function find_combinations_rec(test_list, temp, start, end, index, r){\n        if(index == r){\n            var sum = 0;\n            for(var j = 0; j < r; j++){\n                sum += temp[j];\n            }\n            result.push(sum);\n            return;\n        }\n        for(var i = start; i <= end && end - i + 1 >= r - index; i++){\n            temp[index] = test_list[i];\n            find_combinations_rec(test_list, temp, i + 1, end, index + 1, r);\n        }\n    }\n    for(var i = 1; i <= len; i++){\n        find_combinations_rec(test_list, temp, 0, len - 1, 0, i);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    var i, j;\n    for(i = 0; i < all_bits; i++){\n        var sum = 0;\n        for(j = 0; j < list_size; j++){\n            if(Math.floor(i / Math.pow(2, j)) % 2 == 1){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2,list_size);\n    for(var i=0;i<all_bits;i++){\n        var sum = 0;\n        for(var j=0;j<list_size;j++){\n            if(i & (1<<j)){\n                sum += test_list[j];\n            }\n        }\n        result.push(sum);\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var temp = [];\n        for(var j=i+1; j<test_list.length; j++){\n            temp.push(test_list[i]+test_list[j]);\n        }\n        result.push(temp);\n    }\n    return result;\n}",
    "    var result = [];\n    var sum = 0;\n    for(var i=0;i<test_list.length;i++){\n        sum += test_list[i];\n    }\n    if(sum%2!=0){\n        return result;\n    }\n    var half_sum = sum/2;\n    var temp_list = [];\n    for(var i=0;i<test_list.length;i++){\n        if(test_list[i]<=half_sum){\n            temp_list.push(test_list[i]);\n        }\n    }\n    var temp_sum = 0;\n    for(var i=0;i<temp_list.length;i++){\n        temp_sum += temp_list[i];\n        if(temp_sum==half_sum){\n            result.push(temp_list.slice(0,i+1));\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var list_size = test_list.length;\n    var combinations_size = 1 << list_size;\n    for(var i = 0; i < combinations_size ; i++){\n        var combination = [];\n        for(var j=0;j<list_size;j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result.push(combination);\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i,j,k,l;\n    var len = test_list.length;\n    for(i=0;i<len;i++){\n        for(j=i+1;j<len;j++){\n            for(k=j+1;k<len;k++){\n                for(l=k+1;l<len;l++){\n                    if(test_list[i]+test_list[j]+test_list[k]+test_list[l] == 0){\n                        result.push([test_list[i],test_list[j],test_list[k],test_list[l]]);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}",
    "    let result = [];\n    let temp = [];\n    let sum = 0;\n    let index = 0;\n    let count = 0;\n    for(let i = 0; i < test_list.length; i++){\n        if(test_list[i] instanceof Array){\n            for(let j = 0; j < test_list[i].length; j++){\n                sum += test_list[i][j];\n            }\n            result.push(sum);\n            sum = 0;\n        }\n        else{\n            result.push(test_list[i]);\n        }\n    }\n    for(let i = 0; i < result.length; i++){\n        if(result[i] instanceof Array){\n            for(let j = 0; j < result[i].length; j++){\n                temp.push(result[i][j]);\n            }\n        }\n        else{\n            temp.push(result[i]);\n        }\n    }\n    for(let i = 0; i < temp.length; i++){\n        for(let j = i + 1; j < temp.length; j++){\n            if(temp[i] === temp[j]){\n                count++;\n            }\n        }\n        if(count === 0){\n            result[index] = temp[i];\n            index++;\n        }\n        count = 0;\n    }\n    return result;\n}",
    "    var result = [];\n    var temp = [];\n    var length = test_list.length;\n    for(var i=0; i<length; i++){\n        for(var j=0; j<length; j++){\n            if(i!=j){\n                temp.push(test_list[i]+test_list[j]);\n            }\n        }\n    }\n    result.push(temp);\n    return result;\n}",
    "    var result = [];\n    var temp = [];\n    var sum = 0;\n    var n = test_list.length;\n    for(var i = 0; i < n; i++){\n        for(var j = i; j < n; j++){\n            temp = [];\n            sum = 0;\n            for(var k = i; k <= j; k++){\n                temp.push(test_list[k]);\n                sum += test_list[k];\n            }\n            if(sum == 0){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var temp = [];\n    var len = test_list.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n        sum += test_list[i];\n    }\n    for(var i=0; i<len; i++){\n        temp = [];\n        for(var j=i; j<len; j++){\n            temp.push(test_list[j]);\n            if(temp.reduce((a,b) => a+b, 0) == sum/2){\n                result.push(temp);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len = test_list.length;\n    for(var i=0; i<len; i++){\n        for(var j=i+1; j<len; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var list_size = test_list.length;\n    var all_bits = Math.pow(2, list_size);\n    for(var i = 0; i < all_bits; i++){\n        var combination = [];\n        for(var j = 0; j < list_size; j++){\n            if((i & (1 << j)) > 0){\n                combination.push(test_list[j]);\n            }\n        }\n        if(combination.length > 0){\n            result_list.push(combination);\n        }\n    }\n    return result_list;\n}\n",
    "    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        for(let j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] == 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result_list = [];\n    var sum = 0;\n    for(var i=0;i<test_list.length;i++){\n        sum = sum + test_list[i];\n    }\n    var half_sum = sum/2;\n    var temp_list = [];\n    for(var i=0;i<test_list.length;i++){\n        if(test_list[i]<=half_sum){\n            temp_list.push(test_list[i]);\n        }\n    }\n    var temp_sum = 0;\n    for(var i=0;i<temp_list.length;i++){\n        temp_sum = temp_sum + temp_list[i];\n        if(temp_sum == half_sum){\n            result_list.push(temp_list);\n            temp_list = [];\n            temp_sum = 0;\n        }\n    }\n    return result_list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = i + 1; j < test_list.length; j++){\n            if(test_list[i] + test_list[j] === 0){\n                result.push([test_list[i], test_list[j]]);\n            }\n        }\n    }\n    return result;\n}"
  ]
}
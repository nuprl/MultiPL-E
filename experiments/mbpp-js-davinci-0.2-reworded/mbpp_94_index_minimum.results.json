{
  "name": "mbpp_94_index_minimum",
  "language": "js",
  "prompt": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for (var i = 0; i < test_list.length; i++){\n    if (test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var min_index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for (var i = 0; i < test_list.length; i++) {\n    if (test_list[i][1] < min) {\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min_index = 0;\n  var min_value = test_list[0][1];\n  for (var i = 1; i < test_list.length; i++){\n    if (test_list[i][1] < min_value){\n      min_index = i;\n      min_value = test_list[i][1];\n    }\n  }\n  return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    let min = test_list[0][1];\n    let index = 0;\n    for(let i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for (var i = 0; i < test_list.length; i++){\n    if (test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return index;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n'Varsha'\n    at test (/tmp/tmp1l6t6v8y.js:19:10)\n    at Object.<anonymous> (/tmp/tmp1l6t6v8y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 'Varsha',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_value = test_list[0][1];\n    var min_index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_value = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    if(test_list.length == 0){\n        return null;\n    }\n    var min_index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][1] < min) {\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var min_index = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][1] < min) {\n            min = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_value = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for (var i = 0; i < test_list.length; i++) {\n    if (test_list[i][1] < min) {\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var min_index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 1; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_value = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for (var i = 1; i < test_list.length; i++){\n    if (test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][1] < min) {\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < test_list[min_index][1]){\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n\tvar min = test_list[0][1];\n\tvar index = 0;\n\tfor (var i = 1; i < test_list.length; i++){\n\t\tif (test_list[i][1] < min){\n\t\t\tmin = test_list[i][1];\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][1] < min_value) {\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var min_index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min_index = 0;\n  var min_value = test_list[0][1];\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min_value){\n      min_index = i;\n      min_value = test_list[i][1];\n    }\n  }\n  return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 1; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n  var min = test_list[0][1];\n  var index = 0;\n  for(var i = 0; i < test_list.length; i++){\n    if(test_list[i][1] < min){\n      min = test_list[i][1];\n      index = i;\n    }\n  }\n  return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_value = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 1; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_value = test_list[0][1];\n    var min_index = 0;\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i][1] < min_value){\n            min_value = test_list[i][1];\n            min_index = i;\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][1] < min) {\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min){\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1665510259,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min = test_list[0][1];\n    var index = 0;\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][1] < min) {\n            min = test_list[i][1];\n            index = i;\n        }\n    }\n    return test_list[index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given an array of arrays, write a function that returns the first value of the array with the smallest second value.\nfunction index_minimum(test_list){\n    var min_index = 0;\n    var min_value = test_list[0][1];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][1] < min_value){\n            min_index = i;\n            min_value = test_list[i][1];\n        }\n    }\n    return test_list[min_index][0];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = index_minimum;\n  assert.deepEqual(candidate([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\");\n  assert.deepEqual(candidate([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\");\n  assert.deepEqual(candidate([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\");\n}\n\ntest();",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_392_get_max_sum",
  "language": "js",
  "prompt": "//Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfunction get_max_sum(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_sum;\n  assert.deepEqual(candidate(60),106);\n  assert.deepEqual(candidate(10),12);\n  assert.deepEqual(candidate(2),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n == 0 || n == 1){\n        return n;\n    }\n    else{\n        return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    }\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let arr = [];\n    arr[0] = 0;\n    arr[1] = 1;\n    for(let i=2; i<=n; i++){\n        arr[i] = Math.max(arr[Math.floor(i/2)] + arr[Math.floor(i/3)] + arr[Math.floor(i/4)] + arr[Math.floor(i/5)], i);\n    }\n    return arr[n];\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = n;\n    let sum2 = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4));\n    if(sum2 > sum){\n        sum = sum2;\n    }\n    return sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n <= 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = 0;\n    for(let i=2; i<=5; i++){\n        sum = Math.max(sum, get_max_sum(n/i));\n    }\n    return sum + n;\n}\n",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\treturn Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n==0){\n        return 0;\n    }\n    if(n==1){\n        return 1;\n    }\n    if(n==2){\n        return 2;\n    }\n    if(n==3){\n        return 3;\n    }\n    if(n==4){\n        return 4;\n    }\n    if(n==5){\n        return 5;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n <= 0)\n        return 0;\n    if(n <= 5)\n        return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    if(n > 5){\n        return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n    }\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<0){\n        return 0;\n    }\n    if(n==0){\n        return 0;\n    }\n    if(n==1){\n        return 1;\n    }\n    var sum = Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n    return sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var a = get_max_sum(n/2);\n    var b = get_max_sum(n/3);\n    var c = get_max_sum(n/4);\n    var d = get_max_sum(n/5);\n    return Math.max(n,a+b+c+d);\n}",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    if(n==6) return 6;\n    if(n==7) return 7;\n    if(n==8) return 8;\n    if(n==9) return 9;\n    if(n==10) return 10;\n    if(n==11) return 11;\n    if(n==12) return 12;\n    if(n==13) return 13;\n    if(n==14) return 14;\n    if(n==15) return 15;\n    if(n==16) return 16;\n    if(n==17) return 17;\n    if(n==18) return 18;\n    if(n==19) return 19;\n    if(n==20) return 20;\n    if(n==21) return 21;\n    if(n==22) return 22;\n    if(n==23) return 23;\n    if(n==24) return 24;\n    if(n==25) return 25;\n    if(n==26) return 26;\n    if(n==27) return 27;\n    if(n==28) return 28;\n    if(n==29) return 29;\n    if(n==30) return 30;\n    if(n==31) return 31;\n    if(n==32) return 32;\n    if(n==33) return 33;\n    if(n==34) return 34;\n    if(n==35) return 35;\n    if(n==36) return 36;\n    if(n==37) return 37;\n    if(n==38) return 38;\n    if(n==39) return 39;\n    if(n==40) return 40;\n    if(n==41) return 41;\n    if(n==42) return 42;\n    if(n==43) return 43;\n    if(n==44) return 44;\n    if(n==45) return 45;\n    if(n",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = Math.max(sum, get_max_sum(n/i));\n    }\n    return sum + n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}",
    "    if(n<=0)\n        return 0;\n    var arr = [];\n    arr[0] = 0;\n    arr[1] = 1;\n    for(var i=2;i<=n;i++){\n        arr[i] = Math.max(arr[Math.floor(i/2)] + arr[Math.floor(i/3)] + arr[Math.floor(i/4)] + arr[Math.floor(i/5)], i);\n    }\n    return arr[n];\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n == 0 || n == 1){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    var max_sum = n;\n    var temp = 0;\n    for(var i=2;i<=5;i++){\n        temp = get_max_sum(Math.floor(n/i));\n        if(temp > max_sum){\n            max_sum = temp;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n==0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var sum = 0;\n    sum = Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n    return sum;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max_sum = 0;\n    for(var i=2; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = 0;\n    sum = Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n    return sum;\n}",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tvar sum = n;\n\tvar temp = 0;\n\tfor(var i=2;i<=5;i++){\n\t\ttemp = get_max_sum(Math.floor(n/i));\n\t\tif(temp>sum){\n\t\t\tsum = temp;\n\t\t}\n\t}\n\treturn sum;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn 1;\n\tif(n==2)\n\t\treturn 2;\n\tif(n==3)\n\t\treturn 3;\n\tif(n==4)\n\t\treturn 4;\n\tif(n==5)\n\t\treturn 5;\n\tvar sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n\tif(sum>n)\n\t\treturn sum;\n\telse\n\t\treturn n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n <= 0)\n        return 0;\n    if(n <= 5)\n        return n;\n    var max = 0;\n    for(var i = 2; i <= 5; i++){\n        var temp = get_max_sum(n/i);\n        if(temp > max)\n            max = temp;\n    }\n    return max + n;\n}\n",
    "    if(n <= 0)\n        return 0;\n    else if(n <= 5)\n        return n;\n    else{\n        var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n        return Math.max(n, sum);\n    }\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}",
    "  if(n<=0){\n    return 0;\n  }\n  if(n<=5){\n    return n;\n  }\n  return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum += get_max_sum(n/i);\n    }\n    return Math.max(sum,n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    var max_sum = 0;\n    for(var i=1; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n < 0) return 0;\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    if(n == 6) return 6;\n    if(n == 7) return 7;\n    if(n == 8) return 8;\n    if(n == 9) return 9;\n    if(n == 10) return 10;\n    if(n == 11) return 11;\n    if(n == 12) return 13;\n    if(n == 13) return 14;\n    if(n == 14) return 15;\n    if(n == 15) return 16;\n    if(n == 16) return 17;\n    if(n == 17) return 18;\n    if(n == 18) return 19;\n    if(n == 19) return 20;\n    if(n == 20) return 21;\n    if(n == 21) return 22;\n    if(n == 22) return 23;\n    if(n == 23) return 24;\n    if(n == 24) return 25;\n    if(n == 25) return 26;\n    if(n == 26) return 27;\n    if(n == 27) return 28;\n    if(n == 28) return 29;\n    if(n == 29) return 30;\n    if(n == 30) return 31;\n    if(n == 31) return 32;\n    if(n == 32) return 33;\n    if(n == 33) return 34;\n    if(n == 34) return 35;\n    if(n == 35) return 36;\n    if(n == 36) return 37;\n    if(n == 37) return 38;\n    if(n == 38) return 39;\n    if(n == 39) return 40;\n    if(n == 40) return 41;\n    if(n == 41) return 42;\n    if(n == 42) return 43;\n    if(n == 43) return 44;\n    if(n == 44) return 45;\n    if(n ==",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let max_sum = 0;\n    for(let i=2;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = 0;\n    for(let i=2; i<=5; i++){\n        sum = Math.max(sum, get_max_sum(Math.floor(n/i)));\n    }\n    return sum + n;\n}\n",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    if(n == 2){\n        return 2;\n    }\n    if(n == 3){\n        return 3;\n    }\n    if(n == 4){\n        return 4;\n    }\n    if(n == 5){\n        return 5;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum > n){\n        return max_sum;\n    }\n    return n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max_sum = 0;\n    for(var i=1;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n-i));\n    }\n    return max_sum;\n}\n",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\tvar max = 0;\n\tfor(var i=1; i<=5; i++){\n\t\tmax = Math.max(max, get_max_sum(n/i));\n\t}\n\treturn max;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1; i<=5; i++){\n        max = Math.max(max, get_max_sum(n/i));\n    }\n    return max;\n}\n",
    "  if(n <= 0){\n    return 0;\n  }\n  return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let sum = 0;\n    for(let i=2; i<=5; i++){\n        sum = Math.max(sum, get_max_sum(n/i));\n    }\n    return sum;\n}\n",
    "\tif(n < 0) return 0;\n\tvar max = n;\n\tvar max_sum = 0;\n\tfor(var i = 2; i <= 5; i++){\n\t\tmax_sum = get_max_sum(n/i);\n\t\tif(max_sum > max){\n\t\t\tmax = max_sum;\n\t\t}\n\t}\n\treturn max;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n,get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "  if(n<=0){\n    return 0;\n  }\n  else{\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n  }\n}",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tvar max_sum = n;\n\tvar temp_sum = 0;\n\tfor(var i=1; i<=5; i++){\n\t\ttemp_sum = get_max_sum(n/i);\n\t\tif(temp_sum > max_sum){\n\t\t\tmax_sum = temp_sum;\n\t\t}\n\t}\n\treturn max_sum;\n}\n",
    "    if(n <= 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\tvar sum = 0;\n\tfor(var i=2;i<=5;i++){\n\t\tsum += get_max_sum(n/i);\n\t}\n\treturn Math.max(n,sum);\n}\n",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tvar max = n;\n\tvar sum = 0;\n\tfor(var i=1;i<=5;i++){\n\t\tsum = get_max_sum(Math.floor(n/i));\n\t\tif(sum>max){\n\t\t\tmax = sum;\n\t\t}\n\t}\n\treturn max;\n}\n",
    "    if(n <= 1){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}",
    "    if(n < 12){\n        return n;\n    }\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "  if(n<=0){\n    return 0;\n  }\n  if(n<=5){\n    return n;\n  }\n  var max_sum = 0;\n  for(var i=1; i<=5; i++){\n    max_sum = Math.max(max_sum, get_max_sum(n/i));\n  }\n  return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "    if(n < 0) return 0;\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "  if(n == 0) return 0;\n  if(n == 1) return 1;\n  if(n == 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return 4;\n  if(n == 5) return 5;\n  return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n==0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    if(n == 2){\n        return 2;\n    }\n    if(n == 3){\n        return 3;\n    }\n    if(n == 4){\n        return 4;\n    }\n    if(n == 5){\n        return 5;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n < 1)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "\tif(n<=0)\n\t\treturn 0;\n\telse{\n\t\tvar max_sum = Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n\t\treturn max_sum;\n\t}\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let max_sum = n;\n    let sum = 0;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "\tif(n<=0)\n\t\treturn 0;\n\tvar sum = n;\n\tvar temp = 0;\n\tfor(var i=2;i<=5;i++){\n\t\ttemp = get_max_sum(Math.floor(n/i));\n\t\tif(temp>sum)\n\t\t\tsum = temp;\n\t}\n\treturn sum;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    var max_sum = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n    return Math.max(max_sum, n);\n}\n",
    "  if(n < 0)\n    return 0;\n  else if(n == 0)\n    return 0;\n  else\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n == 0)\n        return 0;\n    else if(n == 1)\n        return 1;\n    else if(n == 2)\n        return 2;\n    else if(n == 3)\n        return 3;\n    else if(n == 4)\n        return 4;\n    else if(n == 5)\n        return 5;\n    else\n        return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    if(n == 6)\n        return 6;\n    if(n == 7)\n        return 7;\n    if(n == 8)\n        return 8;\n    if(n == 9)\n        return 9;\n    if(n == 10)\n        return 10;\n    if(n == 11)\n        return 11;\n    if(n == 12)\n        return 12;\n    if(n == 13)\n        return 13;\n    if(n == 14)\n        return 14;\n    if(n == 15)\n        return 15;\n    if(n == 16)\n        return 16;\n    if(n == 17)\n        return 17;\n    if(n == 18)\n        return 18;\n    if(n == 19)\n        return 19;\n    if(n == 20)\n        return 20;\n    if(n == 21)\n        return 21;\n    if(n == 22)\n        return 22;\n    if(n == 23)\n        return 23;\n    if(n == 24)\n        return 24;\n    if(n == 25)\n        return 25;\n    if(n == 26)\n        return 26;\n    if(n == 27)\n        return 27;\n    if(n == 28)\n        return 28;\n    if(n == 29)\n        return 29;\n    if(n == 30)\n        return 30;\n    if(n == 31)\n        return 31;\n    if(n == 32)\n        return 32;\n    if(n == 33)\n        return 33;\n    if(n == 34)\n        return 34;\n    if(n == 35)\n        return 35;\n    if(n == 36)\n        return 36;\n    if(n == 37)\n        return 37;\n    if(n",
    "    if(n<=0)\n        return 0;\n    if(n==1)\n        return 1;\n    if(n==2)\n        return 2;\n    if(n==3)\n        return 3;\n    if(n==4)\n        return 4;\n    if(n==5)\n        return 5;\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<0)\n        return 0;\n    if(n==0)\n        return 0;\n    if(n==1)\n        return 1;\n    if(n==2)\n        return 2;\n    if(n==3)\n        return 3;\n    if(n==4)\n        return 4;\n    if(n==5)\n        return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n <= 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n < 0){\n        return 0;\n    }\n    if(n == 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n == 0)\n        return 0;\n    else if(n == 1)\n        return 1;\n    else if(n == 2)\n        return 2;\n    else if(n == 3)\n        return 3;\n    else if(n == 4)\n        return 4;\n    else if(n == 5)\n        return 5;\n    else\n        return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n == 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "  if(n <= 0) return 0;\n  if(n <= 5) return n;\n  return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\treturn Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n==0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    let max_sum = n;\n    for(let i = 2; i <= 5; i++){\n        let temp = get_max_sum(n/i);\n        if(temp > max_sum){\n            max_sum = temp;\n        }\n    }\n    return max_sum;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\tvar max_sum = n;\n\tfor(var i=1; i<=5; i++){\n\t\tvar temp = get_max_sum(n/i);\n\t\tif(temp > max_sum)\n\t\t\tmax_sum = temp;\n\t}\n\treturn max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else{\n        return Math.max(get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)),n);\n    }\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    var max = Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    return max;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n == 0 || n == 1){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max_sum = 0;\n    for(var i=2;i<=5;i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}",
    "    if(n<=0){\n        return 0;\n    }\n    else if(n<=5){\n        return n;\n    }\n    else{\n        return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    }\n}\n",
    "    if(n < 0) return 0;\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0)\n        return 0;\n    var max_sum = n;\n    var sum = 0;\n    for(var i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(max_sum < sum)\n            max_sum = sum;\n    }\n    return max_sum;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)), n);\n}\n",
    "\tif(n<0) return 0;\n\tif(n==0) return 0;\n\tif(n==1) return 1;\n\tif(n==2) return 2;\n\tif(n==3) return 3;\n\tif(n==4) return 4;\n\tif(n==5) return 5;\n\treturn Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    var max_sum = 0;\n    for(var i = 2; i <= 5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n==0){\n        return 0;\n    }\n    else if(n<=5){\n        return n;\n    }\n    else{\n        var max=0;\n        for(var i=1;i<=5;i++){\n            max=Math.max(max,get_max_sum(n/i));\n        }\n        return max;\n    }\n}",
    "    if(n<=0)\n        return 0;\n    var max_sum = n;\n    var sum = 0;\n    for(var i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(max_sum < sum)\n            max_sum = sum;\n    }\n    return max_sum;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tvar max = n;\n\tvar temp = 0;\n\tfor(var i=2;i<=5;i++){\n\t\ttemp = get_max_sum(Math.floor(n/i));\n\t\tif(temp > max)\n\t\t\tmax = temp;\n\t}\n\treturn max;\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\tif(n<=5)\n\t\treturn n;\n\treturn Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "  if(n<=0){\n    return 0;\n  }\n  if(n<=5){\n    return n;\n  }\n  var max_sum = 0;\n  for(var i=1;i<=5;i++){\n    max_sum = Math.max(max_sum, get_max_sum(n/i));\n  }\n  return max_sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n < 2){\n        return n;\n    }\n    let max_sum = n;\n    for(let i = 2; i <= 5; i++){\n        if(n % i === 0){\n            max_sum = Math.max(max_sum, get_max_sum(n/i));\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1;i<=5;i++){\n        max = Math.max(max,get_max_sum(n-i));\n    }\n    return max;\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let max_sum = 0;\n    for(let i=2;i<=5;i++){\n        let sum = get_max_sum(n/i);\n        if(sum>max_sum) max_sum = sum;\n    }\n    return max_sum+n;\n}",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    var max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return max_sum>n?max_sum:n;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    else{\n        return Math.max(n,get_max_sum(Math.floor(n/2))+get_max_sum(Math.floor(n/3))+get_max_sum(Math.floor(n/4))+get_max_sum(Math.floor(n/5)));\n    }\n}",
    "    if(n < 0)\n        return 0;\n    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=2) return n;\n    if(n<=5) return n;\n    var a = get_max_sum(n/2);\n    var b = get_max_sum(n/3);\n    var c = get_max_sum(n/4);\n    var d = get_max_sum(n/5);\n    return Math.max(n, a+b+c+d);\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    if(n <= 5){\n        return n;\n    }\n    let sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n <= 0) return 0;\n    if(n <= 5) return n;\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}",
    "\tif(n<=0) return 0;\n\tif(n<=5) return n;\n\tvar arr = [];\n\tarr[0] = 0;\n\tarr[1] = 1;\n\tarr[2] = 2;\n\tarr[3] = 3;\n\tarr[4] = 4;\n\tarr[5] = 5;\n\tfor(var i=6; i<=n; i++){\n\t\tarr[i] = Math.max(arr[i/2] + arr[i/3] + arr[i/4] + arr[i/5], i);\n\t}\n\treturn arr[n];\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = n;\n    let max_sum = n;\n    for(let i=2;i<=5;i++){\n        sum = get_max_sum(Math.floor(n/i));\n        if(sum>max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n <= 0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max = 0;\n    for(var i=1;i<=5;i++){\n        max = Math.max(max, get_max_sum(n/i));\n    }\n    return max;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "  if(n<=0) return 0;\n  if(n<=5) return n;\n  return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}\n",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else{\n        return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    }\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n}",
    "    if(n<=0)\n        return 0;\n    else if(n<=5)\n        return n;\n    else{\n        var max = Math.max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n        return max;\n    }\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\telse{\n\t\tvar sum = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n\t\treturn sum>n?sum:n;\n\t}\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var max_sum = 0;\n    for(var i=1; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum;\n}\n",
    "\tif(n<=0)\n\t\treturn 0;\n\telse if(n<=5)\n\t\treturn n;\n\telse{\n\t\tvar max_sum = Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n\t\treturn max_sum;\n\t}\n}\n",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tvar sum = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n\treturn Math.max(sum,n);\n}\n",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5), n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0){\n        return 0;\n    }\n    var max_sum = n;\n    var temp_sum = 0;\n    for(var i=2;i<=5;i++){\n        temp_sum = get_max_sum(n/i);\n        if(temp_sum > max_sum){\n            max_sum = temp_sum;\n        }\n    }\n    return max_sum;\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    let sum = get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5));\n    return Math.max(n, sum);\n}\n",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}\n",
    "\tif(n<=0){\n\t\treturn 0;\n\t}\n\tif(n<=5){\n\t\treturn n;\n\t}\n\treturn Math.max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    return Math.max(n, get_max_sum(Math.floor(n/2)) + get_max_sum(Math.floor(n/3)) + get_max_sum(Math.floor(n/4)) + get_max_sum(Math.floor(n/5)));\n}\n",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    var sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return Math.max(sum, n);\n}\n",
    "    if(n<=0){\n        return 0;\n    }\n    if(n<=5){\n        return n;\n    }\n    return Math.max(get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5),n);\n}",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    let max_sum = 0;\n    for(let i=2; i<=5; i++){\n        max_sum = Math.max(max_sum, get_max_sum(n/i));\n    }\n    return max_sum + n;\n}\n"
  ]
}
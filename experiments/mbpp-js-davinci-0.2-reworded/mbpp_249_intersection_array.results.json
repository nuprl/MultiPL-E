{
  "name": "mbpp_249_intersection_array",
  "language": "js",
  "prompt": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n  var result_array = [];\n  for(var i = 0; i < array_nums1.length; i++){\n    for(var j = 0; j < array_nums2.length; j++){\n      if(array_nums1[i] == array_nums2[j]){\n        result_array.push(array_nums1[i]);\n      }\n    }\n  }\n  return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item])\n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4yn47j1c.js:26:10)\n    at Object.<anonymous> (/tmp/tmp4yn47j1c.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var array_nums3 = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                array_nums3.push(array_nums1[i]);\n            }\n        }\n    }\n    return array_nums3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] === array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n  var result_array = [];\n  for(var i = 0; i < array_nums1.length; i++){\n    for(var j = 0; j < array_nums2.length; j++){\n      if(array_nums1[i] == array_nums2[j]){\n        result_array.push(array_nums2[j]);\n      }\n    }\n  }\n  return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item])\n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4yn47j1c.js:26:10)\n    at Object.<anonymous> (/tmp/tmp4yn47j1c.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult_array.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] === array_nums2[j]){\n\t\t\t\tresult_array.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums2[j]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item])\n        {\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp62dju77q.js:26:10)\n    at Object.<anonymous> (/tmp/tmp62dju77q.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums2[j]);\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n    while(len--){\n        var item = arr[len];\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4xzkkpsz.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4xzkkpsz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\twhile(len--){\n\t\tvar item = arr[len];\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpamsjc3r_.js:22:10)\n    at Object.<anonymous> (/tmp/tmpamsjc3r_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums2[j]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item])\n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4yn47j1c.js:26:10)\n    at Object.<anonymous> (/tmp/tmp4yn47j1c.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\n\twhile(len--){\n\t\tvar item = arr[len];\n\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpmoo5ln_s.js:25:10)\n    at Object.<anonymous> (/tmp/tmpmoo5ln_s.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n  var result = [];\n  for(var i = 0; i < array_nums1.length; i++){\n    for(var j = 0; j < array_nums2.length; j++){\n      if(array_nums1[i] == array_nums2[j]){\n        result.push(array_nums2[j]);\n      }\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n  var result_array = [];\n  for(var i = 0; i < array_nums1.length; i++){\n    for(var j = 0; j < array_nums2.length; j++){\n      if(array_nums1[i] == array_nums2[j]){\n        result_array.push(array_nums1[i]);\n      }\n    }\n  }\n  return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums2[j]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums2[j]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\twhile(len--){\n\t\tvar item = arr[len];\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpamsjc3r_.js:22:10)\n    at Object.<anonymous> (/tmp/tmpamsjc3r_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult_array.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item])\n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4yn47j1c.js:26:10)\n    at Object.<anonymous> (/tmp/tmp4yn47j1c.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var obj = {};\n    for(var i = 0; i < array_nums1.length; i++){\n        obj[array_nums1[i]] = true;\n    }\n    for(var j = 0; j < array_nums2.length; j++){\n        if(obj[array_nums2[j]]){\n            result_array.push(array_nums2[j]);\n            delete obj[array_nums2[j]];\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\n\twhile(len--){\n\t\tvar item = arr[len];\n\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpj2_s0rk_.js:24:10)\n    at Object.<anonymous> (/tmp/tmpj2_s0rk_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\n\twhile(len--){\n\t\tvar item = arr[len];\n\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpmoo5ln_s.js:25:10)\n    at Object.<anonymous> (/tmp/tmpmoo5ln_s.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] === array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums2[j]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n  var result_array = [];\n  for(var i = 0; i < array_nums1.length; i++){\n    for(var j = 0; j < array_nums2.length; j++){\n      if(array_nums1[i] === array_nums2[j]){\n        result_array.push(array_nums1[i]);\n      }\n    }\n  }\n  return result_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums2[j]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item])\n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4yn47j1c.js:26:10)\n    at Object.<anonymous> (/tmp/tmp4yn47j1c.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n  var result_array = [];\n  var arr = array_nums1.concat(array_nums2);\n  var len = arr.length;\n  var assoc = {};\n\n  while(len--) {\n    var item = arr[len];\n\n    if(!assoc[item]) \n    { \n      result_array.unshift(item);\n      assoc[item] = true;\n    }\n  }\n\n  return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp8914n9ny.js:26:10)\n    at Object.<anonymous> (/tmp/tmp8914n9ny.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n    while(len--){\n        var item = arr[len];\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4xzkkpsz.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4xzkkpsz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult_array.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nvar array_nums1 = [1, 2, 2, 1];\nvar array_nums2 = [2, 2];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] == array_nums2[j]){\n\t\t\t\tresult_array.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\n\twhile(len--){\n\t\tvar item = arr[len];\n\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpmoo5ln_s.js:25:10)\n    at Object.<anonymous> (/tmp/tmpmoo5ln_s.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n    while(len--){\n        var item = arr[len];\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmp4xzkkpsz.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4xzkkpsz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--) {\n        var item = arr[len];\n\n        if(!assoc[item]) \n        { \n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpafd2j8bu.js:26:10)\n    at Object.<anonymous> (/tmp/tmpafd2j8bu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] === array_nums2[j]){\n                result.push(array_nums2[j]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpbixxbot8.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbixxbot8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result = [];\n\tfor(var i = 0; i < array_nums1.length; i++){\n\t\tfor(var j = 0; j < array_nums2.length; j++){\n\t\t\tif(array_nums1[i] === array_nums2[j]){\n\t\t\t\tresult.push(array_nums1[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    var arr = array_nums1.concat(array_nums2);\n    var len = arr.length;\n    var assoc = {};\n\n    while(len--){\n        var item = arr[len];\n\n        if(!assoc[item]){\n            result_array.unshift(item);\n            assoc[item] = true;\n        }\n    }\n\n    return result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1665517468,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpr095ob7z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpr095ob7z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n    var result_array = [];\n    for(var i = 0; i < array_nums1.length; i++){\n        for(var j = 0; j < array_nums2.length; j++){\n            if(array_nums1[i] == array_nums2[j]){\n                result_array.push(array_nums1[i]);\n                break;\n            }\n        }\n    }\n    return result_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the intersection of two arrays.\nfunction intersection_array(array_nums1, array_nums2){\n\tvar result_array = [];\n\tvar arr = array_nums1.concat(array_nums2);\n\tvar len = arr.length;\n\tvar assoc = {};\n\n\twhile(len--){\n\t\tvar item = arr[len];\n\n\t\tif(!assoc[item]){\n\t\t\tresult_array.unshift(item);\n\t\t\tassoc[item] = true;\n\t\t}\n\t}\n\treturn result_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = intersection_array;\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [1, 2, 4, 8, 9]),[1, 2, 8, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [3, 5, 7, 9]),[3, 5, 7, 9]);\n  assert.deepEqual(candidate([1, 2, 3, 5, 7, 8, 9, 10], [10, 20, 30, 40]),[10]);\n}\n\ntest();",
      "timestamp": 1666123206,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  7,\n  10,\n  1,\n  2,\n  4,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  8,\n  9\n]\n    at test (/tmp/tmpj2_s0rk_.js:24:10)\n    at Object.<anonymous> (/tmp/tmpj2_s0rk_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 7, 10, 1,\n    2, 4, 8,  9\n  ],\n  expected: [ 1, 2, 8, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
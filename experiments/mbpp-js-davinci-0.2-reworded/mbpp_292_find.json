{
  "name": "mbpp_292_find",
  "language": "js",
  "prompt": "//Write a jsthon function to find quotient of two numbers (rounded down to the nearest integer).\nfunction find(n, m){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find;\n  assert.deepEqual(candidate(10, 3),3);\n  assert.deepEqual(candidate(4, 2),2);\n  assert.deepEqual(candidate(20, 5),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n / m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n / m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n / m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}\n",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n/m);\n}",
    "    return Math.floor(n / m);\n}",
    "    return Math.floor(n/m);\n}"
  ]
}
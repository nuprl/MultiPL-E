{
  "name": "mbpp_290_max_length",
  "language": "js",
  "prompt": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nvar list1 = [[1,2,3], [1,2,3,4,5], [1,2,3,4,5,6,7], [1,2], [1]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp96_a7l7p.js:17:10)\n    at Object.<anonymous> (/tmp/tmp96_a7l7p.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n\tvar max = list1[0].length;\n\tvar max_index = 0;\n\tfor(var i = 1; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\treturn list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp6lxqn2y2.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6lxqn2y2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppvb3nt27.js:18:10)\n    at Object.<anonymous> (/tmp/tmppvb3nt27.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpjqpun9t_.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjqpun9t_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpebzhtinp.js:16:10)\n    at Object.<anonymous> (/tmp/tmpebzhtinp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp9sx_djx0.js:19:10)\n    at Object.<anonymous> (/tmp/tmp9sx_djx0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = list1[0].length;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp16dtd5ka.js:18:10)\n    at Object.<anonymous> (/tmp/tmp16dtd5ka.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n\tvar max = 0;\n\tvar max_array = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t\tmax_array = list1[i];\n\t\t}\n\t}\n\treturn max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprcqwdbqo.js:19:10)\n    at Object.<anonymous> (/tmp/tmprcqwdbqo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_list = list1[i];\n        }\n    }\n    return max_length_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpjhbpbp4c.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjhbpbp4c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nvar list1 = [[1,2,3,4,5],[1,2,3,4],[1,2,3,4,5,6,7,8,9,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpbre7p14o.js:19:10)\n    at Object.<anonymous> (/tmp/tmpbre7p14o.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpz22n9iex.js:18:10)\n    at Object.<anonymous> (/tmp/tmpz22n9iex.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpimv7334u.js:19:10)\n    at Object.<anonymous> (/tmp/tmpimv7334u.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp6kbk8s46.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6kbk8s46.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_array = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpbfrngs8j.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbfrngs8j.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpirmadqxm.js:17:10)\n    at Object.<anonymous> (/tmp/tmpirmadqxm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp2tjijlkb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2tjijlkb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprs1hw2q2.js:18:10)\n    at Object.<anonymous> (/tmp/tmprs1hw2q2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp18gwlyft.js:18:10)\n    at Object.<anonymous> (/tmp/tmp18gwlyft.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=1; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpksbkhgc4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpksbkhgc4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(max_length < list1[i].length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpixhqrsrv.js:18:10)\n    at Object.<anonymous> (/tmp/tmpixhqrsrv.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmgd3svnp.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmgd3svnp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max=0;\n    var max_array=[];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n            max_array=list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoe7v5bxy.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoe7v5bxy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpbvjfc4ey.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbvjfc4ey.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3tz484pa.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3tz484pa.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpwdfsj59m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwdfsj59m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp48g6a90m.js:18:10)\n    at Object.<anonymous> (/tmp/tmp48g6a90m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nvar list1 = [[1,2,3],[4,5,6,7],[8,9,10,11,12]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmpd2yhh2.js:19:10)\n    at Object.<anonymous> (/tmp/tmpmpd2yhh2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplwgeql06.js:19:10)\n    at Object.<anonymous> (/tmp/tmplwgeql06.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_array = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp580dutfx.js:19:10)\n    at Object.<anonymous> (/tmp/tmp580dutfx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_arr = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpglok10mq.js:19:10)\n    at Object.<anonymous> (/tmp/tmpglok10mq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nvar list1 = [[1,2,3],[4,5,6],[7,8,9,10]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpefpvc2gn.js:19:10)\n    at Object.<anonymous> (/tmp/tmpefpvc2gn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppvb3nt27.js:18:10)\n    at Object.<anonymous> (/tmp/tmppvb3nt27.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp84foqx4s.js:16:10)\n    at Object.<anonymous> (/tmp/tmp84foqx4s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max){\n\t\t\tmax = list1[i].length;\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpgm_7knp8.js:17:10)\n    at Object.<anonymous> (/tmp/tmpgm_7knp8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpo0oveboc.js:19:10)\n    at Object.<anonymous> (/tmp/tmpo0oveboc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpbvjfc4ey.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbvjfc4ey.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n\tvar max_length = 0;\n\tvar max_array = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max_length){\n\t\t\tmax_length = list1[i].length;\n\t\t\tmax_array = list1[i];\n\t\t}\n\t}\n\treturn max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpeu49etft.js:19:10)\n    at Object.<anonymous> (/tmp/tmpeu49etft.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplwgeql06.js:19:10)\n    at Object.<anonymous> (/tmp/tmplwgeql06.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpgax3zon4.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgax3zon4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp56zo2gaj.js:19:10)\n    at Object.<anonymous> (/tmp/tmp56zo2gaj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n\tvar max_length = 0;\n\tvar max_index = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max_length){\n\t\t\tmax_length = list1[i].length;\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\treturn list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprlbqp63f.js:19:10)\n    at Object.<anonymous> (/tmp/tmprlbqp63f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpv5ntf0kl.js:19:10)\n    at Object.<anonymous> (/tmp/tmpv5ntf0kl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpxkyijguq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxkyijguq.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nvar list1 = [[1,2,3], [4,5,6,7], [8,9,10,11,12], [13,14,15,16,17,18]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpz3hxg1w9.js:20:10)\n    at Object.<anonymous> (/tmp/tmpz3hxg1w9.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpet5vt5jk.js:19:10)\n    at Object.<anonymous> (/tmp/tmpet5vt5jk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp6kbk8s46.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6kbk8s46.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            index = i;\n        }\n    }\n    return list1[index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp4upy4xoo.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4upy4xoo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmptopkkiuo.js:19:10)\n    at Object.<anonymous> (/tmp/tmptopkkiuo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=1; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp10x8w6nd.js:17:10)\n    at Object.<anonymous> (/tmp/tmp10x8w6nd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp48g6a90m.js:18:10)\n    at Object.<anonymous> (/tmp/tmp48g6a90m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n  var max = 0;\n  var max_array = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_array = list1[i];\n    }\n  }\n  return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppghs342i.js:19:10)\n    at Object.<anonymous> (/tmp/tmppghs342i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(max < list1[i].length){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpln42wnu3.js:17:10)\n    at Object.<anonymous> (/tmp/tmpln42wnu3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_arr = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp0qtoqcb0.js:19:10)\n    at Object.<anonymous> (/tmp/tmp0qtoqcb0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpunw120a5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpunw120a5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n  var max = 0;\n  var max_array = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_array = list1[i];\n    }\n  }\n  return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppghs342i.js:19:10)\n    at Object.<anonymous> (/tmp/tmppghs342i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n        }\n    }\n    return max_length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpws4bauxf.js:17:10)\n    at Object.<anonymous> (/tmp/tmpws4bauxf.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpgax3zon4.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgax3zon4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n        }\n    }\n    return max_length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp815g08_6.js:17:10)\n    at Object.<anonymous> (/tmp/tmp815g08_6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp0el0_s43.js:18:10)\n    at Object.<anonymous> (/tmp/tmp0el0_s43.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length>max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmptvcdx9v_.js:18:10)\n    at Object.<anonymous> (/tmp/tmptvcdx9v_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpfyf277n6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfyf277n6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoiw8t7y3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiw8t7y3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp2tjijlkb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2tjijlkb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpvs7euw7_.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvs7euw7_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpgax3zon4.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgax3zon4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_arr = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\n\nvar list1 = [[1,2,3], [4,5,6], [7,8,9,10,11,12]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp72wrymvp.js:20:10)\n    at Object.<anonymous> (/tmp/tmp72wrymvp.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_arr = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpglok10mq.js:19:10)\n    at Object.<anonymous> (/tmp/tmpglok10mq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nvar list1 = [[1,2,3], [4,5,6], [7,8,9,10,11,12], [13,14,15,16]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprxwt9xgs.js:20:10)\n    at Object.<anonymous> (/tmp/tmprxwt9xgs.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpet5vt5jk.js:19:10)\n    at Object.<anonymous> (/tmp/tmpet5vt5jk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpdx7n_y85.js:19:10)\n    at Object.<anonymous> (/tmp/tmpdx7n_y85.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i=1;i<list1.length;i++){\n        if(max<list1[i].length){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp_9g7z09t.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_9g7z09t.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoiw8t7y3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiw8t7y3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprrfvqtoh.js:18:10)\n    at Object.<anonymous> (/tmp/tmprrfvqtoh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpei5yx1v9.js:19:10)\n    at Object.<anonymous> (/tmp/tmpei5yx1v9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp747yzj0w.js:19:10)\n    at Object.<anonymous> (/tmp/tmp747yzj0w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp84foqx4s.js:16:10)\n    at Object.<anonymous> (/tmp/tmp84foqx4s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpehfcz7kb.js:16:10)\n    at Object.<anonymous> (/tmp/tmpehfcz7kb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp2tjijlkb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2tjijlkb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max_length){\n            max_length=list1[i].length;\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmps8x44lx4.js:16:10)\n    at Object.<anonymous> (/tmp/tmps8x44lx4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpwawmv_kb.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwawmv_kb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmgd3svnp.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmgd3svnp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmptsd5gcei.js:18:10)\n    at Object.<anonymous> (/tmp/tmptsd5gcei.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpqzqpuof2.js:19:10)\n    at Object.<anonymous> (/tmp/tmpqzqpuof2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_arr = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpe_on2tf6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpe_on2tf6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_array = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpjtio1i1q.js:19:10)\n    at Object.<anonymous> (/tmp/tmpjtio1i1q.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp_anc1064.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_anc1064.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length=0;\n    var max_index=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max_length){\n            max_length=list1[i].length;\n            max_index=i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8qkuetou.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8qkuetou.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprt2v5k_j.js:19:10)\n    at Object.<anonymous> (/tmp/tmprt2v5k_j.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nvar list1 = [[1,2,3], [4,5,6,7], [8,9,10,11,12]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp880o0m82.js:18:10)\n    at Object.<anonymous> (/tmp/tmp880o0m82.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for (var i = 1; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp65gp6yve.js:19:10)\n    at Object.<anonymous> (/tmp/tmp65gp6yve.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpmgd3svnp.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmgd3svnp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpgshx22gf.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgshx22gf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpn6xqu6s3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpn6xqu6s3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp48g6a90m.js:18:10)\n    at Object.<anonymous> (/tmp/tmp48g6a90m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n  var max = 0;\n  var max_array = [];\n  for(var i = 0; i < list1.length; i++){\n    if(list1[i].length > max){\n      max = list1[i].length;\n      max_array = list1[i];\n    }\n  }\n  return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppghs342i.js:19:10)\n    at Object.<anonymous> (/tmp/tmppghs342i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpgax3zon4.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgax3zon4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_arr = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp2_k0nn8n.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2_k0nn8n.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoiw8t7y3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiw8t7y3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_arr = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3ht9kh0s.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3ht9kh0s.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_index = 0;\n    for(var i=0;i<list1.length;i++){\n        if(max_len<list1[i].length){\n            max_len = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nvar list1 = [[1,2,3],[4,5,6,7],[8,9,10,11,12],[13,14,15,16,17,18]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpb1nyohsi.js:19:10)\n    at Object.<anonymous> (/tmp/tmpb1nyohsi.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpo0oveboc.js:19:10)\n    at Object.<anonymous> (/tmp/tmpo0oveboc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp2tjijlkb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2tjijlkb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpbvjfc4ey.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbvjfc4ey.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_arr = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp0qtoqcb0.js:19:10)\n    at Object.<anonymous> (/tmp/tmp0qtoqcb0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_arr = [];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpg6b29dmp.js:18:10)\n    at Object.<anonymous> (/tmp/tmpg6b29dmp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp20mfp5ud.js:19:10)\n    at Object.<anonymous> (/tmp/tmp20mfp5ud.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_length_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_length_array = list1[i];\n        }\n    }\n    return max_length_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpv5ntf0kl.js:19:10)\n    at Object.<anonymous> (/tmp/tmpv5ntf0kl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            index = i;\n        }\n    }\n    return list1[index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp4upy4xoo.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4upy4xoo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprrfvqtoh.js:18:10)\n    at Object.<anonymous> (/tmp/tmprrfvqtoh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var index = 0;\n    for(var i = 1; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            index = i;\n        }\n    }\n    return list1[index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpa9xzkt9z.js:19:10)\n    at Object.<anonymous> (/tmp/tmpa9xzkt9z.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max=0;\n    var max_index=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n            max_index=i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplgqjab1z.js:18:10)\n    at Object.<anonymous> (/tmp/tmplgqjab1z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nvar list1 = [[1,2,3], [1,2,3,4,5,6,7], [1,2,3,4], [1,2,3,4,5,6]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpo6xm2d44.js:19:10)\n    at Object.<anonymous> (/tmp/tmpo6xm2d44.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp3tz484pa.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3tz484pa.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n        }\n    }\n    return max_len;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp922nxtiv.js:17:10)\n    at Object.<anonymous> (/tmp/tmp922nxtiv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n\tvar max_len = 0;\n\tvar max_arr = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tif(list1[i].length > max_len){\n\t\t\tmax_len = list1[i].length;\n\t\t\tmax_arr = list1[i];\n\t\t}\n\t}\n\treturn max_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpsao9_en0.js:19:10)\n    at Object.<anonymous> (/tmp/tmpsao9_en0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmppvb3nt27.js:18:10)\n    at Object.<anonymous> (/tmp/tmppvb3nt27.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplwgeql06.js:19:10)\n    at Object.<anonymous> (/tmp/tmplwgeql06.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max=0;\n    var max_index=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n            max_index=i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmplgqjab1z.js:18:10)\n    at Object.<anonymous> (/tmp/tmplgqjab1z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpr8gmqqeo.js:18:10)\n    at Object.<anonymous> (/tmp/tmpr8gmqqeo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = list1[0].length;\n    var max_index = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpis16vuyz.js:18:10)\n    at Object.<anonymous> (/tmp/tmpis16vuyz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8jchbng0.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8jchbng0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8jchbng0.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8jchbng0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max=0;\n    var max_list=[];\n    for(var i=0;i<list1.length;i++){\n        if(list1[i].length>max){\n            max=list1[i].length;\n            max_list=list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpufn9pikf.js:18:10)\n    at Object.<anonymous> (/tmp/tmpufn9pikf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1665510126,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpzgqsxhvm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzgqsxhvm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_arr = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_arr = list1[i];\n        }\n    }\n    return max_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpe_on2tf6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpe_on2tf6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_list = list1[0];\n    for(var i=1;i<list1.length;i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpoiw8t7y3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiw8t7y3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_array = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_array = list1[i];\n        }\n    }\n    return max_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpreiec5ci.js:18:10)\n    at Object.<anonymous> (/tmp/tmpreiec5ci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = list1[0].length;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpunw120a5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpunw120a5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    var max_list = [];\n    for(var i=0;i<list1.length;i++){\n        if(max<list1[i].length){\n            max = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpx38_7mpb.js:18:10)\n    at Object.<anonymous> (/tmp/tmpx38_7mpb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max){\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp75hti7ka.js:17:10)\n    at Object.<anonymous> (/tmp/tmp75hti7ka.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_len_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_len_index = i;\n        }\n    }\n    return list1[max_len_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmph42elo4n.js:19:10)\n    at Object.<anonymous> (/tmp/tmph42elo4n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    var max_index = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_length){\n            max_length = list1[i].length;\n            max_index = i;\n        }\n    }\n    return list1[max_index];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123192,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmp8ztn0y4r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8ztn0y4r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_list = [];\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_list = list1[i];\n        }\n    }\n    return max_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpcxn423lh.js:19:10)\n    at Object.<anonymous> (/tmp/tmpcxn423lh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_len = 0;\n    var max_len_list = [];\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i].length > max_len){\n            max_len = list1[i].length;\n            max_len_list = list1[i];\n        }\n    }\n    return max_len_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  15,\n  17\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmprcjyeddh.js:19:10)\n    at Object.<anonymous> (/tmp/tmprcjyeddh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 15, 17 ],\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the array of maximum length in an array of arrays.\nfunction max_length(list1){\n    var max_length = 0;\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i].length > max_length){\n            max_length = list1[i].length;\n        }\n    }\n    return max_length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_length;\n  assert.deepEqual(candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]]);\n  assert.deepEqual(candidate([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]]);\n  assert.deepEqual(candidate([[5], [15, 20, 25]]),[3, [15, 20, 25]]);\n}\n\ntest();",
      "timestamp": 1666123193,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n[\n  3,\n  [\n    13,\n    15,\n    17\n  ]\n]\n    at test (/tmp/tmpap0wh_mc.js:17:10)\n    at Object.<anonymous> (/tmp/tmpap0wh_mc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 3, [ 13, 15, 17 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_91_find_substring",
  "language": "js",
  "prompt": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str1_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var count = 0;\n    for(var i = 0; i < str1_len; i++){\n        if(str1[i] == sub_str[0]){\n            for(var j = 0; j < sub_str_len; j++){\n                if(str1[i+j] == sub_str[j]){\n                    count++;\n                }\n            }\n        }\n    }\n    if(count == sub_str_len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx9myk2i5.js:27:10)\n    at Object.<anonymous> (/tmp/tmpx9myk2i5.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var res = str.includes(sub);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp3zl0l25o.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp3zl0l25o.js:3:20)\n    at test (/tmp/tmp3zl0l25o.js:13:20)\n    at Object.<anonymous> (/tmp/tmp3zl0l25o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmpgfibfbng.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpgfibfbng.js:3:20)\n    at test (/tmp/tmpgfibfbng.js:16:20)\n    at Object.<anonymous> (/tmp/tmpgfibfbng.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\n\nvar str1 = [\"this is a string\", \"is this a string\", \"this is not a string\"];\nvar sub_str = \"is\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var i, j, k;\n    for(i = 0; i < str1.length; i++){\n        for(j = 0, k = i; j < sub_str.length; j++, k++){\n            if(str1[k] !== sub_str[j]){\n                break;\n            }\n        }\n        if(j === sub_str.length){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpinssmqjy.js:22:10)\n    at Object.<anonymous> (/tmp/tmpinssmqjy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var result = str.indexOf(sub);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp1zi_191u.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1zi_191u.js:3:20)\n    at test (/tmp/tmp1zi_191u.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1zi_191u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    if(str.indexOf(sub) > -1){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp6excxtwx.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp6excxtwx.js:3:20)\n    at test (/tmp/tmp6excxtwx.js:16:20)\n    at Object.<anonymous> (/tmp/tmp6excxtwx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    var result = false;\n    for (var i = 0; i < str_arr.length; i++){\n        if (str_arr[i] == sub_str){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmpeiv7omrh.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpeiv7omrh.js:3:24)\n    at test (/tmp/tmpeiv7omrh.js:18:20)\n    at Object.<anonymous> (/tmp/tmpeiv7omrh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    for(var i=0; i<str.length; i++){\n        if(str[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmpvyjwxqrr.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpvyjwxqrr.js:3:20)\n    at test (/tmp/tmpvyjwxqrr.js:16:20)\n    at Object.<anonymous> (/tmp/tmpvyjwxqrr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    var result = false;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] === sub_str){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp627ricvy.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp627ricvy.js:3:20)\n    at test (/tmp/tmp627ricvy.js:17:20)\n    at Object.<anonymous> (/tmp/tmp627ricvy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    let result = false;\n    for(let i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var result = str.indexOf(sub);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp1zi_191u.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1zi_191u.js:3:20)\n    at test (/tmp/tmp1zi_191u.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1zi_191u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmpgfibfbng.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpgfibfbng.js:3:20)\n    at test (/tmp/tmpgfibfbng.js:16:20)\n    at Object.<anonymous> (/tmp/tmpgfibfbng.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nvar str1 = [\"This is a string\", \"This is a substring\"];\nvar sub_str = \"substring\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nvar str1 = [\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str1_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var count = 0;\n    for(var i = 0; i < str1_len; i++){\n        if(str1[i] == sub_str[0]){\n            for(var j = 0; j < sub_str_len; j++){\n                if(str1[i+j] == sub_str[j]){\n                    count++;\n                }\n            }\n        }\n    }\n    if(count == sub_str_len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nvar str1 = \"This is a string\";\nvar str2 = \"is\";\nvar str3 = \"is not\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf_tt0oi9.js:31:10)\n    at Object.<anonymous> (/tmp/tmpf_tt0oi9.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var found = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\n\nvar str1 = ['this is a string', 'this is a substring'];\nvar sub_str = 'substring';\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var arr = str.split(\" \");\n    for(var i=0; i<arr.length; i++){\n        if(arr[i] === sub){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp8iiuq4pj.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp8iiuq4pj.js:3:20)\n    at test (/tmp/tmp8iiuq4pj.js:18:20)\n    at Object.<anonymous> (/tmp/tmp8iiuq4pj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub_str = sub_str.toLowerCase();\n    var result = str.includes(sub_str);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpa7k92w9x.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpa7k92w9x.js:3:20)\n    at test (/tmp/tmpa7k92w9x.js:14:20)\n    at Object.<anonymous> (/tmp/tmpa7k92w9x.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var result = str.indexOf(sub);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp1zi_191u.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1zi_191u.js:3:20)\n    at test (/tmp/tmp1zi_191u.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1zi_191u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var result = false;\n    for(var i = 0; i < str_len; i++){\n        if(str1[i] === sub_str[0]){\n            for(var j = 1; j < sub_str_len; j++){\n                if(str1[i+j] !== sub_str[j]){\n                    result = false;\n                    break;\n                }\n                result = true;\n            }\n        }\n        if(result){\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2zabkdha.js:27:10)\n    at Object.<anonymous> (/tmp/tmp2zabkdha.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == sub_str){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvajotap1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvajotap1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpmwttmgi5.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpmwttmgi5.js:3:24)\n    at test (/tmp/tmpmwttmgi5.js:17:20)\n    at Object.<anonymous> (/tmp/tmpmwttmgi5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var result = str.indexOf(sub);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp1zi_191u.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1zi_191u.js:3:20)\n    at test (/tmp/tmp1zi_191u.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1zi_191u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub_str = sub_str.toLowerCase();\n    var result = str.indexOf(sub_str);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpx4r2q6oz.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpx4r2q6oz.js:3:20)\n    at test (/tmp/tmpx4r2q6oz.js:18:20)\n    at Object.<anonymous> (/tmp/tmpx4r2q6oz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nvar str1 = [\"hello\", \"world\", \"lorem\", \"ipsum\"];\nvar sub_str = \"ipsum\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str1_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var count = 0;\n    for(var i = 0; i < str1_len; i++){\n        if(str1[i] == sub_str[0]){\n            for(var j = 0; j < sub_str_len; j++){\n                if(str1[i+j] != sub_str[j]){\n                    break;\n                }\n                else{\n                    count++;\n                }\n            }\n        }\n    }\n    if(count == sub_str_len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppneq_1q3.js:31:10)\n    at Object.<anonymous> (/tmp/tmppneq_1q3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n  return str1.indexOf(sub_str) > -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj7fj5lu9.js:11:10)\n    at Object.<anonymous> (/tmp/tmpj7fj5lu9.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nvar str1 = [\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    var result = false;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == sub_str){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp2f_qeudl.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp2f_qeudl.js:3:20)\n    at test (/tmp/tmp2f_qeudl.js:17:20)\n    at Object.<anonymous> (/tmp/tmp2f_qeudl.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp_wbf29k0.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp_wbf29k0.js:3:24)\n    at test (/tmp/tmp_wbf29k0.js:16:20)\n    at Object.<anonymous> (/tmp/tmp_wbf29k0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nvar str1 = [\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"];\nvar sub_str = \"is\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == sub_str){\n            count++;\n        }\n    }\n    if(count > 0){\n        console.log(\"Substring is present\");\n    }\n    else{\n        console.log(\"Substring is not present\");\n    }\n}\nfind_substring(\"My name is Khan\", \"Khan\");\nfind_substring(\"My name is Khan\", \"Khan1\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Substring is present\nSubstring is not present\n",
      "stderr": "/tmp/tmplsth8249.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmplsth8249.js:3:20)\n    at test (/tmp/tmplsth8249.js:25:20)\n    at Object.<anonymous> (/tmp/tmplsth8249.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    var count = 0;\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            count++;\n        }\n    }\n    if(count > 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpccu8wgia.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpccu8wgia.js:3:24)\n    at test (/tmp/tmpccu8wgia.js:23:20)\n    at Object.<anonymous> (/tmp/tmpccu8wgia.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) !== -1){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] === sub[0]){\n            for(var j = i; j < i + sub.length; j++){\n                if(str[j] === sub[j-i]){\n                    count++;\n                }\n                else{\n                    count = 0;\n                }\n            }\n            if(count === sub.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp1y1zek19.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1y1zek19.js:3:20)\n    at test (/tmp/tmp1y1zek19.js:29:20)\n    at Object.<anonymous> (/tmp/tmp1y1zek19.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) !== -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var substr = sub_str.toLowerCase();\n    var result = str.indexOf(substr);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpqyudfekw.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpqyudfekw.js:3:20)\n    at test (/tmp/tmpqyudfekw.js:19:20)\n    at Object.<anonymous> (/tmp/tmpqyudfekw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    return str1.indexOf(sub_str) > -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprmoagtry.js:10:10)\n    at Object.<anonymous> (/tmp/tmprmoagtry.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str1_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var count = 0;\n    for(var i = 0; i < str1_len; i++){\n        for(var j = 0; j < sub_str_len; j++){\n            if(str1[i] == sub_str[j]){\n                count++;\n            }\n        }\n    }\n    if(count == sub_str_len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpor2n4eol.js:25:10)\n    at Object.<anonymous> (/tmp/tmpor2n4eol.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        if(str[i] == sub_str){\n            count++;\n        }\n    }\n    if(count == 0){\n        console.log(\"Substring not found\");\n    }\n    else{\n        console.log(\"Substring found\");\n    }\n}\nfind_substring(\"I am a boy\", \"boy\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Substring found\n",
      "stderr": "/tmp/tmpwncjxa14.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpwncjxa14.js:3:20)\n    at test (/tmp/tmpwncjxa14.js:24:20)\n    at Object.<anonymous> (/tmp/tmpwncjxa14.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_array = str1.split(\" \");\n    for(var i = 0; i < str_array.length; i++){\n        if(str_array[i] === sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmprf0fjqri.js:3\n    var str_array = str1.split(\" \");\n                         ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmprf0fjqri.js:3:26)\n    at test (/tmp/tmprf0fjqri.js:16:20)\n    at Object.<anonymous> (/tmp/tmprf0fjqri.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nvar str1 = ['this', 'is', 'a', 'new', 'tutorial'];\nvar sub_str = 'tut';\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    var count = 0;\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpbsqpwvyf.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpbsqpwvyf.js:3:24)\n    at test (/tmp/tmpbsqpwvyf.js:17:20)\n    at Object.<anonymous> (/tmp/tmpbsqpwvyf.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nvar str1 = [\"This is a string\", \"This is a substring\"];\nvar sub_str = \"substring\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var found = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            found = true;\n        }\n    }\n    return found;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] === sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp09v4n5jq.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp09v4n5jq.js:3:24)\n    at test (/tmp/tmp09v4n5jq.js:16:20)\n    at Object.<anonymous> (/tmp/tmp09v4n5jq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str1_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var i, j;\n    for(i = 0; i < str1_len; i++){\n        for(j = 0; j < sub_str_len; j++){\n            if(str1[i] == sub_str[j]){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nvar str1 = ['hello', 'world', 'hi', 'bye'];\nvar sub_str = ['hello', 'hi', 'bye'];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5eljmtc3.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5eljmtc3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    var count = 0;\n    for(var i=0; i<str.length; i++){\n        if(str[i] == sub_str){\n            count++;\n        }\n    }\n    if(count > 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp6_kukry4.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp6_kukry4.js:3:20)\n    at test (/tmp/tmp6_kukry4.js:22:20)\n    at Object.<anonymous> (/tmp/tmp6_kukry4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var result = str.indexOf(sub);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp1zi_191u.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1zi_191u.js:3:20)\n    at test (/tmp/tmp1zi_191u.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1zi_191u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var flag = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub_str = sub_str.toLowerCase();\n    var result = str.indexOf(sub_str);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpx4r2q6oz.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpx4r2q6oz.js:3:20)\n    at test (/tmp/tmpx4r2q6oz.js:18:20)\n    at Object.<anonymous> (/tmp/tmpx4r2q6oz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    var result = false;\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmptkdzp0lg.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmptkdzp0lg.js:3:24)\n    at test (/tmp/tmptkdzp0lg.js:18:20)\n    at Object.<anonymous> (/tmp/tmptkdzp0lg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_array = str1.split(\" \");\n    var result = false;\n    for(var i=0; i<str_array.length; i++){\n        if(str_array[i] == sub_str){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp1tkx7l7h.js:3\n    var str_array = str1.split(\" \");\n                         ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp1tkx7l7h.js:3:26)\n    at test (/tmp/tmp1tkx7l7h.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1tkx7l7h.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nvar str1 = [\"this is a string\", \"is this a string\", \"this is a string\"];\nvar sub_str = \"is\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpmwttmgi5.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpmwttmgi5.js:3:24)\n    at test (/tmp/tmpmwttmgi5.js:17:20)\n    at Object.<anonymous> (/tmp/tmpmwttmgi5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var count = 0;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    if(str1.indexOf(sub_str) > -1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkcyd54gt.js:15:10)\n    at Object.<anonymous> (/tmp/tmpkcyd54gt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var arr = str.split(\" \");\n    for(var i=0; i<arr.length; i++){\n        if(arr[i] == sub){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp4xip8gg8.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp4xip8gg8.js:3:20)\n    at test (/tmp/tmp4xip8gg8.js:18:20)\n    at Object.<anonymous> (/tmp/tmp4xip8gg8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpb9a9mknb.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpb9a9mknb.js:3:24)\n    at test (/tmp/tmpb9a9mknb.js:16:20)\n    at Object.<anonymous> (/tmp/tmpb9a9mknb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n\tvar result = false;\n\tfor(var i = 0; i < str1.length; i++){\n\t\tif(str1[i].indexOf(sub_str) > -1){\n\t\t\tresult = true;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.split(\" \");\n    var count = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == sub_str){\n            count++;\n        }\n    }\n    if(count > 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpa4_vmk6j.js:3\n    var str = str1.split(\" \");\n                   ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpa4_vmk6j.js:3:20)\n    at test (/tmp/tmpa4_vmk6j.js:23:20)\n    at Object.<anonymous> (/tmp/tmpa4_vmk6j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var arr = str.split(\" \");\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] === sub){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp_ncyod9e.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp_ncyod9e.js:3:20)\n    at test (/tmp/tmp_ncyod9e.js:18:20)\n    at Object.<anonymous> (/tmp/tmp_ncyod9e.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    var result = false;\n    for(var i=0; i<str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp0r3pvebs.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp0r3pvebs.js:3:24)\n    at test (/tmp/tmp0r3pvebs.js:17:20)\n    at Object.<anonymous> (/tmp/tmp0r3pvebs.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var flag = false;\n    for(var i=0; i<str.length; i++){\n        if(str[i] === sub[0]){\n            for(var j=0; j<sub.length; j++){\n                if(str[i+j] === sub[j]){\n                    flag = true;\n                }\n                else{\n                    flag = false;\n                    break;\n                }\n            }\n        }\n    }\n    if(flag){\n        console.log(\"Substring found\");\n    }\n    else{\n        console.log(\"Substring not found\");\n    }\n}\nfind_substring(\"I am a good boy\", \"good\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Substring found\n",
      "stderr": "/tmp/tmpp7j65y0k.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpp7j65y0k.js:3:20)\n    at test (/tmp/tmpp7j65y0k.js:33:20)\n    at Object.<anonymous> (/tmp/tmpp7j65y0k.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str1_len = str1.length;\n    var sub_str_len = sub_str.length;\n    var count = 0;\n    for(var i = 0; i < str1_len; i++){\n        if(str1[i] === sub_str[0]){\n            for(var j = 0; j < sub_str_len; j++){\n                if(str1[i+j] === sub_str[j]){\n                    count++;\n                }\n            }\n        }\n    }\n    if(count === sub_str_len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar str1 = \"hello world\";\nvar sub_str = \"world\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqe6_y92o.js:29:10)\n    at Object.<anonymous> (/tmp/tmpqe6_y92o.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    var sub_str_arr = sub_str.split(\" \");\n    var result = false;\n    for(var i = 0; i < str_arr.length; i++){\n        for(var j = 0; j < sub_str_arr.length; j++){\n            if(str_arr[i] === sub_str_arr[j]){\n                result = true;\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpg17mcqx4.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpg17mcqx4.js:3:24)\n    at test (/tmp/tmpg17mcqx4.js:21:20)\n    at Object.<anonymous> (/tmp/tmpg17mcqx4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var substr = sub_str.toLowerCase();\n    var result = str.indexOf(substr);\n    if(result == -1){\n        return false;\n    }else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpjlvc_ox4.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpjlvc_ox4.js:3:20)\n    at test (/tmp/tmpjlvc_ox4.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjlvc_ox4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] === sub_str){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpjs_uf7wh.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmpjs_uf7wh.js:3:24)\n    at test (/tmp/tmpjs_uf7wh.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjs_uf7wh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == sub_str){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvajotap1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvajotap1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub = sub_str.toLowerCase();\n    var result = str.indexOf(sub);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "/tmp/tmp1zi_191u.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmp1zi_191u.js:3:20)\n    at test (/tmp/tmp1zi_191u.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1zi_191u.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for (var i=0; i<str1.length; i++){\n        if (str1[i].indexOf(sub_str) !== -1){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nvar str1 = [\"This is a string\", \"This is a substring\"];\nvar sub_str = \"substring\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n  var result = false;\n  for(var i = 0; i < str1.length; i++){\n    if(str1[i].indexOf(sub_str) > -1){\n      result = true;\n    }\n  }\n  return result;\n}\n\nvar str1 = [\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp_wbf29k0.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp_wbf29k0.js:3:24)\n    at test (/tmp/tmp_wbf29k0.js:16:20)\n    at Object.<anonymous> (/tmp/tmp_wbf29k0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_array = str1.split(\" \");\n    for(var i = 0; i < str_array.length; i++){\n        if(str_array[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp3glpoxft.js:3\n    var str_array = str1.split(\" \");\n                         ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp3glpoxft.js:3:26)\n    at test (/tmp/tmp3glpoxft.js:16:20)\n    at Object.<anonymous> (/tmp/tmp3glpoxft.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    str1.forEach(function(str){\n        if(str.indexOf(sub_str) > -1){\n            result = true;\n        }\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str = str1.toLowerCase();\n    var sub_str = sub_str.toLowerCase();\n    var result = str.indexOf(sub_str);\n    if(result == -1){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmpa0g5z7j6.js:3\n    var str = str1.toLowerCase();\n                   ^\n\nTypeError: str1.toLowerCase is not a function\n    at find_substring (/tmp/tmpa0g5z7j6.js:3:20)\n    at test (/tmp/tmpa0g5z7j6.js:19:20)\n    at Object.<anonymous> (/tmp/tmpa0g5z7j6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) != -1){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var str_arr = str1.split(\" \");\n    for(var i = 0; i < str_arr.length; i++){\n        if(str_arr[i] == sub_str){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "/tmp/tmp_wbf29k0.js:3\n    var str_arr = str1.split(\" \");\n                       ^\n\nTypeError: str1.split is not a function\n    at find_substring (/tmp/tmp_wbf29k0.js:3:24)\n    at test (/tmp/tmp_wbf29k0.js:16:20)\n    at Object.<anonymous> (/tmp/tmp_wbf29k0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n  for(var i = 0; i < str1.length; i++){\n    if(str1[i].indexOf(sub_str) > -1){\n      return true;\n    }\n  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var found = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var found = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].indexOf(sub_str) > -1){\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i=0; i<str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring(str1, sub_str){\n    var result = false;\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i].includes(sub_str)){\n            result = true;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
      "timestamp": 1665510186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
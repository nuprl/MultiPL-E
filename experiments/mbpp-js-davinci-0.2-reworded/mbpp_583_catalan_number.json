{
  "name": "mbpp_583_catalan_number",
  "language": "js",
  "prompt": "//Write a function which returns nth catalan number.\nfunction catalan_number(num){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = catalan_number;\n  assert.deepEqual(candidate(10),16796);\n  assert.deepEqual(candidate(9),4862);\n  assert.deepEqual(candidate(7),429);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var catalan_num = 1;\n    for(var i = 0; i < num; i++){\n        catalan_num = catalan_num * (num + i)/(i + 1);\n    }\n    return catalan_num;\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    if(num<=1)\n        return 1;\n    var res = 0;\n    for(var i=0;i<num;i++){\n        res += catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}\n",
    "\tvar catalan_number = 1;\n\tfor(var i = 1; i <= num; i++){\n\t\tcatalan_number = catalan_number * (2 * num - i + 1) / i;\n\t}\n\treturn catalan_number;\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}",
    "    var catalan = [];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(var i=2; i<=num; i++){\n        catalan[i] = 0;\n        for(var j=0; j<i; j++){\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];\n}\n",
    "    if(num<=1){\n        return 1;\n    }\n    var res=0;\n    for(var i=0;i<num;i++){\n        res+=catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}",
    "    var catalan_number = [];\n    catalan_number[0] = 1;\n    catalan_number[1] = 1;\n    for(var i = 2; i <= num; i++){\n        catalan_number[i] = 0;\n        for(var j = 0; j < i; j++){\n            catalan_number[i] += catalan_number[j] * catalan_number[i - j - 1];\n        }\n    }\n    return catalan_number[num];\n}\n",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    var catalan = [];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(var i = 2; i <= num; i++){\n        catalan[i] = 0;\n        for(var j = 0; j < i; j++){\n            catalan[i] = catalan[i] + catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];\n}\n",
    "    if(num<=1){\n        return 1;\n    }\n    var res = 0;\n    for(var i=0;i<num;i++){\n        res += catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}\n",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    var catalan_num = [];\n    catalan_num[0] = 1;\n    catalan_num[1] = 1;\n    for(var i = 2; i <= num; i++){\n        catalan_num[i] = 0;\n        for(var j = 0; j < i; j++){\n            catalan_num[i] += catalan_num[j] * catalan_num[i - j - 1];\n        }\n    }\n    return catalan_num[num];\n}\n",
    "    var catalan = [];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(var i = 2; i <= num; i++){\n        catalan[i] = 0;\n        for(var j = 0; j < i; j++){\n            catalan[i] += catalan[j] * catalan[i - j - 1];\n        }\n    }\n    return catalan[num];\n}\n",
    "    if(num<=1){\n        return 1;\n    }\n    var res=0;\n    for(var i=0;i<num;i++){\n        res+=catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}",
    "    if(num<=1){\n        return 1;\n    }\n    var res = 0;\n    for(var i=0;i<num;i++){\n        res += catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}",
    "    if(num <= 1){\n        return 1;\n    }\n    var res = 0;\n    for(var i = 0; i < num; i++){\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;\n}\n",
    "    if(num<=1)\n        return 1;\n    var res=0;\n    for(var i=0;i<num;i++){\n        res+=catalan_number(i)*catalan_number(num-i-1);\n    }\n    return res;\n}"
  ]
}
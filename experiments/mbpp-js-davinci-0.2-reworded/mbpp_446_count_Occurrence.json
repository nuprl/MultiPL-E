{
  "name": "mbpp_446_count_Occurrence",
  "language": "js",
  "prompt": "//Write a jsthon function to count the occurence of all elements of array in an array.\nfunction count_Occurrence(tup, lst){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Occurrence;\n  assert.deepEqual(candidate([\"a\", \"a\", \"c\", \"b\", \"d\"], [\"a\", \"b\"]),3);\n  assert.deepEqual(candidate([1, 2, 3, 1, 4, 6, 7, 1, 4], [1, 4, 7]),6);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [1, 2]),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup === lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == tup){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(tup == lst[i]){\n            count++;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup === lst[i]){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == tup){\n            count += 1;\n        }\n    }\n    return count;\n}\n\nvar tuple = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar list = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == lst){\n            count += 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\nvar tup = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar lst = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == tup){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == tup){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(tup === lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(tup == lst[i]){\n            count = count + 1;\n        }\n    }\n    return count;\n}"
  ]
}
{
  "name": "mbpp_407_rearrange_bigger",
  "language": "js",
  "prompt": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmprlaaan6i.js:34:10)\n    at Object.<anonymous> (/tmp/tmprlaaan6i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var a = n.toString().split(\"\");\n  var b = a.slice(0);\n  var c = a.slice(0);\n  var d = a.slice(0);\n  var e = a.slice(0);\n  var f = a.slice(0);\n  var g = a.slice(0);\n  var h = a.slice(0);\n  var i = a.slice(0);\n  var j = a.slice(0);\n  var k = a.slice(0);\n  var l = a.slice(0);\n  var m = a.slice(0);\n  var n = a.slice(0);\n  var o = a.slice(0);\n  var p = a.slice(0);\n  var q = a.slice(0);\n  var r = a.slice(0);\n  var s = a.slice(0);\n  var t = a.slice(0);\n  var u = a.slice(0);\n  var v = a.slice(0);\n  var w = a.slice(0);\n  var x = a.slice(0);\n  var y = a.slice(0);\n  var z = a.slice(0);\n  var aa = a.slice(0);\n  var ab = a.slice(0);\n  var ac = a.slice(0);\n  var ad = a.slice(0);\n  var ae = a.slice(0);\n  var af = a.slice(0);\n  var ag = a.slice(0);\n  var ah = a.slice(0);\n  var ai = a.slice(0);\n  var aj = a.slice(0);\n  var ak = a.slice(0);\n  var al = a.slice(0);\n  var am = a.slice(0);\n  var an = a.slice(0);\n  var ao = a.slice(0);\n  var ap = a.slice(0);\n  var aq = a.slice(0);\n  var ar = a.slice(0);\n  var as = a.slice(0);\n  var at = a.slice(\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "/tmp/tmppp90n1i3.js:49\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var num = n.toString().split('');\n  var i = num.length-1;\n  while(i > 0 && num[i] <= num[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = num.length-1;\n  while(num[j] <= num[i-1]){\n    j--;\n  }\n  var temp = num[i-1];\n  num[i-1] = num[j];\n  num[j] = temp;\n  j = num.length-1;\n  while(i < j){\n    temp = num[i];\n    num[i] = num[j];\n    num[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(num.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpft3wlrk_.js:35:10)\n    at Object.<anonymous> (/tmp/tmpft3wlrk_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  let j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  let temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwxbi263l.js:34:10)\n    at Object.<anonymous> (/tmp/tmpwxbi263l.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length-1;\n  while(arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i<=0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i<j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpixw_v5sh.js:35:10)\n    at Object.<anonymous> (/tmp/tmpixw_v5sh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var arr2 = [];\n    var arr3 = [];\n    var arr4 = [];\n    var arr5 = [];\n    var arr6 = [];\n    var arr7 = [];\n    var arr8 = [];\n    var arr9 = [];\n    var arr10 = [];\n    var arr11 = [];\n    var arr12 = [];\n    var arr13 = [];\n    var arr14 = [];\n    var arr15 = [];\n    var arr16 = [];\n    var arr17 = [];\n    var arr18 = [];\n    var arr19 = [];\n    var arr20 = [];\n    var arr21 = [];\n    var arr22 = [];\n    var arr23 = [];\n    var arr24 = [];\n    var arr25 = [];\n    var arr26 = [];\n    var arr27 = [];\n    var arr28 = [];\n    var arr29 = [];\n    var arr30 = [];\n    var arr31 = [];\n    var arr32 = [];\n    var arr33 = [];\n    var arr34 = [];\n    var arr35 = [];\n    var arr36 = [];\n    var arr37 = [];\n    var arr38 = [];\n    var arr39 = [];\n    var arr40 = [];\n    var arr41 = [];\n    var arr42 = [];\n    var arr43 = [];\n    var arr44 = [];\n    var arr45 = [];\n    var arr46 = [];\n    var arr47 = [];\n    var arr48 = [];\n    var arr49 = [];\n    var arr50 = [];\n    var arr51 = [];\n    var arr52 = [];\n    var arr53 = [];\n    var arr54 = [];\n    var arr55 = [];\n    var arr56 = [];\n    var arr57 = [];\n    var arr58 = [];\n    var arr59 = [];\n    var arr60 = [];\n    var arr61 = [];\n    var arr62 = [];\n    var arr63 = [];\n    var arr64 = [];\n    var arr65 = [];\n    var arr66 = [];\n    var arr67 = [];\n    var arr68 = [];\n    var arr69 = [];\n    var arr70 = [];\n    var arr71 = [];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "/tmp/tmp_wdm4127.js:86\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpklrckrme.js:35:10)\n    at Object.<anonymous> (/tmp/tmpklrckrme.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\").map(Number);\n    var i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i])\n        i--;\n    if (i <= 0)\n        return -1;\n    var j = arr.length - 1;\n    while (arr[j] <= arr[i - 1])\n        j--;\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpijzjsh3v.js:32:10)\n    at Object.<anonymous> (/tmp/tmpijzjsh3v.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i])\n        i--;\n    if(i <= 0)\n        return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1])\n        j--;\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqg2kyyh4.js:32:10)\n    at Object.<anonymous> (/tmp/tmpqg2kyyh4.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7wodaftf.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7wodaftf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxkz4cs8m.js:34:10)\n    at Object.<anonymous> (/tmp/tmpxkz4cs8m.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var num = n.toString().split('');\n  var i = num.length-1;\n  while(i > 0 && num[i] <= num[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }else{\n    var j = num.length-1;\n    while(num[j] <= num[i-1]){\n      j--;\n    }\n    var temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length-1;\n    while(i < j){\n      temp = num[i];\n      num[i] = num[j];\n      num[j] = temp;\n      i++;\n      j--;\n    }\n    return parseInt(num.join(''));\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpc7d04o7p.js:36:10)\n    at Object.<anonymous> (/tmp/tmpc7d04o7p.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var arr2 = arr.slice();\n    arr2.sort();\n    var arr3 = arr2.slice();\n    arr3.reverse();\n    var arr4 = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] != arr3[i]){\n            arr4.push(arr[i]);\n        }\n    }\n    if(arr4.length == 0){\n        return -1;\n    }\n    var arr5 = arr4.slice();\n    arr5.sort();\n    var arr6 = arr5.slice();\n    arr6.reverse();\n    var arr7 = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] != arr6[0]){\n            arr7.push(arr[i]);\n        }\n    }\n    var arr8 = arr7.slice();\n    arr8.sort();\n    var arr9 = arr8.slice();\n    arr9.reverse();\n    var arr10 = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == arr6[0]){\n            arr10.push(arr[i]);\n        }\n    }\n    arr10.push(arr9[0]);\n    arr10.sort();\n    var arr11 = arr10.slice();\n    arr11.reverse();\n    var arr12 = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] != arr9[0]){\n            arr12.push(arr[i]);\n        }\n    }\n    var arr13 = arr12.slice();\n    arr13.sort();\n    var arr14 = arr13.slice();\n    arr14.reverse();\n    var arr15 = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == arr9[0]){\n            arr15.push(arr[i]);\n        }\n    }\n    arr15.push(arr14[0]);\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "/tmp/tmp7d3ivmu6.js:69\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n\tvar arr = n.toString().split('');\n\tvar temp = 0;\n\tfor(var i = arr.length - 1; i > 0; i--){\n\t\tif(arr[i] > arr[i-1]){\n\t\t\ttemp = arr[i];\n\t\t\tarr[i] = arr[i-1];\n\t\t\tarr[i-1] = temp;\n\t\t\treturn parseInt(arr.join(''));\n\t\t}\n\t}\n\treturn -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6h5cu_2h.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6h5cu_2h.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i])\n        i--;\n    if (i <= 0)\n        return -1;\n    var j = arr.length - 1;\n    while (arr[j] <= arr[i - 1])\n        j--;\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8chu3mvb.js:32:10)\n    at Object.<anonymous> (/tmp/tmp8chu3mvb.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp37be0shx.js:35:10)\n    at Object.<anonymous> (/tmp/tmp37be0shx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var arr2 = [];\n    var arr3 = [];\n    var arr4 = [];\n    var arr5 = [];\n    var arr6 = [];\n    var arr7 = [];\n    var arr8 = [];\n    var arr9 = [];\n    var arr10 = [];\n    var arr11 = [];\n    var arr12 = [];\n    var arr13 = [];\n    var arr14 = [];\n    var arr15 = [];\n    var arr16 = [];\n    var arr17 = [];\n    var arr18 = [];\n    var arr19 = [];\n    var arr20 = [];\n    var arr21 = [];\n    var arr22 = [];\n    var arr23 = [];\n    var arr24 = [];\n    var arr25 = [];\n    var arr26 = [];\n    var arr27 = [];\n    var arr28 = [];\n    var arr29 = [];\n    var arr30 = [];\n    var arr31 = [];\n    var arr32 = [];\n    var arr33 = [];\n    var arr34 = [];\n    var arr35 = [];\n    var arr36 = [];\n    var arr37 = [];\n    var arr38 = [];\n    var arr39 = [];\n    var arr40 = [];\n    var arr41 = [];\n    var arr42 = [];\n    var arr43 = [];\n    var arr44 = [];\n    var arr45 = [];\n    var arr46 = [];\n    var arr47 = [];\n    var arr48 = [];\n    var arr49 = [];\n    var arr50 = [];\n    var arr51 = [];\n    var arr52 = [];\n    var arr53 = [];\n    var arr54 = [];\n    var arr55 = [];\n    var arr56 = [];\n    var arr57 = [];\n    var arr58 = [];\n    var arr59 = [];\n    var arr60 = [];\n    var arr61 = [];\n    var arr62 = [];\n    var arr63 = [];\n    var arr64 = [];\n    var arr65 = [];\n    var arr66 = [];\n    var arr67 = [];\n    var arr68 = [];\n    var arr69 = [];\n    var arr70 = [];\n    var arr71 = [];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "/tmp/tmp_wdm4127.js:86\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var arr2 = arr.slice();\n    var arr3 = arr.slice();\n    var arr4 = arr.slice();\n    var arr5 = arr.slice();\n    var arr6 = arr.slice();\n    var arr7 = arr.slice();\n    var arr8 = arr.slice();\n    var arr9 = arr.slice();\n    var arr10 = arr.slice();\n    var arr11 = arr.slice();\n    var arr12 = arr.slice();\n    var arr13 = arr.slice();\n    var arr14 = arr.slice();\n    var arr15 = arr.slice();\n    var arr16 = arr.slice();\n    var arr17 = arr.slice();\n    var arr18 = arr.slice();\n    var arr19 = arr.slice();\n    var arr20 = arr.slice();\n    var arr21 = arr.slice();\n    var arr22 = arr.slice();\n    var arr23 = arr.slice();\n    var arr24 = arr.slice();\n    var arr25 = arr.slice();\n    var arr26 = arr.slice();\n    var arr27 = arr.slice();\n    var arr28 = arr.slice();\n    var arr29 = arr.slice();\n    var arr30 = arr.slice();\n    var arr31 = arr.slice();\n    var arr32 = arr.slice();\n    var arr33 = arr.slice();\n    var arr34 = arr.slice();\n    var arr35 = arr.slice();\n    var arr36 = arr.slice();\n    var arr37 = arr.slice();\n    var arr38 = arr.slice();\n    var arr39 = arr.slice();\n    var arr40 = arr.slice();\n    var arr41 = arr.slice();\n    var arr42 = arr.slice();\n    var arr43 = arr.slice();\n    var arr44 = arr.slice();\n    var arr45 = arr.slice();\n    var arr46 = arr.slice();\n    var arr47 = arr.slice();\n    var arr48 = arr.slice();\n    var arr49 = arr.slice();\n    var arr50 = arr.slice();\n    var arr51 = arr.\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "/tmp/tmp5kfa3eyw.js:54\nconst assert = require('node:assert');\n      ^^^^^^\n\nSyntaxError: Unexpected identifier\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7wodaftf.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7wodaftf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var arr2 = arr.slice();\n    arr2.sort();\n    var arr3 = arr2.reverse();\n    var arr4 = arr3.join('');\n    if(arr4 == str){\n        return -1;\n    }\n    else{\n        var arr5 = arr.slice();\n        var arr6 = arr.slice();\n        var arr7 = arr.slice();\n        var arr8 = arr.slice();\n        var arr9 = arr.slice();\n        var arr10 = arr.slice();\n        var arr11 = arr.slice();\n        var arr12 = arr.slice();\n        var arr13 = arr.slice();\n        var arr14 = arr.slice();\n        var arr15 = arr.slice();\n        var arr16 = arr.slice();\n        var arr17 = arr.slice();\n        var arr18 = arr.slice();\n        var arr19 = arr.slice();\n        var arr20 = arr.slice();\n        var arr21 = arr.slice();\n        var arr22 = arr.slice();\n        var arr23 = arr.slice();\n        var arr24 = arr.slice();\n        var arr25 = arr.slice();\n        var arr26 = arr.slice();\n        var arr27 = arr.slice();\n        var arr28 = arr.slice();\n        var arr29 = arr.slice();\n        var arr30 = arr.slice();\n        var arr31 = arr.slice();\n        var arr32 = arr.slice();\n        var arr33 = arr.slice();\n        var arr34 = arr.slice();\n        var arr35 = arr.slice();\n        var arr36 = arr.slice();\n        var arr37 = arr.slice();\n        var arr38 = arr.slice();\n        var arr39 = arr.slice();\n        var arr40 = arr.slice();\n        var arr41 = arr.slice();\n        var arr42 = arr.slice();\n        var arr43 = arr.slice();\n        var arr44 = arr.slice();\n        var arr45 = arr.slice();\n        var arr46 = arr.slice();\n        var arr47 = arr.\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "/tmp/tmp3v_hbwc9.js:56\nconst assert = require('node:assert');\n      ^^^^^^\n\nSyntaxError: Unexpected identifier\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpklrckrme.js:35:10)\n    at Object.<anonymous> (/tmp/tmpklrckrme.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        var temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmprh064tp0.js:34:10)\n    at Object.<anonymous> (/tmp/tmprh064tp0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var index = -1;\n    for(var i = arr.length-1; i > 0; i--){\n        if(arr[i] > arr[i-1]){\n            index = i-1;\n            break;\n        }\n    }\n    if(index == -1){\n        return -1;\n    }\n    var smallest = index+1;\n    for(var i = index+2; i < arr.length; i++){\n        if(arr[i] > arr[index] && arr[i] < arr[smallest]){\n            smallest = i;\n        }\n    }\n    var temp = arr[index];\n    arr[index] = arr[smallest];\n    arr[smallest] = temp;\n    var sub = arr.splice(index+1);\n    sub.sort();\n    return parseInt(arr.concat(sub).join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwmv99oo9.js:34:10)\n    at Object.<anonymous> (/tmp/tmpwmv99oo9.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length-1;\n  while(arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i<=0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i<j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpixw_v5sh.js:35:10)\n    at Object.<anonymous> (/tmp/tmpixw_v5sh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0) return -1;\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmprcat4p6_.js:33:10)\n    at Object.<anonymous> (/tmp/tmprcat4p6_.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var arr2 = [];\n    for(var i = 0; i < arr.length; i++){\n        arr2.push(parseInt(arr[i]));\n    }\n    var arr3 = arr2.sort(function(a, b){return a-b});\n    var arr4 = [];\n    for(var j = 0; j < arr3.length; j++){\n        arr4.push(arr3[j].toString());\n    }\n    var arr5 = arr4.join('');\n    var arr6 = parseInt(arr5);\n    if(arr6 > n){\n        return arr6;\n    }\n    else{\n        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmpq9dn42su.js:28:10)\n    at Object.<anonymous> (/tmp/tmpq9dn42su.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    var j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl_3ubnpu.js:35:10)\n    at Object.<anonymous> (/tmp/tmpl_3ubnpu.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var str = n.toString();\n  var arr = str.split('');\n  var arr2 = arr.slice();\n  arr2.sort(function(a, b){return b-a});\n  if(arr.join('') === arr2.join('')){\n    return -1;\n  }\n  var i = arr.length - 1;\n  while(arr[i] <= arr[i-1]){\n    i--;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  var arr3 = arr.slice(i);\n  arr3.sort(function(a, b){return a-b});\n  arr = arr.slice(0, i).concat(arr3);\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmaecxm2z.js:33:10)\n    at Object.<anonymous> (/tmp/tmpmaecxm2z.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpklrckrme.js:35:10)\n    at Object.<anonymous> (/tmp/tmpklrckrme.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyssg52ul.js:35:10)\n    at Object.<anonymous> (/tmp/tmpyssg52ul.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }else{\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n      j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n      temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j--;\n    }\n    return parseInt(arr.join(''));\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpywyl4rt9.js:36:10)\n    at Object.<anonymous> (/tmp/tmpywyl4rt9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppmypbcpz.js:34:10)\n    at Object.<anonymous> (/tmp/tmppmypbcpz.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpixe9zn2g.js:35:10)\n    at Object.<anonymous> (/tmp/tmpixe9zn2g.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqe8us0ub.js:34:10)\n    at Object.<anonymous> (/tmp/tmpqe8us0ub.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1cfu96s9.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1cfu96s9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ax8my06.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7ax8my06.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }else{\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n      j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n      temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j--;\n    }\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsd8o4k7o.js:36:10)\n    at Object.<anonymous> (/tmp/tmpsd8o4k7o.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq2di1dv5.js:35:10)\n    at Object.<anonymous> (/tmp/tmpq2di1dv5.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpasdjks_0.js:34:10)\n    at Object.<anonymous> (/tmp/tmpasdjks_0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('').map(Number);\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxpg3v6l3.js:34:10)\n    at Object.<anonymous> (/tmp/tmpxpg3v6l3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var n_str = n.toString();\n  var n_arr = n_str.split('');\n  var n_arr_sorted = n_arr.sort();\n  var n_arr_sorted_rev = n_arr_sorted.reverse();\n  var n_arr_sorted_rev_str = n_arr_sorted_rev.join('');\n  var n_arr_sorted_rev_num = parseInt(n_arr_sorted_rev_str);\n  if(n_arr_sorted_rev_num > n){\n    return n_arr_sorted_rev_num;\n  }\n  else{\n    return -1;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3ze4k6ce.js:23:10)\n    at Object.<anonymous> (/tmp/tmp3ze4k6ce.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7d3gbtyw.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7d3gbtyw.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split('');\n    var i = num.length - 1;\n    while(i > 0 && num[i] <= num[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = num.length - 1;\n    while(num[j] <= num[i-1]){\n        j--;\n    }\n    var temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length - 1;\n    while(i < j){\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmko_qtoa.js:34:10)\n    at Object.<anonymous> (/tmp/tmpmko_qtoa.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var str = n.toString();\n    var arr = str.split('');\n    var arr2 = [];\n    var arr3 = [];\n    var arr4 = [];\n    var arr5 = [];\n    var arr6 = [];\n    var arr7 = [];\n    var arr8 = [];\n    var arr9 = [];\n    var arr10 = [];\n    var arr11 = [];\n    var arr12 = [];\n    var arr13 = [];\n    var arr14 = [];\n    var arr15 = [];\n    var arr16 = [];\n    var arr17 = [];\n    var arr18 = [];\n    var arr19 = [];\n    var arr20 = [];\n    var arr21 = [];\n    var arr22 = [];\n    var arr23 = [];\n    var arr24 = [];\n    var arr25 = [];\n    var arr26 = [];\n    var arr27 = [];\n    var arr28 = [];\n    var arr29 = [];\n    var arr30 = [];\n    var arr31 = [];\n    var arr32 = [];\n    var arr33 = [];\n    var arr34 = [];\n    var arr35 = [];\n    var arr36 = [];\n    var arr37 = [];\n    var arr38 = [];\n    var arr39 = [];\n    var arr40 = [];\n    var arr41 = [];\n    var arr42 = [];\n    var arr43 = [];\n    var arr44 = [];\n    var arr45 = [];\n    var arr46 = [];\n    var arr47 = [];\n    var arr48 = [];\n    var arr49 = [];\n    var arr50 = [];\n    var arr51 = [];\n    var arr52 = [];\n    var arr53 = [];\n    var arr54 = [];\n    var arr55 = [];\n    var arr56 = [];\n    var arr57 = [];\n    var arr58 = [];\n    var arr59 = [];\n    var arr60 = [];\n    var arr61 = [];\n    var arr62 = [];\n    var arr63 = [];\n    var arr64 = [];\n    var arr65 = [];\n    var arr66 = [];\n    var arr67 = [];\n    var arr68 = [];\n    var arr69 = [];\n    var arr70 = [];\n    var arr71 = [];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "/tmp/tmp_wdm4127.js:86\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\");\n  var i = arr.length - 1;\n  while(i > 0 && arr[i] <= arr[i - 1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length - 1;\n  while(arr[j] <= arr[i - 1]){\n    j--;\n  }\n  var temp = arr[i - 1];\n  arr[i - 1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjtuibkvc.js:35:10)\n    at Object.<anonymous> (/tmp/tmpjtuibkvc.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqe8us0ub.js:34:10)\n    at Object.<anonymous> (/tmp/tmpqe8us0ub.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while(i > 0 && arr[i - 1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpm0ga92tz.js:35:10)\n    at Object.<anonymous> (/tmp/tmpm0ga92tz.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let num = n.toString().split('');\n    let i = num.length - 1;\n    while(i > 0 && num[i] <= num[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = num.length - 1;\n    while(num[j] <= num[i-1]){\n        j--;\n    }\n    let temp = num[i-1];\n    num[i-1] = num[j];\n    num[j] = temp;\n    j = num.length - 1;\n    while(i < j){\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq4swlv_9.js:35:10)\n    at Object.<anonymous> (/tmp/tmpq4swlv_9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk1l05mng.js:35:10)\n    at Object.<anonymous> (/tmp/tmpk1l05mng.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ifr_9j.js:35:10)\n    at Object.<anonymous> (/tmp/tmp95ifr_9j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbuswo6y6.js:35:10)\n    at Object.<anonymous> (/tmp/tmpbuswo6y6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk1l05mng.js:35:10)\n    at Object.<anonymous> (/tmp/tmpk1l05mng.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }else{\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n      j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n      temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j--;\n    }\n    return parseInt(arr.join(''));\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpywyl4rt9.js:36:10)\n    at Object.<anonymous> (/tmp/tmpywyl4rt9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('');\n    let i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    let j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    let temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k7zmobo.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1k7zmobo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n\tvar arr = n.toString().split('');\n\tvar i = arr.length-1;\n\twhile(i > 0 && arr[i-1] >= arr[i]){\n\t\ti--;\n\t}\n\tif(i <= 0){\n\t\treturn -1;\n\t}\n\tvar j = arr.length-1;\n\twhile(arr[j] <= arr[i-1]){\n\t\tj--;\n\t}\n\tvar temp = arr[i-1];\n\tarr[i-1] = arr[j];\n\tarr[j] = temp;\n\tj = arr.length-1;\n\twhile(i < j){\n\t\ttemp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\ti++;\n\t\tj--;\n\t}\n\treturn parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmoy1qtdu.js:35:10)\n    at Object.<anonymous> (/tmp/tmpmoy1qtdu.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var num = n.toString().split('');\n  var i = num.length - 1;\n  while(i > 0 && num[i] <= num[i-1]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = num.length - 1;\n  while(num[j] <= num[i-1]){\n    j--;\n  }\n  var temp = num[i-1];\n  num[i-1] = num[j];\n  num[j] = temp;\n  j = num.length - 1;\n  while(i < j){\n    temp = num[i];\n    num[i] = num[j];\n    num[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(num.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbtz_nre6.js:35:10)\n    at Object.<anonymous> (/tmp/tmpbtz_nre6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split(\"\").map(Number);\n  var i = arr.length-1;\n  while(arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i<=0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i<j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(\"\"));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmhisfrix.js:34:10)\n    at Object.<anonymous> (/tmp/tmpmhisfrix.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var len = arr.length;\n    var i = len-1;\n    while(i>0 && arr[i]<=arr[i-1]){\n        i--;\n    }\n    if(i==0){\n        return -1;\n    }\n    var j = len-1;\n    while(arr[j]<=arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    var k = len-1;\n    while(i<k){\n        var temp = arr[i];\n        arr[i] = arr[k];\n        arr[k] = temp;\n        i++;\n        k--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphbctwa95.js:35:10)\n    at Object.<anonymous> (/tmp/tmphbctwa95.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var index = -1;\n    for(var i = arr.length - 1; i > 0; i--){\n        if(Number(arr[i]) > Number(arr[i - 1])){\n            index = i - 1;\n            break;\n        }\n    }\n    if(index == -1){\n        return -1;\n    }\n    var smallest = index + 1;\n    for(var i = index + 2; i < arr.length; i++){\n        if(Number(arr[i]) > Number(arr[index]) && Number(arr[i]) < Number(arr[smallest])){\n            smallest = i;\n        }\n    }\n    var temp = arr[index];\n    arr[index] = arr[smallest];\n    arr[smallest] = temp;\n    var sub_arr = arr.splice(index + 1);\n    sub_arr.sort();\n    arr = arr.concat(sub_arr);\n    return Number(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe4te5s2o.js:35:10)\n    at Object.<anonymous> (/tmp/tmpe4te5s2o.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var num = n.toString().split('');\n    var i = num.length - 1;\n    while (i > 0 && num[i - 1] >= num[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    var j = num.length - 1;\n    while (num[j] <= num[i - 1]) {\n        j--;\n    }\n    var temp = num[i - 1];\n    num[i - 1] = num[j];\n    num[j] = temp;\n    j = num.length - 1;\n    while (i < j) {\n        temp = num[i];\n        num[i] = num[j];\n        num[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(num.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphaf1fe89.js:35:10)\n    at Object.<anonymous> (/tmp/tmphaf1fe89.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var index = -1;\n    for(var i = arr.length - 1; i > 0; i--){\n        if(arr[i] > arr[i - 1]){\n            index = i - 1;\n            break;\n        }\n    }\n    if(index == -1){\n        return -1;\n    }\n    var x = arr[index];\n    var smallest = index + 1;\n    for(var i = index + 1; i < arr.length; i++){\n        if(arr[i] > x && arr[i] < arr[smallest]){\n            smallest = i;\n        }\n    }\n    var temp = arr[index];\n    arr[index] = arr[smallest];\n    arr[smallest] = temp;\n    var subarr = arr.splice(index + 1);\n    subarr.sort();\n    var newarr = arr.concat(subarr);\n    return parseInt(newarr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl63tc65g.js:36:10)\n    at Object.<anonymous> (/tmp/tmpl63tc65g.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ax8my06.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7ax8my06.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv6z5mbtx.js:34:10)\n    at Object.<anonymous> (/tmp/tmpv6z5mbtx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0) return -1;\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnoewvp_e.js:33:10)\n    at Object.<anonymous> (/tmp/tmpnoewvp_e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split(\"\");\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(\"\"));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpklrckrme.js:35:10)\n    at Object.<anonymous> (/tmp/tmpklrckrme.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    let arr = n.toString().split('')\n    let i = arr.length - 1\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--\n    }\n    if(i <= 0){\n        return -1\n    }\n    let j = arr.length - 1\n    while(arr[j] <= arr[i-1]){\n        j--\n    }\n    let temp = arr[i-1]\n    arr[i-1] = arr[j]\n    arr[j] = temp\n    j = arr.length - 1\n    while(i < j){\n        temp = arr[i]\n        arr[i] = arr[j]\n        arr[j] = temp\n        i++\n        j--\n    }\n    return parseInt(arr.join(''))\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_wgnx11u.js:35:10)\n    at Object.<anonymous> (/tmp/tmp_wgnx11u.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i] <= arr[i-1]){\n    i--;\n  }\n  if(i <= 0) return -1;\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmprcat4p6_.js:33:10)\n    at Object.<anonymous> (/tmp/tmprcat4p6_.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ax8my06.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7ax8my06.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var n_str = n.toString();\n  var n_arr = n_str.split('');\n  var n_arr_len = n_arr.length;\n  var i = n_arr_len - 1;\n  var j = i - 1;\n  while(i > 0 && n_arr[i] <= n_arr[j]){\n    i--;\n    j--;\n  }\n  if(i == 0){\n    return -1;\n  }\n  else{\n    var x = n_arr[i];\n    var smallest = i;\n    for(var k = i + 1; k < n_arr_len; k++){\n      if(n_arr[k] > x && n_arr[k] < n_arr[smallest]){\n        smallest = k;\n      }\n    }\n    var temp = n_arr[i];\n    n_arr[i] = n_arr[smallest];\n    n_arr[smallest] = temp;\n    var end_arr = n_arr.splice(i + 1);\n    end_arr.sort();\n    var result = n_arr.concat(end_arr);\n    return parseInt(result.join(''));\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n12\n\nshould loosely deep-equal\n\n21\n    at test (/tmp/tmp7tvlnju_.js:38:10)\n    at Object.<anonymous> (/tmp/tmp7tvlnju_.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected: 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsac53c7i.js:34:10)\n    at Object.<anonymous> (/tmp/tmpsac53c7i.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]) {\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ax8my06.js:35:10)\n    at Object.<anonymous> (/tmp/tmp7ax8my06.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i - 1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i - 1]){\n        j--;\n    }\n    var temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkj9aja7v.js:35:10)\n    at Object.<anonymous> (/tmp/tmpkj9aja7v.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var str = n.toString();\n  var arr = str.split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbbqhe0g5.js:36:10)\n    at Object.<anonymous> (/tmp/tmpbbqhe0g5.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length - 1;\n    while(i > 0 && arr[i] <= arr[i-1]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length - 1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1dsi8hj4.js:35:10)\n    at Object.<anonymous> (/tmp/tmp1dsi8hj4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n    var arr = n.toString().split('');\n    var i = arr.length-1;\n    while(i > 0 && arr[i-1] >= arr[i]){\n        i--;\n    }\n    if(i <= 0){\n        return -1;\n    }\n    var j = arr.length-1;\n    while(arr[j] <= arr[i-1]){\n        j--;\n    }\n    var temp = arr[i-1];\n    arr[i-1] = arr[j];\n    arr[j] = temp;\n    j = arr.length-1;\n    while(i < j){\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpntzclnf0.js:35:10)\n    at Object.<anonymous> (/tmp/tmpntzclnf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n){\n  var arr = n.toString().split('');\n  var i = arr.length-1;\n  while(i > 0 && arr[i-1] >= arr[i]){\n    i--;\n  }\n  if(i <= 0){\n    return -1;\n  }\n  var j = arr.length-1;\n  while(arr[j] <= arr[i-1]){\n    j--;\n  }\n  var temp = arr[i-1];\n  arr[i-1] = arr[j];\n  arr[j] = temp;\n  j = arr.length-1;\n  while(i < j){\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz7mqpqcx.js:35:10)\n    at Object.<anonymous> (/tmp/tmpz7mqpqcx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_247_lps",
  "language": "js",
  "prompt": "//Write a function to find the length of the longest palindromic subsequence in the given string.\nfunction lps(str){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_247_lps.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = lps;\n  assert.deepEqual(candidate(\"TENS FOR TENS\"),5);\n  assert.deepEqual(candidate(\"CARDIO FOR CARDS\"),7);\n  assert.deepEqual(candidate(\"PART OF THE JOURNEY IS PART\"),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i=0; i<n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++)\n    L[i] = [];\n  for (i = 0; i < n; i++)\n    L[i][i] = 1;\n  for (cl=2; cl<=n; cl++)\n  {\n    for (i=0; i<n-cl+1; i++)\n    {\n      j = i+cl-1;\n      if (str[i] == str[j] && cl == 2)\n         L[i][j] = 2;\n      else if (str[i] == str[j])\n         L[i][j] = L[i+1][j-1] + 2;\n      else\n         L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n    }\n  }\n  return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++)\n    {\n        for (i = 0; i < n - cl + 1; i++)\n        {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++)\n    {\n        for (i = 0; i < n - cl + 1; i++)\n        {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [[0]];\n    for (i = 0; i < n; i++)\n        L[0][i] = 0;\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][0] = 0;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill().map(() => Array(n).fill(0));\n    for(let i=0; i<n; i++){\n        dp[i][i] = 1;\n    }\n    for(let cl=2; cl<=n; cl++){\n        for(let i=0; i<n-cl+1; i++){\n            let j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                dp[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                dp[i][j] = dp[i+1][j-1] + 2;\n            }\n            else{\n                dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(null).map(() => Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let i = 2; i <= n; i++){\n        for(let j = 0; j < n - i + 1; j++){\n            let k = j + i - 1;\n            if(str[j] == str[k] && i == 2){\n                dp[j][k] = 2;\n            }\n            else if(str[j] == str[k]){\n                dp[j][k] = dp[j+1][k-1] + 2;\n            }\n            else{\n                dp[j][k] = Math.max(dp[j+1][k], dp[j][k-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [[0]];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++){\n        for (i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++) {\n    L[i] = [];\n    L[i][i] = 1;\n  }\n  for (cl = 2; cl <= n; cl++) {\n    for (i = 0; i < n - cl + 1; i++) {\n      j = i + cl - 1;\n      if (str[i] == str[j] && cl == 2) {\n        L[i][j] = 2;\n      } else if (str[i] == str[j]) {\n        L[i][j] = L[i + 1][j - 1] + 2;\n      } else {\n        L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n      }\n    }\n  }\n  return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(null).map(() => Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let l = 2; l <= n; l++){\n        for(let i = 0; i < n - l + 1; i++){\n            let j = i + l - 1;\n            if(str[i] === str[j] && l === 2){\n                dp[i][j] = 2;\n            }else if(str[i] === str[j]){\n                dp[i][j] = dp[i + 1][j - 1] + 2;\n            }else{\n                dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n            }\n        }\n    }\n    return dp[0][n - 1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++) {\n    L[i] = [];\n    L[i][i] = 1;\n  }\n  for (cl = 2; cl <= n; cl++) {\n    for (i = 0; i < n - cl + 1; i++) {\n      j = i + cl - 1;\n      if (str[i] == str[j] && cl == 2) {\n        L[i][j] = 2;\n      } else if (str[i] == str[j]) {\n        L[i][j] = L[i + 1][j - 1] + 2;\n      } else {\n        L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n      }\n    }\n  }\n  return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for(i=0; i<n; i++){\n        L[i] = new Array(n);\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for(i = 0; i < n; i++){\n        L[i] = new Array(n);\n        L[i][i] = 1;\n    }\n    for(cl = 2; cl <= n; cl++){\n        for(i = 0; i < n - cl + 1; i++){\n            j = i + cl - 1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i + 1][j - 1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [[0]];\n    for (i = 1; i < n; i++)\n        L[i] = [0];\n    for (cl=1; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 1)\n                L[i][j] = 1;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "  let n = str.length;\n  let i, j, cl;\n  let L = new Array(n).fill(0).map(() => new Array(n).fill(0));\n  for (i = 0; i < n; i++)\n    L[i][i] = 1;\n  for (cl=2; cl<=n; cl++){\n    for (i=0; i<n-cl+1; i++){\n      j = i+cl-1;\n      if (str[i] == str[j] && cl == 2)\n        L[i][j] = 2;\n      else if (str[i] == str[j])\n        L[i][j] = L[i+1][j-1] + 2;\n      else\n        L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n    }\n  }\n  return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    let n = str.length;\n    let dp = new Array(n);\n    for(let i=0;i<n;i++){\n        dp[i] = new Array(n).fill(0);\n    }\n    for(let i=0;i<n;i++){\n        dp[i][i] = 1;\n    }\n    for(let cl=2;cl<=n;cl++){\n        for(let i=0;i<n-cl+1;i++){\n            let j = i+cl-1;\n            if(str[i]==str[j] && cl==2){\n                dp[i][j] = 2;\n            }else if(str[i]==str[j]){\n                dp[i][j] = dp[i+1][j-1]+2;\n            }else{\n                dp[i][j] = Math.max(dp[i][j-1],dp[i+1][j]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "  let n = str.length;\n  let i, j, cl;\n  let L = new Array(n);\n  for (i=0; i<n; i++)\n    L[i] = new Array(n);\n  for (i=0; i<n; i++)\n    L[i][i] = 1;\n  for (cl=2; cl<=n; cl++){\n    for (i=0; i<n-cl+1; i++){\n      j = i+cl-1;\n      if (str[i] == str[j] && cl == 2)\n        L[i][j] = 2;\n      else if (str[i] == str[j])\n        L[i][j] = L[i+1][j-1] + 2;\n      else\n        L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n    }\n  }\n  return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i,j,cl;\n    let L = [];\n    for(i=0;i<n;i++){\n        L[i] = [];\n        for(j=0;j<n;j++){\n            L[i][j] = 0;\n        }\n    }\n    for(i=0;i<n;i++){\n        L[i][i] = 1;\n    }\n    for(cl=2;cl<=n;cl++){\n        for(i=0;i<n-cl+1;i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1],L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = Array(n).fill().map(() => Array(n).fill(0));\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++){\n        for (i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++) {\n    L[i] = [];\n    L[i][i] = 1;\n  }\n  for (cl = 2; cl <= n; cl++) {\n    for (i = 0; i < n - cl + 1; i++) {\n      j = i + cl - 1;\n      if (str[i] == str[j] && cl == 2) {\n        L[i][j] = 2;\n      } else if (str[i] == str[j]) {\n        L[i][j] = L[i + 1][j - 1] + 2;\n      } else {\n        L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n      }\n    }\n  }\n  return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = new Array(n);\n    for(let i=0;i<n;i++){\n        dp[i] = new Array(n).fill(0);\n    }\n    for(let i=0;i<n;i++){\n        dp[i][i] = 1;\n    }\n    for(let cl=2;cl<=n;cl++){\n        for(let i=0;i<n-cl+1;i++){\n            let j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                dp[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                dp[i][j] = dp[i+1][j-1] + 2;\n            }\n            else{\n                dp[i][j] = Math.max(dp[i][j-1],dp[i+1][j]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i=0; i<n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i,j,cl;\n    var L = [];\n    for(i=0;i<n;i++){\n        L[i] = [];\n        for(j=0;j<n;j++){\n            L[i][j] = 0;\n        }\n    }\n    for(i=0;i<n;i++){\n        L[i][i] = 1;\n    }\n    for(cl=2;cl<=n;cl++){\n        for(i=0;i<n-cl+1;i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1],L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i,j,cl;\n    var L = new Array(n);\n    for(i=0;i<n;i++){\n        L[i] = new Array(n);\n        for(j=0;j<n;j++){\n            L[i][j] = 0;\n        }\n    }\n    for(i=0;i<n;i++){\n        L[i][i] = 1;\n    }\n    for(cl=2;cl<=n;cl++){\n        for(i=0;i<n-cl+1;i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j-1],L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl=2; cl<=n; cl++) {\n        for (i=0; i<n-cl+1; i++) {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i+1][j-1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] === str[j] && cl === 2) {\n                L[i][j] = 2;\n            } else if (str[i] === str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill().map(() => Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let i = n-2; i >= 0; i--){\n        for(let j = i+1; j < n; j++){\n            if(str[i] === str[j]){\n                dp[i][j] = dp[i+1][j-1] + 2;\n            }else{\n                dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++){\n        for (i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let cl = 2; cl <= n; cl++){\n        for(let i = 0; i < n - cl + 1; i++){\n            let j = i + cl - 1;\n            if(str[i] == str[j] && cl == 2){\n                dp[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                dp[i][j] = dp[i + 1][j - 1] + 2;\n            }\n            else{\n                dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n            }\n        }\n    }\n    return dp[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let L = [];\n    for(let i=0; i<n; i++){\n        L[i] = [];\n        for(let j=0; j<n; j++){\n            L[i][j] = 0;\n        }\n    }\n    for(let i=0; i<n; i++){\n        L[i][i] = 1;\n    }\n    for(let cl=2; cl<=n; cl++){\n        for(let i=0; i<n-cl+1; i++){\n            let j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(0).map(() => Array(n).fill(0));\n    for(let i=0; i<n; i++){\n        dp[i][i] = 1;\n    }\n    for(let len=2; len<=n; len++){\n        for(let i=0; i<n-len+1; i++){\n            let j = i+len-1;\n            if(str[i] == str[j] && len == 2){\n                dp[i][j] = 2;\n            }else if(str[i] == str[j]){\n                dp[i][j] = dp[i+1][j-1] + 2;\n            }else{\n                dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "  var max = 0;\n  var len = str.length;\n  var dp = new Array(len);\n  for(var i=0; i<len; i++){\n    dp[i] = new Array(len);\n    dp[i].fill(0);\n  }\n  for(var i=0; i<len; i++){\n    dp[i][i] = 1;\n  }\n  for(var l=2; l<=len; l++){\n    for(var i=0; i<len-l+1; i++){\n      var j = i+l-1;\n      if(str[i] == str[j] && l == 2){\n        dp[i][j] = 2;\n      }\n      else if(str[i] == str[j]){\n        dp[i][j] = dp[i+1][j-1] + 2;\n      }\n      else{\n        dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n      }\n    }\n  }\n  return dp[0][len-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(0).map(() => Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let i = n - 2; i >= 0; i--){\n        for(let j = i + 1; j < n; j++){\n            if(str[i] === str[j]){\n                dp[i][j] = dp[i + 1][j - 1] + 2;\n            }\n            else{\n                dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n            }\n        }\n    }\n    return dp[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] === str[j] && cl === 2) {\n                L[i][j] = 2;\n            } else if (str[i] === str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = new Array(n);\n    for(let i=0;i<n;i++){\n        dp[i] = new Array(n);\n        dp[i].fill(0);\n    }\n    for(let i=0;i<n;i++){\n        dp[i][i] = 1;\n    }\n    for(let cl = 2; cl <= n; cl++){\n        for(let i=0;i<n-cl+1;i++){\n            let j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                dp[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                dp[i][j] = dp[i+1][j-1] + 2;\n            }\n            else{\n                dp[i][j] = Math.max(dp[i+1][j],dp[i][j-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++) {\n    L[i] = [];\n    L[i][i] = 1;\n  }\n  for (cl = 2; cl <= n; cl++) {\n    for (i = 0; i < n - cl + 1; i++) {\n      j = i + cl - 1;\n      if (str[i] == str[j] && cl == 2) {\n        L[i][j] = 2;\n      } else if (str[i] == str[j]) {\n        L[i][j] = L[i + 1][j - 1] + 2;\n      } else {\n        L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n      }\n    }\n  }\n  return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for(i=0; i<n; i++){\n        L[i] = new Array(n);\n        for(j=0; j<n; j++){\n            L[i][j] = 0;\n        }\n    }\n    for(i=0; i<n; i++){\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    let n = str.length;\n    let dp = new Array(n);\n    for(let i=0;i<n;i++){\n        dp[i] = new Array(n).fill(0);\n    }\n    for(let i=0;i<n;i++){\n        dp[i][i] = 1;\n    }\n    for(let l=2;l<=n;l++){\n        for(let i=0;i<n-l+1;i++){\n            let j = i+l-1;\n            if(str[i] == str[j] && l == 2){\n                dp[i][j] = 2;\n            }else if(str[i] == str[j]){\n                dp[i][j] = dp[i+1][j-1] + 2;\n            }else{\n                dp[i][j] = Math.max(dp[i+1][j],dp[i][j-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i=0; i<n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i,j,cl;\n    let L = Array(n).fill().map(() => Array(n).fill(0));\n    for(i=0;i<n;i++){\n        L[i][i] = 1;\n    }\n    for(cl=2;cl<=n;cl++){\n        for(i=0;i<n-cl+1;i++){\n            j = i+cl-1;\n            if(str[i]==str[j] && cl==2){\n                L[i][j] = 2;\n            }else if(str[i]==str[j]){\n                L[i][j] = L[i+1][j-1]+2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1],L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n \n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n \n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n \n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++){\n        for (i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n  \n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n  \n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++)\n      L[i] = [];\n  for (i = 0; i < n; i++)\n      L[i][i] = 1;\n  for (cl = 2; cl <= n; cl++)\n  {\n      for (i = 0; i < n - cl + 1; i++)\n      {\n          j = i + cl - 1;\n          if (str[i] == str[j] && cl == 2)\n             L[i][j] = 2;\n          else if (str[i] == str[j])\n             L[i][j] = L[i + 1][j - 1] + 2;\n          else\n             L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n      }\n  }\n  return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl=2; cl<=n; cl++) {\n        for (i=0; i<n-cl+1; i++) {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i+1][j-1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [[0]];\n  for (i = 0; i < n; i++)\n    L[0][i] = 0;\n  for (i = 0; i < n; i++)\n    L[i][0] = 0;\n  for (cl=2; cl<=n; cl++){\n    for (i=0; i<n-cl+1; i++){\n      j = i+cl-1;\n      if (str[i] == str[j] && cl == 2)\n        L[i][j] = 2;\n      else if (str[i] == str[j])\n        L[i][j] = L[i+1][j-1] + 2;\n      else\n        L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n    }\n  }\n  return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(0).map(() => Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let len = 2; len <= n; len++){\n        for(let i = 0; i < n - len + 1; i++){\n            let j = i + len - 1;\n            if(str[i] == str[j] && len == 2){\n                dp[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                dp[i][j] = dp[i + 1][j - 1] + 2;\n            }\n            else{\n                dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n            }\n        }\n    }\n    return dp[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i = 0; i < n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl = 2; cl <= n; cl++){\n        for(i = 0; i < n - cl + 1; i++){\n            j = i + cl - 1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i + 1][j - 1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n\nvar str = \"GEEKSFORGEEKS\";",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i,j,cl;\n    var L = new Array(n);\n    for(i=0;i<n;i++){\n        L[i] = new Array(n);\n        for(j=0;j<n;j++){\n            L[i][j] = 0;\n        }\n    }\n    for(i=0;i<n;i++){\n        L[i][i] = 1;\n    }\n    for(cl=2;cl<=n;cl++){\n        for(i=0;i<n-cl+1;i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1],L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = new Array(n);\n    for(let i=0;i<n;i++){\n        dp[i] = new Array(n);\n        dp[i].fill(0);\n    }\n    for(let i=0;i<n;i++){\n        dp[i][i] = 1;\n    }\n    for(let l=2;l<=n;l++){\n        for(let i=0;i<n-l+1;i++){\n            let j = i+l-1;\n            if(str[i]==str[j] && l==2){\n                dp[i][j] = 2;\n            }else if(str[i]==str[j]){\n                dp[i][j] = dp[i+1][j-1]+2;\n            }else{\n                dp[i][j] = Math.max(dp[i+1][j],dp[i][j-1]);\n            }\n        }\n    }\n    return dp[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [[0]];\n    for (i = 0; i < n; i++)\n        L[0][i] = 0;\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][0] = 0;\n    }\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i=0;i<n;i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl=2;cl<=n;cl++){\n        for(i=0;i<n-cl+1;i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let dp = Array(n).fill(null).map(() => Array(n).fill(0));\n    for(let i = 0; i < n; i++){\n        dp[i][i] = 1;\n    }\n    for(let cl = 2; cl <= n; cl++){\n        for(let i = 0; i < n - cl + 1; i++){\n            let j = i + cl - 1;\n            if(str[i] == str[j] && cl == 2){\n                dp[i][j] = 2;\n            }else if(str[i] == str[j]){\n                dp[i][j] = dp[i + 1][j - 1] + 2;\n            }else{\n                dp[i][j] = Math.max(dp[i][j - 1], dp[i + 1][j]);\n            }\n        }\n    }\n    return dp[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i=0; i<n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++)\n    {\n        for (i = 0; i < n - cl + 1; i++)\n        {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++) {\n    L[i] = [];\n    L[i][i] = 1;\n  }\n  for (cl = 2; cl <= n; cl++) {\n    for (i = 0; i < n - cl + 1; i++) {\n      j = i + cl - 1;\n      if (str[i] == str[j] && cl == 2) {\n        L[i][j] = 2;\n      } else if (str[i] == str[j]) {\n        L[i][j] = L[i + 1][j - 1] + 2;\n      } else {\n        L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n      }\n    }\n  }\n  return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i=0; i<n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl=2; cl<=n; cl++){\n        for(i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i+1][j-1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = Array(n).fill().map(() => Array(n).fill(0));\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++){\n        for (i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++){\n        for (i=0; i<n-cl+1; i++){\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] === str[j] && cl === 2) {\n                L[i][j] = 2;\n            } else if (str[i] === str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl=2; cl<=n; cl++) {\n        for (i=0; i<n-cl+1; i++) {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i+1][j-1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [[0]];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl=2; cl<=n; cl++)\n    {\n        for (i=0; i<n-cl+1; i++)\n        {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i+1][j-1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl=2; cl<=n; cl++) {\n        for (i=0; i<n-cl+1; i++) {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i+1][j-1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i + 1][j - 1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i = 0; i < n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl = 2; cl <= n; cl++){\n        for(i = 0; i < n - cl + 1; i++){\n            j = i + cl - 1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }\n            else if(str[i] == str[j]){\n                L[i][j] = L[i + 1][j - 1] + 2;\n            }\n            else{\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl=2; cl<=n; cl++) {\n        for (i=0; i<n-cl+1; i++) {\n            j = i+cl-1;\n            if (str[i] == str[j] && cl == 2) {\n                L[i][j] = 2;\n            } else if (str[i] == str[j]) {\n                L[i][j] = L[i+1][j-1] + 2;\n            } else {\n                L[i][j] = Math.max(L[i][j-1], L[i+1][j]);\n            }\n        }\n    }\n    return L[0][n-1];\n}\n",
    "    let n = str.length;\n    let i, j, cl;\n    let L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "  var n = str.length;\n  var i, j, cl;\n  var L = [];\n  for (i = 0; i < n; i++)\n    L[i] = [];\n  for (i = 0; i < n; i++)\n    L[i][i] = 1;\n  for (cl = 2; cl <= n; cl++) {\n    for (i = 0; i < n - cl + 1; i++) {\n      j = i + cl - 1;\n      if (str[i] == str[j] && cl == 2)\n        L[i][j] = 2;\n      else if (str[i] == str[j])\n        L[i][j] = L[i + 1][j - 1] + 2;\n      else\n        L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n    }\n  }\n  return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}",
    "    var n = str.length;\n    var i, j, cl;\n    var L = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i] = new Array(n);\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++) {\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for(i = 0; i < n; i++){\n        L[i] = [];\n        L[i][i] = 1;\n    }\n    for(cl = 2; cl <= n; cl++){\n        for(i = 0; i < n - cl + 1; i++){\n            j = i + cl - 1;\n            if(str[i] == str[j] && cl == 2){\n                L[i][j] = 2;\n            }else if(str[i] == str[j]){\n                L[i][j] = L[i + 1][j - 1] + 2;\n            }else{\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n            }\n        }\n    }\n    return L[0][n - 1];\n}\n",
    "    var n = str.length;\n    var i, j, cl;\n    var L = [];\n    for (i = 0; i < n; i++)\n        L[i] = [];\n    for (i = 0; i < n; i++)\n        L[i][i] = 1;\n    for (cl = 2; cl <= n; cl++) {\n        for (i = 0; i < n - cl + 1; i++) {\n            j = i + cl - 1;\n            if (str[i] == str[j] && cl == 2)\n                L[i][j] = 2;\n            else if (str[i] == str[j])\n                L[i][j] = L[i + 1][j - 1] + 2;\n            else\n                L[i][j] = Math.max(L[i][j - 1], L[i + 1][j]);\n        }\n    }\n    return L[0][n - 1];\n}\n"
  ]
}
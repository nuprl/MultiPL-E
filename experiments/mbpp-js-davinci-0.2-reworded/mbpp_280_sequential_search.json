{
  "name": "mbpp_280_sequential_search",
  "language": "js",
  "prompt": "//Write a function that takes in an array and element and returns an array containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).\nfunction sequential_search(dlist, item){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_280_sequential_search.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sequential_search;\n  assert.deepEqual(candidate([11, 23, 58, 31, 56, 77, 43, 12, 65, 19], 31),[true, 3]);\n  assert.deepEqual(candidate([12, 32, 45, 62, 35, 47, 44, 61], 61),[true, 7]);\n  assert.deepEqual(candidate([9, 10, 17, 19, 22, 39, 48, 56], 48),[true, 6]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while (pos < dlist.length && !found){\n        if (dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos = pos + 1;\n        }\n    }\n    return [found, pos];\n}\n",
    "    for(var i = 0; i < dlist.length; i++){\n        if(dlist[i] == item){\n            return [true, i];\n        }\n    }\n    return [false, -1];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "\tvar pos = 0;\n\tvar found = false;\n\twhile(pos < dlist.length && !found){\n\t\tif(dlist[pos] == item){\n\t\t\tfound = true;\n\t\t}\n\t\telse{\n\t\t\tpos = pos + 1;\n\t\t}\n\t}\n\treturn [found, pos];\n}\n",
    "    for(var i = 0; i < dlist.length; i++){\n        if(dlist[i] == item){\n            return [true, i];\n        }\n    }\n    return [false, -1];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while (pos < dlist.length && !found){\n        if (dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    if (found){\n        return [found, pos];\n    }\n    else{\n        return [found, -1];\n    }\n}\n",
    "    var pos = 0;\n    var found = false;\n    while (pos < dlist.length && !found){\n        if (dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    for(var i = 0; i < dlist.length; i++){\n        if(dlist[i] == item){\n            return [true, i];\n        }\n    }\n    return [false, -1];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    for(var i = 0; i < dlist.length; i++){\n        if(dlist[i] == item){\n            return [true, i];\n        }\n    }\n    return [false, -1];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while (pos < dlist.length && !found){\n        if (dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    for (var i = 0; i < dlist.length; i++){\n        if (dlist[i] == item){\n            return [true, i];\n        }\n    }\n    return [false, -1];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while (pos < dlist.length && !found){\n        if (dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos++;\n        }\n    }\n    return [found, pos];\n}\n",
    "    var pos = 0;\n    var found = false;\n    while(pos < dlist.length && !found){\n        if(dlist[pos] == item){\n            found = true;\n        }\n        else{\n            pos = pos + 1;\n        }\n    }\n    if(found){\n        return [found, pos];\n    }\n    else{\n        return [found, -1];\n    }\n}\n",
    "    for(var i = 0; i < dlist.length; i++){\n        if(dlist[i] == item){\n            return [true, i];\n        }\n    }\n    return [false, -1];\n}\n"
  ]
}
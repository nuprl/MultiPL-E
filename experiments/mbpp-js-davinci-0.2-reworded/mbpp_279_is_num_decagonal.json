{
  "name": "mbpp_279_is_num_decagonal",
  "language": "js",
  "prompt": "//Write a function to find the nth decagonal number.\nfunction is_num_decagonal(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_num_decagonal;\n  assert.deepEqual(candidate(3),27);\n  assert.deepEqual(candidate(7),175);\n  assert.deepEqual(candidate(10),370);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}",
    "\treturn (Math.sqrt(1+4*2*n)%4==3);\n}\n",
    "    var num = (Math.sqrt(4*n + 1) + 1)/2;\n    if(num % 1 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 40 * n) + 1) / 10;\n\treturn x % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 === 0;\n}\n",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(4*n + 1) + 1)/2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0)\n        return true;\n    else\n        return false;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    let num = (Math.sqrt(4*n+1)+1)/2;\n    return num % 1 === 0;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 == 0;\n}\n",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var nth_decagonal = (Math.sqrt(4*n*n-4*n+1)+1)/2;\n    if(nth_decagonal == Math.floor(nth_decagonal)){\n        return true;\n    }\n    return false;\n}",
    "    var nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;\n}",
    "\tvar a = (3*n*n - n)/2;\n\tvar b = Math.sqrt(1 + 24*a);\n\treturn (b%6 == 5);\n}\n",
    "    let num = (Math.sqrt(4*n+1)+1)/2;\n    return Number.isInteger(num);\n}",
    "\tvar nth_decagonal = n * (3 * n - 2);\n\treturn nth_decagonal;\n}\n",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    return num%1==0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}",
    "    var nth_decagonal = (3*n*n-n)/2;\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "\treturn Number.isInteger((Math.sqrt(4*n+1)+1)/2);\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var nth_decagonal = (3 * n * n - n) / 2;\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1+4*2*n) - 1)/2;\n    return num%1 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var nth_decagonal = (3 * n * n - n) / 2;\n    return nth_decagonal;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;\n}",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var n = (Math.sqrt(4*n+1)+1)/2;\n    if(n%1==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "\tvar nth_decagonal = (Math.sqrt(4*n*n-3*n+1)+1)/2;\n\tif(nth_decagonal%1 == 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    var nth_decagonal = (Math.sqrt(4*n*n-4*n+1)+1)/2;\n    if(nth_decagonal % 1 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 === 0;\n}\n",
    "    var nth_decagonal = n*(3*n-2);\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var n1 = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(n1 % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}\n",
    "    var n1 = (Math.sqrt(1+4*2*n)-1)/2;\n    if(n1%1 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var n = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(n % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var x = (Math.sqrt(40*n+9)-3)/10;\n    return x === Math.floor(x);\n}\n",
    "    var nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var nth_decagonal = 0;\n    var i = 1;\n    while(nth_decagonal < n){\n        nth_decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if(nth_decagonal == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "  var nth = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n  return nth === Math.floor(nth);\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 === 0;\n}\n",
    "    let x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(x % 1 === 0){\n        return true;\n    }\n    return false;\n}",
    "    var n = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return (n % 1 === 0);\n}\n",
    "  let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n  return Number.isInteger(num);\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 === 0;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var nth_decagonal_number = (3*n*n - n)/2;\n    return nth_decagonal_number;\n}",
    "    var m = (Math.sqrt(4*n+1)+1)/2;\n    return m == Math.floor(m);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "  var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n  return x % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4*2*n) - 1)/2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var nth_decagonal = (Math.sqrt(4*n*n-4*n+1)+1)/2;\n    if(nth_decagonal%1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var nth_decagonal = (Math.sqrt(4*n*n-4*n+1)+1)/2;\n    if(nth_decagonal%1===0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    let nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    return (Math.sqrt(1+40*n)%10==3 || Math.sqrt(1+40*n)%10==7);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var decagonal = n*(3*n-2);\n    return decagonal;\n}",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}\n",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\tif(num % 1 == 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}\n",
    "    let num = (Math.sqrt(1 + 4*2*n) - 1)/2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 === 0;\n}\n",
    "\tvar num = (Math.sqrt(1+4*2*n)+1)/2;\n\tif(num%1 == 0){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}",
    "    var nth_decagonal = n*(3*n-2);\n    return nth_decagonal;\n}",
    "    var m = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return m === Math.floor(m);\n}\n",
    "    var nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\tif(num % 1 === 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    var nth_decagonal = (3*n*n-n)/2;\n    return nth_decagonal;\n}",
    "    let num = (Math.sqrt(4*n+1)+1)/2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    let num = (Math.sqrt(4*n+1)+1)/2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var nth_decagonal = n*(3*n-2);\n    return nth_decagonal;\n}",
    "    let num = (Math.sqrt(4*n+1)+1)/2;\n    return Number.isInteger(num);\n}",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    let num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}\n",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\tif(num % 1 == 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var n = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(n == Math.floor(n)){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4*2*n) - 1)/2;\n    return num == Math.floor(num);\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "\tvar num = (3*n*n - n)/2;\n\treturn num;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\tif(num % 1 === 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    var num = (Math.sqrt(1+4*2*n)+1)/2;\n    if(num%1==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}",
    "  var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n  if(num % 1 === 0){\n    return true;\n  }\n  return false;\n}\n",
    "    var decagonal = 0;\n    var i = 1;\n    while(decagonal < n){\n        decagonal = (i * (3 * i - 1)) / 2;\n        i++;\n    }\n    if(decagonal == n){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    if(num%1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(4*n*n-4*n+1)+1)/2;\n    if(num%1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    if(n<0){\n        return false;\n    }\n    var a = (Math.sqrt(4*n+1)+1)/2;\n    if(a%1==0){\n        return true;\n    }\n    return false;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    let num = (3 * n * n - n) / 2;\n    return num;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "\tvar num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn num % 1 === 0;\n}\n",
    "    var n = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(n % 1 === 0){\n        return true;\n    }\n    return false;\n}",
    "    var result = Math.sqrt(1 + 4 * 2 * n);\n    return (result % 1 == 0);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    return num%1 === 0;\n}\n",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 == 0;\n}",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    return num%1 == 0;\n}\n",
    "    let num = (Math.sqrt(4*n+1)+1)/2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (num % 1 === 0) {\n        return true;\n    }\n    return false;\n}\n",
    "\tvar num = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tnum = i * (3 * i - 1) / 2;\n\t}\n\treturn num;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var nth_decagonal = (3 * n * n - n) / 2;\n    return nth_decagonal;\n}",
    "\tvar x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n\treturn x % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}\n",
    "    var nth_decagonal = (3*Math.pow(n,2)-n)/2;\n    return nth_decagonal;\n}",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x === Math.floor(x);\n}\n",
    "    var num = (Math.sqrt(4*n+1)+1)/2;\n    if(num%1 == 0){\n        return true;\n    }\n    return false;\n}",
    "  var a = (3*n*n - n)/2;\n  return a;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}\n",
    "    var nth_decagonal = (3*n*n - n)/2;\n    return nth_decagonal;\n}",
    "    var nth_decagonal = (3 * Math.pow(n, 2) - n) / 2;\n    return nth_decagonal;\n}",
    "    var num = (3 * n * n - n) / 2;\n    return num;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}",
    "    var n = (Math.sqrt(4*n+1) + 1)/2;\n    if(n % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 === 0){\n        return true;\n    }\n    return false;\n}\n",
    "    var x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x % 1 === 0;\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if(num % 1 == 0){\n        return true;\n    }\n    return false;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}\n",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return Number.isInteger(num);\n}",
    "    var num = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return num % 1 === 0;\n}\n",
    "    var nth_decagonal = n * (3 * n - 2);\n    return nth_decagonal;\n}",
    "    return Number.isInteger(Math.sqrt(1 + 40 * n)) && Math.sqrt(1 + 40 * n) % 4 == 3;\n}\n"
  ]
}
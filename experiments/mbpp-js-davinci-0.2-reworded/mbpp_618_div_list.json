{
  "name": "mbpp_618_div_list",
  "language": "js",
  "prompt": "//Write a function to divide two arrays element wise.\nfunction div_list(nums1, nums2){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_618_div_list.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = div_list;\n  assert.deepEqual(candidate([4, 5, 6], [1, 2, 3]),[4.0, 2.5, 2.0]);\n  assert.deepEqual(candidate([3, 2], [1, 4]),[3.0, 0.5]);\n  assert.deepEqual(candidate([90, 120], [50, 70]),[1.8, 1.7142857142857142]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for (var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < nums1.length; i++){\n        new_list.push(nums1[i] / nums2[i]);\n    }\n    return new_list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < nums1.length; i++){\n        new_list.push(nums1[i] / nums2[i]);\n    }\n    return new_list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var div_list = [];\n    for (var i = 0; i < nums1.length; i++){\n        div_list.push(nums1[i] / nums2[i]);\n    }\n    return div_list;\n}\n",
    "    var new_list = [];\n    for(var i = 0; i < nums1.length; i++){\n        new_list.push(nums1[i] / nums2[i]);\n    }\n    return new_list;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        result.push(nums1[i] / nums2[i]);\n    }\n    return result;\n}\n"
  ]
}
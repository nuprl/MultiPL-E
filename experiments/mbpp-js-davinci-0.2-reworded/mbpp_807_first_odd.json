{
  "name": "mbpp_807_first_odd",
  "language": "js",
  "prompt": "//Write a jsthon function to find the first odd number in a given array of numbers.\nfunction first_odd(nums){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_807_first_odd.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_odd;\n  assert.deepEqual(candidate([1, 3, 5]),1);\n  assert.deepEqual(candidate([2, 4, 1, 3]),1);\n  assert.deepEqual(candidate([8, 9, 1]),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 != 0){\n            return nums[i];\n        }\n    }\n}\n",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(let i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 == 1){\n            return nums[i];\n        }\n    }\n}\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i] % 2 != 0){\n            return nums[i];\n        }\n    }\n}\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}\nvar nums=[2,4,6,7,8,9];",
    "    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 == 1){\n            return nums[i];\n        }\n    }\n}\n",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(var i=0;i<nums.length;i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}",
    "    for(let i=0; i<nums.length; i++){\n        if(nums[i]%2!=0){\n            return nums[i];\n        }\n    }\n}"
  ]
}
{
  "name": "mbpp_64_subject_marks",
  "language": "js",
  "prompt": "//Write a function to sort an array of arrays using the second value of each array.\nfunction subject_marks(subjectmarks){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = subject_marks;\n  assert.deepEqual(candidate([[\"English\", 88], [\"Science\", 90], [\"Maths\", 97], [\"Social sciences\", 82]]),[[\"Social sciences\", 82], [\"English\", 88], [\"Science\", 90], [\"Maths\", 97]]);\n  assert.deepEqual(candidate([[\"Telugu\", 49], [\"Hindhi\", 54], [\"Social\", 33]]),[[\"Social\", 33], [\"Telugu\", 49], [\"Hindhi\", 54]]);\n  assert.deepEqual(candidate([[\"Physics\", 96], [\"Chemistry\", 97], [\"Biology\", 45]]),[[\"Biology\", 45], [\"Physics\", 96], [\"Chemistry\", 97]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var subject_marks = [];\n    for(var i = 0; i < subjectmarks.length; i++){\n        subject_marks.push(subjectmarks[i][1]);\n    }\n    return subject_marks;\n}\n",
    "    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Science', 90], ['Maths', 95]];\nmarks.sort(subject_marks);",
    "    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Science', 90], ['Maths', 80], ['Hindi', 70]];\nmarks.sort(subject_marks);",
    "    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}",
    "    var sorted_array = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_array;\n}\nvar subjectmarks = [['English', 100], ['Science', 90], ['Maths', 98]];",
    "    return subjectmarks[1];\n}\n\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);",
    "    subjectmarks.sort(function(a,b){\n        return a[1]-b[1];\n    });\n    return subjectmarks;\n}",
    "    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English',100],['Math',50],['Science',80]];",
    "    return subjectmarks[1];\n}\nvar marks = [['English', 80], ['Math', 90], ['Science', 70]];\nmarks.sort(subject_marks);",
    "    var sorted = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted;\n}",
    "    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}",
    "    subjectmarks.sort(function(a,b){\n        return a[1]-b[1]\n    })\n    return subjectmarks\n}",
    "    var subject_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return subject_marks;\n}\nvar subjectmarks = [['English',100],['Science',50],['Maths',75],['Social',80]];",
    "    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}\nvar subjectmarks = [['English', 50], ['Math', 100], ['Science', 20]];",
    "    return subjectmarks[1];\n}\n",
    "    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}",
    "    var sorted_marks = subjectmarks.sort(function(a,b){\n        return a[1] - b[1];\n    });\n    return sorted_marks;\n}",
    "    return subjectmarks[1];\n}",
    "    return subjectmarks[1];\n}\nvar marks = [['English', 100], ['Math', 200], ['English', 200], ['Math', 100], ['Urdu', 100], ['Science', 100]];\nmarks.sort(subject_marks);",
    "\treturn subjectmarks[1];\n}"
  ]
}
{
  "name": "mbpp_96_divisor",
  "language": "js",
  "prompt": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=12;\nvar result=divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=prompt(\"Enter a number\");\nvar result=divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "/tmp/tmpwecuu10a.js:11\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpwecuu10a.js:11:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n = 12;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var divisor = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            divisor++;\n        }\n    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var divisors = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            divisors++;\n        }\n    }\n    return divisors;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var divisor = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            divisor++;\n        }\n    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i === 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=prompt(\"Enter a number\");\nvar result=divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "/tmp/tmpwecuu10a.js:11\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpwecuu10a.js:11:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    let count = 0;\n    for(let i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(10);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var divisor = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            divisor++;\n        }\n    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=prompt(\"Enter a number\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "/tmp/tmpiiu4r8yz.js:11\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpiiu4r8yz.js:11:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n = 12;\nvar result = divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=prompt(\"Enter a number\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "/tmp/tmpk50rnqnx.js:11\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpk50rnqnx.js:11:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    console.log(count);\n}\ndivisor(12);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "6\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpdc4tsfti.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdc4tsfti.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var divisor = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            divisor++;\n        }\n    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    console.log(count);\n}\ndivisor(10);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpi1r2uq4n.js:18:10)\n    at Object.<anonymous> (/tmp/tmpi1r2uq4n.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    console.log(count);\n}\ndivisor(10);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp350_3kra.js:18:10)\n    at Object.<anonymous> (/tmp/tmp350_3kra.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i === 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    let count = 0;\n    for(let i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar div = divisor(10);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n = 12;\nvar result = divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1; i<=n; i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=prompt(\"Enter the number\");\nvar result=divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "/tmp/tmpv5t23tlv.js:11\nvar n=prompt(\"Enter the number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpv5t23tlv.js:11:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar n=prompt(\"Enter a number\");\nvar result=divisor(n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "/tmp/tmpwecuu10a.js:11\nvar n=prompt(\"Enter a number\");\n      ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmpwecuu10a.js:11:7)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result=divisor(6);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nvar result = divisor(12);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count=0;\n    for(var i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the number of divisors of a given integer.\nfunction divisor(n){\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
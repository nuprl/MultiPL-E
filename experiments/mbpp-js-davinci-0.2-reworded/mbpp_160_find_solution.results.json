{
  "name": "mbpp_160_find_solution",
  "language": "js",
  "prompt": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y === n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a*x + b*y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    let x = 0;\n    let y = 0;\n    let d = gcd(a, b);\n    x = (n / d) * (a / d);\n    y = (n / d) * (b / d);\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "/tmp/tmp0220rw8f.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp0220rw8f.js:3:5)\n    at test (/tmp/tmp0220rw8f.js:19:20)\n    at Object.<anonymous> (/tmp/tmp0220rw8f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = 0;\n  var y = 0;\n  while(a*x + b*y != n){\n    if(a*x + b*y < n){\n      x++;\n    }\n    else{\n      y++;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tif(n % gcd(a, b) != 0)\n\t\treturn undefined;\n\telse{\n\t\tvar x = 0;\n\t\tvar y = n / b;\n\t\tvar d = gcd(a, b);\n\t\treturn [x, y];\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "/tmp/tmpb_rsrdci.js:3\n\tif(n % gcd(a, b) != 0)\n\t^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpb_rsrdci.js:3:2)\n    at test (/tmp/tmpb_rsrdci.js:18:20)\n    at Object.<anonymous> (/tmp/tmpb_rsrdci.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a*x + b*y === n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % a === 0){\n        return [n / a, 0];\n    }\n    if(n % b === 0){\n        return [0, n / b];\n    }\n    for(let i = 0; i < n; i++){\n        for(let j = 0; j < n; j++){\n            if(a * i + b * j === n){\n                return [i, j];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmp0ks16hev.js:26:10)\n    at Object.<anonymous> (/tmp/tmp0ks16hev.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  let x = 0;\n  let y = n / b;\n  while(x * a + y * b != n){\n    if(x * a + y * b < n){\n      x++;\n    }else{\n      y--;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "/tmp/tmpuzlpc33t.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpuzlpc33t.js:3:3)\n    at test (/tmp/tmpuzlpc33t.js:21:20)\n    at Object.<anonymous> (/tmp/tmpuzlpc33t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tif(a > n || b > n){\n\t\treturn undefined;\n\t}else if(n % a === 0){\n\t\treturn [n / a, 0];\n\t}else if(n % b === 0){\n\t\treturn [0, n / b];\n\t}else{\n\t\tvar result = find_solution(b, a % b, n);\n\t\treturn [result[1], result[0] - Math.floor(a / b) * result[1]];\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -7,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmp8r0h79gw.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8r0h79gw.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -7, 7 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % a === 0){\n        return [n / a, 0];\n    }\n    if(n % b === 0){\n        return [0, n / b];\n    }\n    for(let i = 0; i < n; i++){\n        for(let j = 0; j < n; j++){\n            if(a * i + b * j === n){\n                return [i, j];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmp0ks16hev.js:26:10)\n    at Object.<anonymous> (/tmp/tmp0ks16hev.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "/tmp/tmp982arous.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp982arous.js:3:3)\n    at test (/tmp/tmp982arous.js:12:20)\n    at Object.<anonymous> (/tmp/tmp982arous.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if (n % gcd(a, b) != 0) return undefined;\n  var x = 0, y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "/tmp/tmp6y57apvs.js:3\n  if (n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp6y57apvs.js:3:3)\n    at test (/tmp/tmp6y57apvs.js:14:20)\n    at Object.<anonymous> (/tmp/tmp6y57apvs.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0){\n    if(n == 0){\n      return [0, n];\n    }\n    return undefined;\n  }\n  var x = n / a;\n  var y = (n - a * x) / b;\n  if(x % 1 == 0 && y % 1 == 0){\n    return [x, y];\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmp16nrr358.js:22:10)\n    at Object.<anonymous> (/tmp/tmp16nrr358.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if (n % gcd(a, b) !== 0) return undefined;\n  let x = 0;\n  let y = 0;\n  let d = gcd(a, b);\n  while (n > 0){\n    if (n >= a){\n      n -= a;\n      x++;\n    } else if (n >= b){\n      n -= b;\n      y++;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp3oziyvoi.js:3\n  if (n % gcd(a, b) !== 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp3oziyvoi.js:3:3)\n    at test (/tmp/tmp3oziyvoi.js:24:20)\n    at Object.<anonymous> (/tmp/tmp3oziyvoi.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(a === 0 && b === 0){\n        return undefined;\n    }\n    if(a === 0){\n        return [0, n/b];\n    }\n    if(b === 0){\n        return [n/a, 0];\n    }\n    let x = find_solution(b, a%b, n);\n    return [x[1], x[0] - Math.floor(a/b)*x[1]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -7,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmp3077_kmt.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3077_kmt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -7, 7 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % a === 0){\n        return [n / a, 0];\n    }\n    if(n % b === 0){\n        return [0, n / b];\n    }\n    let x = 0;\n    let y = n / b;\n    while(x * a + y * b !== n){\n        if(x * a + y * b > n){\n            y--;\n        }\n        else{\n            x++;\n        }\n    }\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  2.3333333333333335\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmp39wlevs9.js:27:10)\n    at Object.<anonymous> (/tmp/tmp39wlevs9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 2.3333333333333335 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = find_solution(b, a%b, n);\n  return [x[1], x[0] - Math.floor(a/b)*x[1]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -7,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpa39psy5c.js:21:10)\n    at Object.<anonymous> (/tmp/tmpa39psy5c.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -7, 7 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a*x + b*y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = 0;\n  var y = 0;\n  while(a*x + b*y != n){\n    if(a*x + b*y < n){\n      x++;\n    }\n    else{\n      y++;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  else{\n    var x = 0;\n    var y = 0;\n    var d = gcd(a, b);\n    x = (n / d) * (b / d);\n    y = (n / d) * (a / d);\n    return [x, y];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp7mmjzr54.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp7mmjzr54.js:3:3)\n    at test (/tmp/tmp7mmjzr54.js:21:20)\n    at Object.<anonymous> (/tmp/tmp7mmjzr54.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  x = (n / d) * (a / d);\n  y = (n / d) * (b / d);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpypn92l6i.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpypn92l6i.js:3:3)\n    at test (/tmp/tmpypn92l6i.js:19:20)\n    at Object.<anonymous> (/tmp/tmpypn92l6i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  var x = 0, y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpgwpprtl6.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpgwpprtl6.js:3:3)\n    at test (/tmp/tmpgwpprtl6.js:14:20)\n    at Object.<anonymous> (/tmp/tmpgwpprtl6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0) return undefined;\n    let x = 0, y = 0;\n    let d = gcd(a, b);\n    let a1 = a / d, b1 = b / d, n1 = n / d;\n    let [x1, y1] = find_solution(a1, b1, n1);\n    x = y1;\n    y = (n1 - a1 * y1) / b1;\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmphua9531t.js:3\n    if(n % gcd(a, b) != 0) return undefined;\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmphua9531t.js:3:5)\n    at test (/tmp/tmphua9531t.js:18:20)\n    at Object.<anonymous> (/tmp/tmphua9531t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tvar x = 0;\n\tvar y = 0;\n\tvar result = [];\n\twhile(x*a <= n){\n\t\ty = (n - (x*a))/b;\n\t\tif(y % 1 === 0){\n\t\t\tresult.push(x);\n\t\t\tresult.push(y);\n\t\t\treturn result;\n\t\t}\n\t\tx++;\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % a === 0){\n    return [n / a, 0];\n  }\n  if(n % b === 0){\n    return [0, n / b];\n  }\n  var x = 0;\n  var y = 0;\n  while(x * a <= n){\n    if((n - x * a) % b === 0){\n      return [x, (n - x * a) / b];\n    }\n    x++;\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmp_lbpeit9.js:27:10)\n    at Object.<anonymous> (/tmp/tmp_lbpeit9.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tif (n % gcd(a, b) != 0) return undefined;\n\tvar x = 0, y = 0;\n\tvar d = gcd(a, b);\n\treturn [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp_dr8fyy9.js:3\n\tif (n % gcd(a, b) != 0) return undefined;\n\t^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp_dr8fyy9.js:3:2)\n    at test (/tmp/tmp_dr8fyy9.js:14:20)\n    at Object.<anonymous> (/tmp/tmp_dr8fyy9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  else{\n    return [a, b, n];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp894onaxj.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp894onaxj.js:3:3)\n    at test (/tmp/tmp894onaxj.js:16:20)\n    at Object.<anonymous> (/tmp/tmp894onaxj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(a < 0 || b < 0 || n < 0){\n        return undefined;\n    }\n    if(a === 0 && b === 0 && n === 0){\n        return [0, 0];\n    }\n    if(a === 0 && b === 0 && n !== 0){\n        return undefined;\n    }\n    if(a === 0 && b !== 0){\n        if(n % b === 0){\n            return [0, n / b];\n        }\n        return undefined;\n    }\n    if(a !== 0 && b === 0){\n        if(n % a === 0){\n            return [n / a, 0];\n        }\n        return undefined;\n    }\n    if(a !== 0 && b !== 0){\n        let x = 0;\n        let y = 0;\n        let temp = 0;\n        while(a * x + b * y <= n){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n            if(a * x + b * y < n){\n                temp = x;\n                x = x + 1;\n                y = (n - a * temp) / b;\n            }\n        }\n        return undefined;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpb6al7c3t.js:47:10)\n    at Object.<anonymous> (/tmp/tmpb6al7c3t.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    var x = 0;\n    var y = n / b;\n    while(x * a + y * b != n){\n        if(x * a + y * b < n){\n            x++;\n        }\n        else{\n            y--;\n        }\n    }\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpemds0m1e.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpemds0m1e.js:3:5)\n    at test (/tmp/tmpemds0m1e.js:24:20)\n    at Object.<anonymous> (/tmp/tmpemds0m1e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = n / b;\n  var r = a % b;\n  while(r > 0){\n    var q = Math.floor(a / b);\n    var t = x - (q * y);\n    x = y;\n    y = t;\n    a = b;\n    b = r;\n    r = a % b;\n  }\n  return [y, n / b];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpftr6arau.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpftr6arau.js:3:3)\n    at test (/tmp/tmpftr6arau.js:26:20)\n    at Object.<anonymous> (/tmp/tmpftr6arau.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    var x = 0;\n    var y = n / b;\n    while(x * a + y * b != n){\n        x++;\n        y = (n - a * x) / b;\n    }\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp_6f6v67x.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp_6f6v67x.js:3:5)\n    at test (/tmp/tmp_6f6v67x.js:20:20)\n    at Object.<anonymous> (/tmp/tmp_6f6v67x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n == 0){\n        return [0, 0];\n    }\n    if(n < 0){\n        return undefined;\n    }\n    var x = find_solution(a, b, n - a);\n    if(x != undefined){\n        return [x[0] + 1, x[1]];\n    }\n    var y = find_solution(a, b, n - b);\n    if(y != undefined){\n        return [y[0], y[1] + 1];\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpnclxkr7c.js:27:10)\n    at Object.<anonymous> (/tmp/tmpnclxkr7c.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    let x = 0;\n    let y = 0;\n    let d = gcd(a, b);\n    x = (n / d) * (b / d);\n    y = (n / d) * (a / d);\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmphnelnkci.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmphnelnkci.js:3:5)\n    at test (/tmp/tmphnelnkci.js:19:20)\n    at Object.<anonymous> (/tmp/tmphnelnkci.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % a === 0){\n        return [n / a, 0];\n    }\n    if(n % b === 0){\n        return [0, n / b];\n    }\n    for(let x = 1; x < n; x++){\n        for(let y = 1; y < n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpuskqkpmd.js:25:10)\n    at Object.<anonymous> (/tmp/tmpuskqkpmd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0){\n    return undefined;\n  }\n  let x = 0;\n  let y = n / a;\n  while(x * a + y * b !== n){\n    if(x * a + y * b < n){\n      x++;\n    }else{\n      y--;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpne87lili.js:3\n  if(n % gcd(a, b) !== 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpne87lili.js:3:3)\n    at test (/tmp/tmpne87lili.js:23:20)\n    at Object.<anonymous> (/tmp/tmpne87lili.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpjnnqr7wg.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpjnnqr7wg.js:3:3)\n    at test (/tmp/tmpjnnqr7wg.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjnnqr7wg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [n / d * x, n / d * y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpahq0f2hk.js:3\n  if(n % gcd(a, b) !== 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpahq0f2hk.js:3:3)\n    at test (/tmp/tmpahq0f2hk.js:17:20)\n    at Object.<anonymous> (/tmp/tmpahq0f2hk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n / b];\n  }\n  if(b == 0){\n    return [n / a, 0];\n  }\n  var x = n / a;\n  var y = (n - (a * x)) / b;\n  if(y < 0){\n    return undefined;\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3.5,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpp65rhh47.js:25:10)\n    at Object.<anonymous> (/tmp/tmpp65rhh47.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3.5, 0 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  else{\n    return [x, y];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpyi5v_0se.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpyi5v_0se.js:3:3)\n    at test (/tmp/tmpyi5v_0se.js:16:20)\n    at Object.<anonymous> (/tmp/tmpyi5v_0se.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  else{\n    return [a, b, n];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp894onaxj.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp894onaxj.js:3:3)\n    at test (/tmp/tmp894onaxj.js:16:20)\n    at Object.<anonymous> (/tmp/tmp894onaxj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  else{\n    var x = 0;\n    var y = n / b;\n    while(x * a + y * b != n){\n      x++;\n      y = (n - a * x) / b;\n    }\n    return [x, y];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpvz6rn3g7.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpvz6rn3g7.js:3:3)\n    at test (/tmp/tmpvz6rn3g7.js:20:20)\n    at Object.<anonymous> (/tmp/tmpvz6rn3g7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = n/a;\n  var y = (n - a*x)/b;\n  if(y % 1 == 0){\n    return [x, y];\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3.5,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpcb5xgcdx.js:25:10)\n    at Object.<anonymous> (/tmp/tmpcb5xgcdx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3.5, 0 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  for(let x = 0; x <= n; x++){\n    for(let y = 0; y <= n; y++){\n      if(a * x + b * y === n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = 0;\n  var y = 0;\n  while(a*x + b*y < n){\n    if(a*x + b*y < n){\n      x++;\n    }\n    if(a*x + b*y < n){\n      y++;\n    }\n  }\n  if(a*x + b*y == n){\n    return [x, y];\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpi_chz8u9.js:35:10)\n    at Object.<anonymous> (/tmp/tmpi_chz8u9.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  let x = 0;\n  let y = n / b;\n  while(x * a + y * b != n){\n    if(x * a + y * b < n){\n      x++;\n    }else{\n      y--;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "/tmp/tmpuzlpc33t.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpuzlpc33t.js:3:3)\n    at test (/tmp/tmpuzlpc33t.js:21:20)\n    at Object.<anonymous> (/tmp/tmpuzlpc33t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = n / b;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp8vy5ffyb.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp8vy5ffyb.js:3:3)\n    at test (/tmp/tmp8vy5ffyb.js:17:20)\n    at Object.<anonymous> (/tmp/tmp8vy5ffyb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(a == 0 && b == 0){\n        return undefined;\n    }\n    if(a == 0){\n        return [0, n/b];\n    }\n    if(b == 0){\n        return [n/a, 0];\n    }\n    let x = 0;\n    let y = 0;\n    while(x*a + y*b != n){\n        if(x*a + y*b > n){\n            y--;\n        }\n        else{\n            x++;\n        }\n    }\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpfoz1f_tm.js:30:10)\n    at Object.<anonymous> (/tmp/tmpfoz1f_tm.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, -1 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    var x = 0;\n    var y = 0;\n    while(x * a <= n){\n        y = (n - (a * x)) / b;\n        if(y % 1 === 0){\n            return [x, y];\n        }\n        x++;\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  var x = 0;\n  var y = 0;\n  while(x*a <= n){\n    y = (n - (x*a))/b;\n    if(y % 1 === 0){\n      return [x, y];\n    }\n    x++;\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp41nxttr3.js:3\n  if(n % gcd(a, b) !== 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp41nxttr3.js:3:3)\n    at test (/tmp/tmp41nxttr3.js:17:20)\n    at Object.<anonymous> (/tmp/tmp41nxttr3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [n / d * x, n / d * y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpahq0f2hk.js:3\n  if(n % gcd(a, b) !== 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpahq0f2hk.js:3:3)\n    at test (/tmp/tmpahq0f2hk.js:17:20)\n    at Object.<anonymous> (/tmp/tmpahq0f2hk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0){\n    return undefined;\n  }\n  let x = 0, y = 0;\n  let d = gcd(a, b);\n  x = n / d * sign(b) / (Math.abs(b) / d);\n  y = (n - a * x) / b;\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpti1k0y4k.js:3\n  if(n % gcd(a, b) !== 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpti1k0y4k.js:3:3)\n    at test (/tmp/tmpti1k0y4k.js:18:20)\n    at Object.<anonymous> (/tmp/tmpti1k0y4k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    let x = 0;\n    let y = 0;\n    let d = gcd(a, b);\n    x = (n / d) * (b / d);\n    y = (n / d) * (a / d);\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmphnelnkci.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmphnelnkci.js:3:5)\n    at test (/tmp/tmphnelnkci.js:19:20)\n    at Object.<anonymous> (/tmp/tmphnelnkci.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  let x = 0, y = 0;\n  let d = gcd(a, b);\n  x = (n/d) * (b/d);\n  y = (n/d) * (a/d);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpe9e15f05.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpe9e15f05.js:3:3)\n    at test (/tmp/tmpe9e15f05.js:16:20)\n    at Object.<anonymous> (/tmp/tmpe9e15f05.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = n / b;\n  var r = a % b;\n  while(r > 0){\n    var q = Math.floor(a / b);\n    var t = x - (q * y);\n    x = y;\n    y = t;\n    a = b;\n    b = r;\n    r = a % b;\n  }\n  return [y, n / b];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpftr6arau.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpftr6arau.js:3:3)\n    at test (/tmp/tmpftr6arau.js:26:20)\n    at Object.<anonymous> (/tmp/tmpftr6arau.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = find_solution(b, a%b, n);\n  return [x[1], x[0] - Math.floor(a/b)*x[1]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -7,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpa39psy5c.js:21:10)\n    at Object.<anonymous> (/tmp/tmpa39psy5c.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -7, 7 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  var x = 0, y = 0;\n  var x1 = 1, x2 = 0, y1 = 0, y2 = 1;\n  var q = Math.floor(a / b);\n  var r = a % b;\n  while(r > 0){\n    var temp = x2;\n    x2 = x1 - q * x2;\n    x1 = temp;\n    temp = y2;\n    y2 = y1 - q * y2;\n    y1 = temp;\n    a = b;\n    b = r;\n    q = Math.floor(a / b);\n    r = a % b;\n  }\n  x = Math.floor(n / b) * x1;\n  y = Math.floor(n / b) * y1;\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmptlunvqe9.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmptlunvqe9.js:3:3)\n    at test (/tmp/tmptlunvqe9.js:30:20)\n    at Object.<anonymous> (/tmp/tmptlunvqe9.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % a === 0){\n    return [n / a, 0];\n  }\n  if(n % b === 0){\n    return [0, n / b];\n  }\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(a * i + b * j === n){\n        return [i, j];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpq5eaav6u.js:26:10)\n    at Object.<anonymous> (/tmp/tmpq5eaav6u.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  x = (n / d) * (b / d);\n  y = (n / d) * (a / d);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpkq5xa3vn.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpkq5xa3vn.js:3:3)\n    at test (/tmp/tmpkq5xa3vn.js:19:20)\n    at Object.<anonymous> (/tmp/tmpkq5xa3vn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  x = (n / d) * (b / d);\n  y = (n / d) * (a / d);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpkq5xa3vn.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpkq5xa3vn.js:3:3)\n    at test (/tmp/tmpkq5xa3vn.js:19:20)\n    at Object.<anonymous> (/tmp/tmpkq5xa3vn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  let x = 0;\n  let y = 0;\n  let d = gcd(a, b);\n  x = (n/d) * (b/d);\n  y = (n/d) * (a/d);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpg0t3l2w5.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpg0t3l2w5.js:3:3)\n    at test (/tmp/tmpg0t3l2w5.js:19:20)\n    at Object.<anonymous> (/tmp/tmpg0t3l2w5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n%a === 0){\n        return [n/a, 0];\n    }\n    if(n%b === 0){\n        return [0, n/b];\n    }\n    let x = 0;\n    let y = 0;\n    while(x*a <= n){\n        if((n - x*a)%b === 0){\n            y = (n - x*a)/b;\n            return [x, y];\n        }\n        x++;\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmp0yy6ey3u.js:28:10)\n    at Object.<anonymous> (/tmp/tmp0yy6ey3u.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  for(var x = 0; x <= n; x++){\n    for(var y = 0; y <= n; y++){\n      if(a * x + b * y == n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  for(var x = 0; x <= n; x++){\n    for(var y = 0; y <= n; y++){\n      if(a * x + b * y == n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tif(n % gcd(a, b) != 0){\n\t\treturn undefined;\n\t}\n\tvar x = 0;\n\tvar y = 0;\n\tvar d = gcd(a, b);\n\tx = n / d * (b / d);\n\ty = n / d * (a / d);\n\treturn [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpasehajv1.js:3\n\tif(n % gcd(a, b) != 0){\n\t^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpasehajv1.js:3:2)\n    at test (/tmp/tmpasehajv1.js:19:20)\n    at Object.<anonymous> (/tmp/tmpasehajv1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = n / b;\n  while(x * a + y * b != n){\n    if(x * a + y * b < n){\n      x++;\n    }\n    else{\n      y--;\n    }\n  }\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp5fzqqdok.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp5fzqqdok.js:3:3)\n    at test (/tmp/tmp5fzqqdok.js:24:20)\n    at Object.<anonymous> (/tmp/tmp5fzqqdok.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % a === 0){\n    return [n/a, 0];\n  }\n  if(n % b === 0){\n    return [0, n/b];\n  }\n  for(var x = 1; x < n; x++){\n    for(var y = 1; y < n; y++){\n      if(a*x + b*y === n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpkc095il2.js:26:10)\n    at Object.<anonymous> (/tmp/tmpkc095il2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a*x + b*y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) == 0){\n    return [a, b, n];\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp6jqd6qy2.js:3\n  if(n % gcd(a, b) == 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp6jqd6qy2.js:3:3)\n    at test (/tmp/tmp6jqd6qy2.js:14:20)\n    at Object.<anonymous> (/tmp/tmp6jqd6qy2.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0) return undefined;\n  let x = 0, y = 0;\n  let d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpgf9if4qc.js:3\n  if(n % gcd(a, b) !== 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpgf9if4qc.js:3:3)\n    at test (/tmp/tmpgf9if4qc.js:14:20)\n    at Object.<anonymous> (/tmp/tmpgf9if4qc.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % a === 0){\n        return [n / a, 0]\n    }\n    if(n % b === 0){\n        return [0, n / b]\n    }\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y]\n            }\n        }\n    }\n    return undefined\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpoxh4uzq7.js:26:10)\n    at Object.<anonymous> (/tmp/tmpoxh4uzq7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  var x = 0, y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpgwpprtl6.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpgwpprtl6.js:3:3)\n    at test (/tmp/tmpgwpprtl6.js:14:20)\n    at Object.<anonymous> (/tmp/tmpgwpprtl6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for (var x = 0; x < n; x++){\n        for (var y = 0; y < n; y++){\n            if (a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    let x = 0;\n    let y = 0;\n    let d = gcd(a, b);\n    x = (n / d) * (b / d);\n    y = (n / d) * (a / d);\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmphnelnkci.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmphnelnkci.js:3:5)\n    at test (/tmp/tmphnelnkci.js:19:20)\n    at Object.<anonymous> (/tmp/tmphnelnkci.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0) return undefined;\n    let x = 0;\n    let y = n / b;\n    let d = gcd(a, b);\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpvhgecag9.js:3\n    if(n % gcd(a, b) != 0) return undefined;\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpvhgecag9.js:3:5)\n    at test (/tmp/tmpvhgecag9.js:15:20)\n    at Object.<anonymous> (/tmp/tmpvhgecag9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [n/d * x1, n/d * y1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpjoqhpksr.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpjoqhpksr.js:3:3)\n    at test (/tmp/tmpjoqhpksr.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjoqhpksr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a*x + b*y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tif(a == 0 && b == 0){\n\t\treturn undefined;\n\t}\n\tif(a == 0){\n\t\treturn [0, n/b];\n\t}\n\tif(b == 0){\n\t\treturn [n/a, 0];\n\t}\n\tvar x = 0;\n\tvar y = 0;\n\twhile(a*x + b*y != n){\n\t\tif(a*x + b*y > n){\n\t\t\ty--;\n\t\t}\n\t\telse{\n\t\t\tx++;\n\t\t}\n\t}\n\treturn [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpwkizny0k.js:30:10)\n    at Object.<anonymous> (/tmp/tmpwkizny0k.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, -1 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  else if(a == 0){\n    return [0, n / b];\n  }\n  else if(b == 0){\n    return [n / a, 0];\n  }\n  else{\n    var x = find_solution(b, a % b, n);\n    return [x[1], x[0] - Math.floor(a / b) * x[1]];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -7,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmphy9zk8v3.js:23:10)\n    at Object.<anonymous> (/tmp/tmphy9zk8v3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -7, 7 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tvar x = 0;\n\tvar y = 0;\n\twhile(a * x <= n){\n\t\ty = (n - a * x) / b;\n\t\tif(Number.isInteger(y)){\n\t\t\treturn [x, y];\n\t\t}\n\t\tx++;\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a < b){\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n  var x = 0;\n  var y = 0;\n  while(a * x + b * y != n){\n    if(a * x + b * y > n){\n      y--;\n    }else{\n      x++;\n    }\n    if(a * x + b * y == n){\n      return [x, y];\n    }\n  }\n  return undefined;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpj77rptux.js:27:10)\n    at Object.<anonymous> (/tmp/tmpj77rptux.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, -1 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % a === 0){\n    return [n/a, 0];\n  }\n  if(n % b === 0){\n    return [0, n/b];\n  }\n  for(var x = 1; x < n; x++){\n    for(var y = 1; y < n; y++){\n      if(a*x + b*y === n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  17,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  1\n]\n    at test (/tmp/tmpkc095il2.js:26:10)\n    at Object.<anonymous> (/tmp/tmpkc095il2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 17, 0 ],\n  expected: [ 4, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  var x = 0;\n  var y = n / b;\n  var r = a % b;\n  while(r > 0){\n    var q = Math.floor(a / b);\n    var t = x - q * y;\n    x = y;\n    y = t;\n    a = b;\n    b = r;\n    r = a % b;\n  }\n  return [y, n / b];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpz_2q45if.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpz_2q45if.js:3:3)\n    at test (/tmp/tmpz_2q45if.js:24:20)\n    at Object.<anonymous> (/tmp/tmpz_2q45if.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) !== 0) return undefined;\n    var x = 0, y = 0;\n    var d = gcd(a, b);\n    return [n/d * bezout(a, b)[0], n/d * bezout(a, b)[1]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "/tmp/tmp_ogeurl5.js:3\n    if(n % gcd(a, b) !== 0) return undefined;\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp_ogeurl5.js:3:5)\n    at test (/tmp/tmp_ogeurl5.js:14:20)\n    at Object.<anonymous> (/tmp/tmp_ogeurl5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = 0;\n  var y = 0;\n  while(x * a <= n){\n    y = (n - x * a) / b;\n    if(y % 1 == 0){\n      return [x, y];\n    }\n    x++;\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = n / b;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp8vy5ffyb.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp8vy5ffyb.js:3:3)\n    at test (/tmp/tmp8vy5ffyb.js:17:20)\n    at Object.<anonymous> (/tmp/tmp8vy5ffyb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    var x = 0;\n    var y = n / b;\n    var r = a % b;\n    while(r > 0){\n        var q = Math.floor(a / b);\n        var t = x - q * y;\n        x = y;\n        y = t;\n        a = b;\n        b = r;\n        r = a % b;\n    }\n    return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "/tmp/tmpvukaxu71.js:3\n    if(n % gcd(a, b) != 0){\n    ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpvukaxu71.js:3:5)\n    at test (/tmp/tmpvukaxu71.js:26:20)\n    at Object.<anonymous> (/tmp/tmpvukaxu71.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  x = (n / d) * (b / d);\n  y = (n / d) * (a / d);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpkq5xa3vn.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpkq5xa3vn.js:3:3)\n    at test (/tmp/tmpkq5xa3vn.js:19:20)\n    at Object.<anonymous> (/tmp/tmpkq5xa3vn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  for(var x = 0; x <= n; x++){\n    for(var y = 0; y <= n; y++){\n      if(a * x + b * y == n){\n        return [x, y];\n      }\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0) return undefined;\n  var x = 0, y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpgwpprtl6.js:3\n  if(n % gcd(a, b) != 0) return undefined;\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpgwpprtl6.js:3:3)\n    at test (/tmp/tmpgwpprtl6.js:14:20)\n    at Object.<anonymous> (/tmp/tmpgwpprtl6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y === n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = n / b;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmp8vy5ffyb.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp8vy5ffyb.js:3:3)\n    at test (/tmp/tmp8vy5ffyb.js:17:20)\n    at Object.<anonymous> (/tmp/tmp8vy5ffyb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpjnnqr7wg.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpjnnqr7wg.js:3:3)\n    at test (/tmp/tmpjnnqr7wg.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjnnqr7wg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) !== 0){\n    return undefined;\n  }\n  var x = 0;\n  var y = 0;\n  var d = gcd(a, b);\n  return [n / d * x, n / d * y];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "/tmp/tmpahq0f2hk.js:3\n  if(n % gcd(a, b) !== 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmpahq0f2hk.js:3:3)\n    at test (/tmp/tmpahq0f2hk.js:17:20)\n    at Object.<anonymous> (/tmp/tmpahq0f2hk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  for(let x = 0; x < n; x++){\n    for(let y = 0; y < n; y++){\n      if(a * x + b * y === n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(a > b){\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n  var x = 0;\n  var y = n;\n  while(x <= n){\n    if(a*x + b*y === n){\n      return [x, y];\n    }\n    x++;\n    y--;\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpduw_5lx4.js:25:10)\n    at Object.<anonymous> (/tmp/tmpduw_5lx4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tfor(let x = 0; x <= n; x++){\n\t\tfor(let y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y === n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    if(a === 0){\n        return undefined;\n    }\n    else if(a === b){\n        if(n % a === 0){\n            return [n/a, 0];\n        }\n        else{\n            return undefined;\n        }\n    }\n    else{\n        let x = Math.floor(n/a);\n        let y = (n - (a*x))/b;\n        if(Number.isInteger(y)){\n            return [x, y];\n        }\n        else{\n            return undefined;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpl6c_khvz.js:31:10)\n    at Object.<anonymous> (/tmp/tmpl6c_khvz.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n\tif(a === 0 && b === 0){\n\t\treturn undefined;\n\t}\n\tif(a === 0){\n\t\treturn [0, n/b];\n\t}\n\tif(b === 0){\n\t\treturn [n/a, 0];\n\t}\n\tvar x = 1;\n\tvar y = 1;\n\twhile(true){\n\t\tif(a*x + b*y === n){\n\t\t\treturn [x, y];\n\t\t}\n\t\tx++;\n\t\ty++;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123239,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x <= n; x++){\n        for(let y = 0; y <= n; y++){\n            if(a * x + b * y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  if(n % gcd(a, b) != 0){\n    return undefined;\n  }\n  else{\n    var x = 0;\n    var y = 0;\n    var d = gcd(a, b);\n    x = (n / d) * (a / d);\n    y = (n / d) * (b / d);\n    return [x, y];\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "/tmp/tmp_vpcrmqr.js:3\n  if(n % gcd(a, b) != 0){\n  ^\n\nReferenceError: gcd is not defined\n    at find_solution (/tmp/tmp_vpcrmqr.js:3:3)\n    at test (/tmp/tmp_vpcrmqr.js:21:20)\n    at Object.<anonymous> (/tmp/tmp_vpcrmqr.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n  for(var x = 0; x <= n; x++){\n    for(var y = 0; y <= n; y++){\n      if(a * x + b * y == n){\n        return [x, y];\n      }\n    }\n  }\n  return undefined;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
      "timestamp": 1666123234,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
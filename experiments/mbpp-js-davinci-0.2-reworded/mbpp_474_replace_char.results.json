{
  "name": "mbpp_474_replace_char",
  "language": "js",
  "prompt": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = str1.replace(ch, newch);\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpetog6c69.js:13:10)\n    at Object.<anonymous> (/tmp/tmpetog6c69.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 = str2 + newch;\n        }\n        else{\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;\n}\nvar str1 = \"Hello World\";\nvar ch = \"l\";\nvar newch = \"p\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] === ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = '';\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = str1.replace(ch, newch);\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpqabtefzj.js:12:10)\n    at Object.<anonymous> (/tmp/tmpqabtefzj.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i=0; i<str.length; i++){\n        if(str[i] === ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nvar str1 = \"This is a test\";\nvar str2 = replace_char(str1, \"t\", \"T\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = '';\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nvar str = \"Hello World\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    var newstr = '';\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            newstr += newch;\n        }else{\n            newstr += str[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 = str2 + newch;\n        }\n        else{\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = '';\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nvar str1 = \"Hello World\";\nvar str2 = replace_char(str1, \"o\", \"i\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var result = '';\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            result += newch;\n        }\n        else{\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpjlicrjts.js:12:10)\n    at Object.<anonymous> (/tmp/tmpjlicrjts.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    console.log(str);\n}\nreplace_char(\"Hello World\", \"o\", \"a\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "Hella World\npollgon\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n'pollgon'\n    at test (/tmp/tmprlqiurby.js:13:10)\n    at Object.<anonymous> (/tmp/tmprlqiurby.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 'pollgon',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 = str2 + newch;\n        }\n        else{\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = '';\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] === ch){\n            str += newch;\n        }else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nvar str1 = \"This is a test\";\nvar str2 = replace_char(str1, \"t\", \"T\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for (var i = 0; i < str.length; i++){\n        if (str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.toLowerCase();\n    var str2 = \"\";\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str2 = str2 + newch;\n        }\n        else{\n            str2 = str2 + str[i];\n        }\n    }\n    return str2;\n}\nvar str1 = \"Hello World\";\nvar ch = \"o\";\nvar newch = \"x\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str1 = str1.split('');\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str1[i] = newch;\n        }\n    }\n    return str1.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var i;\n    var newstr = \"\";\n    for(i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nvar str1 = \"This is a test\";\nvar ch = \"t\";\nvar newch = \"T\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for (var i = 0; i < str1.length; i++){\n        if (str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = '';\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] === ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split('');\n    for(var i=0; i<str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpwqzod8k7.js:12:10)\n    at Object.<anonymous> (/tmp/tmpwqzod8k7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }\n        else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str += newch;\n        }else{\n            str += str1[i];\n        }\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.split(\"\");\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == ch){\n            str[i] = newch;\n        }\n    }\n    return str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i=0; i<str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nvar str1 = \"Hello World\";\nvar ch = \"o\";\nvar newch = \"*\";\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = str1.replace(ch, newch);\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmprr1iy0qe.js:13:10)\n    at Object.<anonymous> (/tmp/tmprr1iy0qe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var newstr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            newstr += newch;\n        }\n        else{\n            newstr += str1[i];\n        }\n    }\n    return newstr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1666122396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] === ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str2 = \"\";\n    for(var i = 0; i < str1.length; i++){\n        if(str1[i] == ch){\n            str2 += newch;\n        }\n        else{\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to replace characters in a string.\nfunction replace_char(str1, ch, newch){\n    var str = str1.replace(ch, newch);\n    return str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_char;\n  assert.deepEqual(candidate(\"polygon\", \"y\", \"l\"),\"pollgon\");\n  assert.deepEqual(candidate(\"character\", \"c\", \"a\"),\"aharaater\");\n  assert.deepEqual(candidate(\"python\", \"l\", \"a\"),\"python\");\n}\n\ntest();",
      "timestamp": 1665510042,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aharacter'\n\nshould loosely deep-equal\n\n'aharaater'\n    at test (/tmp/tmpy4w6mu4s.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy4w6mu4s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aharacter',\n  expected: 'aharaater',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
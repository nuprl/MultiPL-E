{
  "name": "mbpp_573_unique_product",
  "language": "js",
  "prompt": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i])\n        }\n    }\n    return unique_array\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  20,\n  30,\n  40,\n  50,\n  60\n]\n\nshould loosely deep-equal\n\n720000000\n    at test (/tmp/tmp8intgehp.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8intgehp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 20, 30, 40, 50, 60 ],\n  expected: 720000000,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i=0; i<list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j=0; j<unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    return unique_list.reduce(function(a, b){\n        return a * b;\n    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++){\n        if (unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i])\n        }\n    }\n    return unique_array\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  20,\n  30,\n  40,\n  50,\n  60\n]\n\nshould loosely deep-equal\n\n720000000\n    at test (/tmp/tmp8intgehp.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8intgehp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 20, 30, 40, 50, 60 ],\n  expected: 720000000,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var i = 0; i < unique_list.length; i++) {\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    $.each(list_data, function(i, el){\n        if($.inArray(el, unique_list) === -1) unique_list.push(el);\n    });\n    var product = 1;\n    for(var i=0; i<unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "/tmp/tmph2papm88.js:4\n    $.each(list_data, function(i, el){\n    ^\n\nReferenceError: $ is not defined\n    at unique_product (/tmp/tmph2papm88.js:4:5)\n    at test (/tmp/tmph2papm88.js:18:20)\n    at Object.<anonymous> (/tmp/tmph2papm88.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var result = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        result *= unique_list[j];\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var i = 0; i < unique_list.length; i++) {\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i=0; i<list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j=0; j<unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_data = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_data.indexOf(list_data[i]) == -1) {\n            unique_data.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_data.length; j++) {\n        product *= unique_data[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i=0; i<list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j=0; j<unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n            product *= list_data[i];\n        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array.reduce(function(a, b){\n        return a * b;\n    }, 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    $.each(list_data, function(i, el){\n        if($.inArray(el, unique_list) === -1) unique_list.push(el);\n    });\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "/tmp/tmpp0jfoyqa.js:4\n    $.each(list_data, function(i, el){\n    ^\n\nReferenceError: $ is not defined\n    at unique_product (/tmp/tmpp0jfoyqa.js:4:5)\n    at test (/tmp/tmpp0jfoyqa.js:18:20)\n    at Object.<anonymous> (/tmp/tmpp0jfoyqa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++){\n        if (unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array.reduce(function(a, b){\n        return a * b;\n    }, 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var unique_product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        unique_product *= unique_list[i];\n    }\n    return unique_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var i = 0; i < unique_list.length; i++) {\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    $.each(list_data, function(i, el){\n        if($.inArray(el, unique_list) === -1) unique_list.push(el);\n    });\n    var product = 1;\n    for(var i=0; i<unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "/tmp/tmp1hhcugkp.js:4\n    $.each(list_data, function(i, el){\n    ^\n\nReferenceError: $ is not defined\n    at unique_product (/tmp/tmp1hhcugkp.js:4:5)\n    at test (/tmp/tmp1hhcugkp.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1hhcugkp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array.reduce(function(a, b){\n        return a * b;\n    }, 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_data = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_data.indexOf(list_data[i]) == -1){\n            unique_data.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_data.length; i++){\n        product = product * unique_data[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  20,\n  30,\n  40,\n  50,\n  60\n]\n\nshould loosely deep-equal\n\n720000000\n    at test (/tmp/tmpxyzmos0m.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxyzmos0m.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 20, 30, 40, 50, 60 ],\n  expected: 720000000,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    $.each(list_data, function(i, el){\n        if($.inArray(el, unique_list) === -1) unique_list.push(el);\n    });\n    var product = 1;\n    for(var i=0; i<unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "/tmp/tmp1hhcugkp.js:4\n    $.each(list_data, function(i, el){\n    ^\n\nReferenceError: $ is not defined\n    at unique_product (/tmp/tmp1hhcugkp.js:4:5)\n    at test (/tmp/tmp1hhcugkp.js:18:20)\n    at Object.<anonymous> (/tmp/tmp1hhcugkp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array.reduce(function(a, b){\n        return a * b;\n    }, 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    $.each(list_data, function(i, el){\n        if($.inArray(el, unique_list) === -1) unique_list.push(el);\n    });\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "/tmp/tmpc2xppi38.js:4\n    $.each(list_data, function(i, el){\n    ^\n\nReferenceError: $ is not defined\n    at unique_product (/tmp/tmpc2xppi38.js:4:5)\n    at test (/tmp/tmpc2xppi38.js:18:20)\n    at Object.<anonymous> (/tmp/tmpc2xppi38.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    $.each(list_data, function(i, el){\n        if($.inArray(el, unique_list) === -1) unique_list.push(el);\n    });\n    var product = 1;\n    $.each(unique_list, function(i, el){\n        product = product * el;\n    });\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "/tmp/tmplweqmv9t.js:4\n    $.each(list_data, function(i, el){\n    ^\n\nReferenceError: $ is not defined\n    at unique_product (/tmp/tmplweqmv9t.js:4:5)\n    at test (/tmp/tmplweqmv9t.js:18:20)\n    at Object.<anonymous> (/tmp/tmplweqmv9t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var i = 0; i < unique_list.length; i++) {\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array.reduce(function(a, b){\n        return a * b;\n    }, 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n            product = product * list_data[i];\n        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0;i < unique_list.length; i++){\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array.reduce(function(a, b){\n        return a * b;\n    }, 1)\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var j = 0; j < unique_list.length; j++) {\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for (var i = 0; i < unique_list.length; i++) {\n        product = product * unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_array = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_array.indexOf(list_data[i]) == -1){\n            unique_array.push(list_data[i]);\n        }\n    }\n    return unique_array\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  20,\n  30,\n  40,\n  50,\n  60\n]\n\nshould loosely deep-equal\n\n720000000\n    at test (/tmp/tmp50ntwzg3.js:16:10)\n    at Object.<anonymous> (/tmp/tmp50ntwzg3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 20, 30, 40, 50, 60 ],\n  expected: 720000000,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_data = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_data.indexOf(list_data[i]) == -1){\n            unique_data.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_data.length; i++){\n        product *= unique_data[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0;j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for (var i = 0; i < list_data.length; i++) {\n        if (unique_list.indexOf(list_data[i]) == -1) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for (var j = 0; j < unique_list.length; j++) {\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n\tvar unique_list = [];\n\tvar product = 1;\n\tfor(var i = 0; i < list_data.length; i++){\n\t\tif(unique_list.indexOf(list_data[i]) == -1){\n\t\t\tunique_list.push(list_data[i]);\n\t\t}\n\t}\n\tfor(var i = 0; i < unique_list.length; i++){\n\t\tproduct *= unique_list[i];\n\t}\n\treturn product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0;i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    var product = 1;\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product = product * unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var i = 0; i < unique_list.length; i++){\n        product *= unique_list[i];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to calculate the product of the unique numbers in a given array.\nfunction unique_product(list_data){\n    var unique_list = [];\n    for(var i = 0; i < list_data.length; i++){\n        if(unique_list.indexOf(list_data[i]) == -1){\n            unique_list.push(list_data[i]);\n        }\n    }\n    var product = 1;\n    for(var j = 0; j < unique_list.length; j++){\n        product *= unique_list[j];\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_product;\n  assert.deepEqual(candidate([10, 20, 30, 40, 20, 50, 60, 40]),720000000);\n  assert.deepEqual(candidate([1, 2, 3, 1]),6);\n  assert.deepEqual(candidate([7, 8, 9, 0, 1, 1]),0);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
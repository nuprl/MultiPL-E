{
  "name": "mbpp_743_rotate_right",
  "language": "js",
  "prompt": "//Write a function to rotate a given array by specified number of items to the right direction. https://www.geeksforgeeks.org/jsthon-program-right-rotate-array-n/\nfunction rotate_right(list, m){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_743_rotate_right.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rotate_right;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3),[8, 9, 10, 1, 2, 3, 4, 5, 6, 7]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2),[9, 10, 1, 2, 3, 4, 5, 6, 7, 8]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5),[6, 7, 8, 9, 10, 1, 2, 3, 4, 5]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var temp = [];\n    for(var i = 0; i < m; i++){\n        temp.push(list[list.length - m + i]);\n    }\n    for(var i = list.length - m - 1; i >= 0; i--){\n        list[i + m] = list[i];\n    }\n    for(var i = 0; i < m; i++){\n        list[i] = temp[i];\n    }\n    return list;\n}\n",
    "    var temp = list.slice(list.length-m, list.length);\n    var temp2 = list.slice(0, list.length-m);\n    return temp.concat(temp2);\n}\n",
    "    var temp = list.slice(list.length - m);\n    list.splice(list.length - m, m);\n    return temp.concat(list);\n}",
    "    var n = list.length;\n    var r = m % n;\n    var g = gcd(n,r);\n    for (var i = 0; i < g; i++){\n        var temp = list[i];\n        var j = i;\n        while (true){\n            var k = j + r;\n            if (k >= n)\n                k = k - n;\n            if (k == i)\n                break;\n            list[j] = list[k];\n            j = k;\n        }\n        list[j] = temp;\n    }\n    return list;\n}\n",
    "    var n = list.length;\n    var temp = [];\n    for(var i = 0; i < m; i++){\n        temp.push(list[n-m+i]);\n    }\n    for(var i = n-1; i >= m; i--){\n        list[i] = list[i-m];\n    }\n    for(var i = 0; i < m; i++){\n        list[i] = temp[i];\n    }\n    return list;\n}\n",
    "\tvar new_list = [];\n\tfor(var i = 0; i < list.length; i++){\n\t\tnew_list[(i + m) % list.length] = list[i];\n\t}\n\treturn new_list;\n}\n",
    "    let temp = list[list.length-1];\n    for(let i = list.length-1; i > 0; i--){\n        list[i] = list[i-1];\n    }\n    list[0] = temp;\n    m--;\n    if(m > 0){\n        rotate_right(list, m);\n    }\n    return list;\n}\n",
    "    var temp = list[list.length-1];\n    for(var i = list.length-1; i > 0; i--){\n        list[i] = list[i-1];\n    }\n    list[0] = temp;\n    if(m > 1){\n        return rotate_right(list, m-1);\n    }\n    return list;\n}\n",
    "    var temp = list.slice(list.length - m, list.length);\n    var temp2 = list.slice(0, list.length - m);\n    return temp.concat(temp2);\n}\n",
    "    var temp = list[list.length-1];\n    for(var i = list.length-1; i > 0; i--){\n        list[i] = list[i-1];\n    }\n    list[0] = temp;\n    m--;\n    if(m > 0){\n        rotate_right(list, m);\n    }\n    return list;\n}\n",
    "    var temp = list.slice(list.length-m, list.length);\n    var temp2 = list.slice(0, list.length-m);\n    return temp.concat(temp2);\n}\n",
    "    var temp = list.slice(list.length - m, list.length);\n    var temp2 = list.slice(0, list.length - m);\n    return temp.concat(temp2);\n}\n",
    "    var temp = [];\n    for(var i = 0; i < m; i++){\n        temp.push(list[list.length - 1]);\n        list.pop();\n    }\n    for(var i = 0; i < temp.length; i++){\n        list.unshift(temp[i]);\n    }\n    return list;\n}\n",
    "    var temp = list.slice(list.length-m, list.length);\n    var temp2 = list.slice(0, list.length-m);\n    return temp.concat(temp2);\n}\n",
    "    var temp = list.slice(0, m);\n    var temp2 = list.slice(m, list.length);\n    var result = temp2.concat(temp);\n    return result;\n}\n",
    "    var temp = list.slice(list.length-m, list.length);\n    var temp2 = list.slice(0, list.length-m);\n    return temp.concat(temp2);\n}\n",
    "    var temp = list.slice(list.length - m, list.length);\n    var temp2 = list.slice(0, list.length - m);\n    return temp.concat(temp2);\n}\n",
    "    var n = list.length;\n    var r = m % n;\n    var temp = [];\n    for(var i = 0; i < r; i++){\n        temp.push(list[i]);\n    }\n    for(var i = r; i < n; i++){\n        list[i-r] = list[i];\n    }\n    for(var i = 0; i < r; i++){\n        list[n-r+i] = temp[i];\n    }\n    return list;\n}\n",
    "    for (var i = 0; i < m; i++){\n        list.unshift(list.pop());\n    }\n    return list;\n}\n",
    "    var n = list.length;\n    var temp = list.slice(n-m, n);\n    for(var i = n-1; i>=m; i--){\n        list[i] = list[i-m];\n    }\n    for(var i = 0; i<m; i++){\n        list[i] = temp[i];\n    }\n    return list;\n}\n"
  ]
}
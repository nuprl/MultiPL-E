{
  "name": "mbpp_245_max_sum",
  "language": "js",
  "prompt": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmp59i93oob.js:33\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n\tvar max_sum = 0;\n\tvar max_sum_arr = [];\n\tvar sum = 0;\n\tvar sum_arr = [];\n\tvar max_sum_arr_rev = [];\n\tvar sum_arr_rev = [];\n\tvar max_sum_rev = 0;\n\tfor(var i = 0; i < arr.length; i++){\n\t\tsum = 0;\n\t\tsum_arr = [];\n\t\tfor(var j = i; j < arr.length; j++){\n\t\t\tif(arr[j] > arr[j+1]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsum += arr[j];\n\t\t\tsum_arr.push(arr[j]);\n\t\t}\n\t\tif(sum > max_sum){\n\t\t\tmax_sum = sum;\n\t\t\tmax_sum_arr = sum_arr;\n\t\t}\n\t}\n\tfor(var i = arr.length-1; i >= 0; i--){\n\t\tsum_rev = 0;\n\t\tsum_arr_rev = [];\n\t\tfor(var j = i; j >= 0; j--){\n\t\t\tif(arr[j] > arr[j-1]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsum_rev += arr[j];\n\t\t\tsum_arr_rev.push(arr[j]);\n\t\t}\n\t\tif(sum_rev > max_sum_rev){\n\t\t\tmax_sum_rev = sum_rev;\n\t\t\tmax_sum_arr_rev = sum_arr_rev;\n\t\t}\n\t}\n\tconsole.log(max_sum_arr);\n\tconsole.log(max_sum_arr_rev);\n\treturn max_sum + max_sum_rev;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "[ 33 ]\n[ 33, 45 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n111\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdan0kz0h.js:50:10)\n    at Object.<anonymous> (/tmp/tmpdan0kz0h.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 111,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_ending_here = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here += arr[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum < max_sum_ending_here){\n            max_sum = max_sum_ending_here;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjawu0bbh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjawu0bbh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpf2e3jd6q.js:19:10)\n    at Object.<anonymous> (/tmp/tmpf2e3jd6q.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let max_sum_arr = [];\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        let sum_arr = [];\n        for(let j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            }\n            else{\n                break;\n            }\n        }\n        for(let k = i-1; k >= 0; k--){\n            if(arr[k] > arr[k-1]){\n                sum += arr[k];\n                sum_arr.unshift(arr[k]);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  51,\n  45\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_pnjx98e.js:39:10)\n    at Object.<anonymous> (/tmp/tmp_pnjx98e.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 51, 45 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_so_far = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_so_far += arr[i];\n        if(max_sum_so_far < 0){\n            max_sum_so_far = 0;\n        }\n        if(max_sum < max_sum_so_far){\n            max_sum = max_sum_so_far;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpy45etpnr.js:22:10)\n    at Object.<anonymous> (/tmp/tmpy45etpnr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyi01nrho.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyi01nrho.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max_sum){\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpswao24za.js:21:10)\n    at Object.<anonymous> (/tmp/tmpswao24za.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = arr[i];\n        let max = arr[i];\n        for(let j = i + 1; j < arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n                sum += arr[j];\n            }\n        }\n        for(let k = i - 1; k >= 0; k--){\n            if(arr[k] > max){\n                max = arr[k];\n                sum += arr[k];\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n167\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpwr5stpy4.js:31:10)\n    at Object.<anonymous> (/tmp/tmpwr5stpy4.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 167,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    var j = i;\n    while(arr[j] < arr[j+1]){\n      sum += arr[j];\n      j++;\n    }\n    while(arr[j] > arr[j+1]){\n      sum += arr[j];\n      j++;\n    }\n    if(sum > max){\n      max = sum;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp1_lqgyxu.js:27:10)\n    at Object.<anonymous> (/tmp/tmp1_lqgyxu.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmprw7bvjr9.js:23:10)\n    at Object.<anonymous> (/tmp/tmprw7bvjr9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = [];\n    var max_sum_arr_index_rev = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_index = [];\n    var max_sum_arr_rev_index_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_index = [];\n    var max_sum_arr_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmplo4qoeh8.js:40\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    var j = i;\n    while(arr[j] < arr[j+1] && j < arr.length){\n      sum += arr[j];\n      j++;\n    }\n    while(arr[j] > arr[j+1] && j < arr.length){\n      sum += arr[j];\n      j++;\n    }\n    if(sum > max){\n      max = sum;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpu8w1qms4.js:27:10)\n    at Object.<anonymous> (/tmp/tmpu8w1qms4.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjrlwklxb.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjrlwklxb.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var sum = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmppgqzwhy_.js:22:10)\n    at Object.<anonymous> (/tmp/tmppgqzwhy_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpy1kb2sjh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpy1kb2sjh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        sum = 0;\n        sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            }\n            else{\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n                break;\n            }\n        }\n        for(var k = j+1; k < arr.length; k++){\n            if(arr[k] < arr[k+1]){\n                sum += arr[k];\n                sum_arr.push(arr[k]);\n            }\n            else{\n                sum += arr[k];\n                sum_arr.push(arr[k]);\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    console.log(max_sum_arr);\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "[ 51, 45, 33, 100 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n229\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpsk4nbw2x.js:46:10)\n    at Object.<anonymous> (/tmp/tmpsk4nbw2x.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 229,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = [];\n    var max_sum_arr_index_rev = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_index = [];\n    var max_sum_arr_rev_index_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_index = [];\n    var max_sum_arr_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_index = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_index_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmplo4qoeh8.js:40\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n\tvar max = 0;\n\tfor(var i=0; i<arr.length; i++){\n\t\tvar sum = 0;\n\t\tfor(var j=i; j<arr.length; j++){\n\t\t\tsum += arr[j];\n\t\t\tif(sum > max){\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp3xi98tqi.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3xi98tqi.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0;\n    var vvv =\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmppghrp4l6.js:71\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var i;\n    for(i=0;i<arr.length;i++){\n        sum = sum + arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(max_sum < sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpu4wdwvp4.js:23:10)\n    at Object.<anonymous> (/tmp/tmpu4wdwvp4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2v0fban2.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2v0fban2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += arr[i];\n    if(sum < 0){\n      sum = 0;\n    }\n    if(sum > max_sum){\n      max_sum = sum;\n    }\n  }\n  return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpx9dyfytu.js:22:10)\n    at Object.<anonymous> (/tmp/tmpx9dyfytu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpy1kb2sjh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpy1kb2sjh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if(sum > max_sum){\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    console.log(max_sum_arr);\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "[\n    1, 15, 51, 45, 33,\n  100, 12, 18,  9\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpaz_2v9p6.js:26:10)\n    at Object.<anonymous> (/tmp/tmpaz_2v9p6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += arr[i];\n    if(sum > max){\n      max = sum;\n    }\n    if(sum < 0){\n      sum = 0;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_qqulf4d.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_qqulf4d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp1mjmaa3y.js:21:10)\n    at Object.<anonymous> (/tmp/tmp1mjmaa3y.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmp59i93oob.js:33\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_ending_here = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], arr[i]);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp4lxmlrnx.js:17:10)\n    at Object.<anonymous> (/tmp/tmp4lxmlrnx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var inc = new Array(arr.length);\n  var dec = new Array(arr.length);\n  inc[0] = arr[0];\n  dec[arr.length-1] = arr[arr.length-1];\n  for(var i = 1; i < arr.length; i++){\n    inc[i] = Math.max(inc[i-1]+arr[i], arr[i]);\n  }\n  for(var i = arr.length-2; i >= 0; i--){\n    dec[i] = Math.max(dec[i+1]+arr[i], arr[i]);\n  }\n  var max = inc[0] + dec[0] - arr[0];\n  for(var i = 1; i < arr.length; i++){\n    max = Math.max(max, inc[i] + dec[i] - arr[i]);\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp1l81nh7g.js:25:10)\n    at Object.<anonymous> (/tmp/tmp1l81nh7g.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = [];\n    var max_sum_arr_index_reverse = [];\n    var max_sum_arr_reverse = [];\n    var max_sum_arr_reverse_index = [];\n    var max_sum_arr_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_index = [];\n    var max_sum_arr_reverse_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_index = [];\n    var max_sum_arr_reverse_reverse_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_index = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_index = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_index = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_index = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [];\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpb26apf6_.js:40\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let inc = new Array(arr.length).fill(0);\n    let dec = new Array(arr.length).fill(0);\n    inc[0] = arr[0];\n    dec[arr.length-1] = arr[arr.length-1];\n    for(let i=1;i<arr.length;i++){\n        inc[i] = Math.max(inc[i-1]+arr[i],arr[i]);\n    }\n    for(let i=arr.length-2;i>=0;i--){\n        dec[i] = Math.max(dec[i+1]+arr[i],arr[i]);\n    }\n    let max = inc[0]+dec[0]-arr[0];\n    for(let i=1;i<arr.length;i++){\n        if(max < inc[i]+dec[i]-arr[i]){\n            max = inc[i]+dec[i]-arr[i];\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp8a0ehm6g.js:27:10)\n    at Object.<anonymous> (/tmp/tmp8a0ehm6g.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var j = i;\n        while(arr[j] < arr[j+1] && j < arr.length){\n            sum += arr[j];\n            j++;\n        }\n        while(arr[j] > arr[j+1] && j < arr.length){\n            sum += arr[j];\n            j++;\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpc0vh72nz.js:27:10)\n    at Object.<anonymous> (/tmp/tmpc0vh72nz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmp59i93oob.js:33\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyi01nrho.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyi01nrho.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  var max_sum_arr = [];\n  var max_sum_arr_index = [];\n  var max_sum_arr_index_start = 0;\n  var max_sum_arr_index_end = 0;\n  var max_sum_arr_index_start_temp = 0;\n  var max_sum_arr_index_end_temp = 0;\n  var max_sum_arr_index_start_temp_2 = 0;\n  var max_sum_arr_index_end_temp_2 = 0;\n  var max_sum_arr_index_start_temp_3 = 0;\n  var max_sum_arr_index_end_temp_3 = 0;\n  var max_sum_arr_index_start_temp_4 = 0;\n  var max_sum_arr_index_end_temp_4 = 0;\n  var max_sum_arr_index_start_temp_5 = 0;\n  var max_sum_arr_index_end_temp_5 = 0;\n  var max_sum_arr_index_start_temp_6 = 0;\n  var max_sum_arr_index_end_temp_6 = 0;\n  var max_sum_arr_index_start_temp_7 = 0;\n  var max_sum_arr_index_end_temp_7 = 0;\n  var max_sum_arr_index_start_temp_8 = 0;\n  var max_sum_arr_index_end_temp_8 = 0;\n  var max_sum_arr_index_start_temp_9 = 0;\n  var max_sum_arr_index_end_temp_9 = 0;\n  var max_sum_arr_index_start_temp_10 = 0;\n  var max_sum_arr_index_end_temp_10 = 0;\n  var max_sum_arr_index_start_temp_11 = 0;\n  var max_sum_arr_index_end_temp_11 = 0;\n  var max_sum_arr_index_start_temp_12 = 0;\n  var max_sum_arr_index_end_temp_12 = 0\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpuw6f07o2.js:42\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            }\n            else{\n                break;\n            }\n        }\n        for(var k = i-1; k >= 0; k--){\n            if(arr[k] > arr[k-1]){\n                sum += arr[k];\n                sum_arr.push(arr[k]);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  51,\n  45,\n  15\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpk8py0ow0.js:39:10)\n    at Object.<anonymous> (/tmp/tmpk8py0ow0.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 51, 45, 15 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var inc = new Array(arr.length);\n    var dec = new Array(arr.length);\n    inc[0] = arr[0];\n    dec[arr.length-1] = arr[arr.length-1];\n    for(var i = 1; i < arr.length; i++){\n        inc[i] = Math.max(inc[i-1], arr[i]);\n    }\n    for(var i = arr.length-2; i >= 0; i--){\n        dec[i] = Math.max(dec[i+1], arr[i]);\n    }\n    for(var i = 0; i < arr.length; i++){\n        max_sum = Math.max(max_sum, inc[i]+dec[i]-arr[i]);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2at5mvyf.js:25:10)\n    at Object.<anonymous> (/tmp/tmp2at5mvyf.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var sum = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpvhsc0xy1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpvhsc0xy1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_ncut1fb.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_ncut1fb.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_sum_ending_here = 0;\n    var max_sum_ending_here_reverse = 0;\n    var max_sum_so_far_reverse = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here += arr[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum_so_far < max_sum_ending_here){\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    for(var i = arr.length-1; i >= 0; i--){\n        max_sum_ending_here_reverse += arr[i];\n        if(max_sum_ending_here_reverse < 0){\n            max_sum_ending_here_reverse = 0;\n        }\n        if(max_sum_so_far_reverse < max_sum_ending_here_reverse){\n            max_sum_so_far_reverse = max_sum_ending_here_reverse;\n        }\n    }\n    max_sum = max_sum_so_far + max_sum_so_far_reverse;\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n568\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxtr8tkcr.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxtr8tkcr.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 568,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max_sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmph9o31_1b.js:21:10)\n    at Object.<anonymous> (/tmp/tmph9o31_1b.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max_sum){\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpswao24za.js:21:10)\n    at Object.<anonymous> (/tmp/tmpswao24za.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2v0fban2.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2v0fban2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_len = 0;\n    var max_sum_dec_arr_len = 0;\n    var max_sum_arr_len = 0;\n    var max_sum_inc_arr_index = 0;\n    var max_sum_dec_arr_index = 0;\n    var max_sum_arr_index = 0;\n    var max_sum_inc_arr_index_end = 0;\n    var max_sum_dec_arr_index_end = 0;\n    var max_sum_arr_index_end = 0;\n    var max_sum_inc_arr_index_start = 0;\n    var max_sum_dec_arr_index_start = 0;\n    var max_sum_arr_index_start = 0;\n    var max_sum_inc_arr_index_start_end = 0;\n    var max_sum_dec_arr_index_start_end = 0;\n    var max_sum_arr_index_start_end = 0;\n    var max_sum_inc_arr_index_end_start = 0;\n    var max_sum_dec_arr_index_end_start = 0;\n    var max_sum_arr_index_end_start = 0;\n    var max_sum_inc_arr_index_end_start_end = 0;\n    var max_sum_dec_arr_index_end_start_end = 0;\n    var max_sum_arr_index_end_start_end = 0;\n    var max_sum_inc_arr_index_start_end_start = 0;\n    var max_sum_dec_arr_index_start_end_start = 0;\n    var max_sum_arr_index_start_end_start = 0;\n    var max_sum_inc_arr_index_start_end_start_end = 0;\n    var max_sum_dec\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmportve4yr.js:45\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += arr[i];\n    if(sum > max){\n      max = sum;\n    }\n    if(sum < 0){\n      sum = 0;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_qqulf4d.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_qqulf4d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpud7k1wx2.js:19:10)\n    at Object.<anonymous> (/tmp/tmpud7k1wx2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_um_i523.js:15:10)\n    at Object.<anonymous> (/tmp/tmp_um_i523.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = 0;\n    var max_sum_arr_length = 0;\n    var max_sum_arr_length_index = 0;\n    var max_sum_arr_length_length = 0;\n    var max_sum_arr_length_length_index = 0;\n    var max_sum_arr_length_length_length = 0;\n    var max_sum_arr_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpeszgaoi9.js:37\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp6frh6jcr.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6frh6jcr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  var left_sum = 0;\n  var right_sum = 0;\n  var left_sum_arr = [];\n  var right_sum_arr = [];\n\n  for(var i = 0; i < arr.length; i++){\n    left_sum = Math.max(arr[i], left_sum + arr[i]);\n    left_sum_arr[i] = left_sum;\n  }\n\n  for(var j = arr.length - 1; j >= 0; j--){\n    right_sum = Math.max(arr[j], right_sum + arr[j]);\n    right_sum_arr[j] = right_sum;\n  }\n\n  for(var k = 0; k < arr.length; k++){\n    max_sum = Math.max(max_sum, left_sum_arr[k] + right_sum_arr[k] - arr[k]);\n  }\n\n  return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpo93he5q3.js:31:10)\n    at Object.<anonymous> (/tmp/tmpo93he5q3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmvv1qonu.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmvv1qonu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmvv1qonu.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmvv1qonu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var j = i;\n        while(arr[j] < arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        sum += arr[j];\n        j++;\n        while(arr[j] < arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        sum += arr[j];\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n178\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpf647699t.js:30:10)\n    at Object.<anonymous> (/tmp/tmpf647699t.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 178,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_index = 0;\n    var max_sum_dec_arr_index = 0;\n    var max_sum_arr_index = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n    }\n    for(var i = 1; i < arr.length; i++){\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]){\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n                max_sum_inc_arr_index = i;\n            }\n        }\n    }\n    for(var i = arr.length - 2; i >= 0; i--){\n        for(var j = arr.length - 1; j > i; j--){\n            if(arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]){\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n                max_sum_dec_arr_index = i;\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i] > max_sum){\n            max_sum = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n            max_sum_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmp07d3kbzo.js:46\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0;\n    var v\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmp3mmhfhq9.js:81\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdviv9glr.js:23:10)\n    at Object.<anonymous> (/tmp/tmpdviv9glr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_sum_ending_here = 0;\n    var max_sum_ending_here_reverse = 0;\n    var max_sum_so_far_reverse = 0;\n    var max_sum_reverse = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_ending_here_reverse = 0;\n    var max_sum_ending_here_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so_far = 0;\n    var max_sum_reverse_ending_here = 0;\n    var max_sum_reverse_ending_here_so_far = 0;\n    var max_sum_reverse_so\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmprm8wc44h.js:46\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max_sum){\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpswao24za.js:21:10)\n    at Object.<anonymous> (/tmp/tmpswao24za.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_so_far = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_so_far += arr[i];\n        if(max_sum_so_far < 0){\n            max_sum_so_far = 0;\n        }\n        if(max_sum < max_sum_so_far){\n            max_sum = max_sum_so_far;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpy45etpnr.js:22:10)\n    at Object.<anonymous> (/tmp/tmpy45etpnr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = 0;\n    var max_sum_arr_length = 0;\n    var max_sum_arr_length_index = 0;\n    var max_sum_arr_length_sum = 0;\n    var max_sum_arr_length_sum_index = 0;\n    var max_sum_arr_length_sum_arr = [];\n    var max_sum_arr_length_sum_arr_index = 0;\n    var max_sum_arr_length_sum_arr_length = 0;\n    var max_sum_arr_length_sum_arr_length_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum = 0;\n    var max_sum_arr_length_sum_arr_length_sum_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr = [];\n    var max_sum_arr_length_sum_arr_length_sum_arr_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_sum = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_sum_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_sum_arr = [];\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_sum_arr_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_sum_arr_length = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_sum_arr_length_index = 0;\n    var max_sum_arr_length_sum_arr_length_sum_arr_length_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpbbxhlx1_.js:37\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpmvv1qonu.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmvv1qonu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var inc = new Array(arr.length);\n    inc[0] = arr[0];\n    var dec = new Array(arr.length);\n    dec[arr.length-1] = arr[arr.length-1];\n    for(var i=1;i<arr.length;i++){\n        inc[i] = Math.max(inc[i-1]+arr[i],arr[i]);\n    }\n    for(var i=arr.length-2;i>=0;i--){\n        dec[i] = Math.max(dec[i+1]+arr[i],arr[i]);\n    }\n    var max = inc[0]+dec[0]-arr[0];\n    for(var i=1;i<arr.length;i++){\n        if(inc[i]+dec[i]-arr[i]>max){\n            max = inc[i]+dec[i]-arr[i];\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpaislx_kx.js:27:10)\n    at Object.<anonymous> (/tmp/tmpaislx_kx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        else if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpv_w7cf9f.js:22:10)\n    at Object.<anonymous> (/tmp/tmpv_w7cf9f.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var j = i;\n        while(arr[j] > arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        sum += arr[j];\n        j++;\n        while(arr[j] < arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        sum += arr[j];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n229\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgvsg8y5_.js:30:10)\n    at Object.<anonymous> (/tmp/tmpgvsg8y5_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 229,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var inc = [];\n    var dec = [];\n    inc[0] = arr[0];\n    dec[arr.length-1] = arr[arr.length-1];\n    for(var i=1; i<arr.length; i++){\n        inc[i] = Math.max(inc[i-1]+arr[i], arr[i]);\n    }\n    for(var i=arr.length-2; i>=0; i--){\n        dec[i] = Math.max(dec[i+1]+arr[i], arr[i]);\n    }\n    for(var i=0; i<arr.length; i++){\n        max_sum = Math.max(max_sum, inc[i]+dec[i]-arr[i]);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpae1yikcv.js:25:10)\n    at Object.<anonymous> (/tmp/tmpae1yikcv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if(sum > max_sum){\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n  51,\n  45,\n  33,\n  100,\n  12,\n  18,\n  9\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplb5txjjr.js:25:10)\n    at Object.<anonymous> (/tmp/tmplb5txjjr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1, 15, 51, 45, 33,\n    100, 12, 18,  9\n  ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdviv9glr.js:23:10)\n    at Object.<anonymous> (/tmp/tmpdviv9glr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0;\n    var vvv =\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmppghrp4l6.js:71\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var max_sum_arr_sum = 0;\n    var max_sum_arr_rev_sum = 0;\n    var\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpsrqkah71.js:41\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_len = 0;\n    var max_sum_arr_index = 0;\n    var max_sum_arr_index_end = 0;\n    var max_sum_arr_index_start = 0;\n    var max_sum_arr_index_start_end = 0;\n    var max_sum_arr_index_start_start = 0;\n    var max_sum_arr_index_end_end = 0;\n    var max_sum_arr_index_end_start = 0;\n    var max_sum_arr_index_end_end_start = 0;\n    var max_sum_arr_index_end_end_end = 0;\n    var max_sum_arr_index_end_start_start = 0;\n    var max_sum_arr_index_end_start_end = 0;\n    var max_sum_arr_index_end_start_start_end = 0;\n    var max_sum_arr_index_end_start_start_start = 0;\n    var max_sum_arr_index_end_start_end_end = 0;\n    var max_sum_arr_index_end_start_end_start = 0;\n    var max_sum_arr_index_end_start_start_end_end = 0;\n    var max_sum_arr_index_end_start_start_end_start = 0;\n    var max_sum_arr_index_end_start_start_start_end = 0;\n    var max_sum_arr_index_end_start_start_start_start = 0;\n    var max_sum_arr_index_end_start_end_end_end = 0;\n    var max_sum_arr_index_end_start_end_end_start = 0;\n    var max_sum_arr_index_end_start_end_start_end = 0;\n    var max_sum_arr_index_end_start_end_start_start = 0;\n    var max_sum_arr_index_end_start_start_end_end_end = 0;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpmxda8h77.js:40\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            }\n            else{\n                break;\n            }\n        }\n        for(var k = i-1; k >= 0; k--){\n            if(arr[k] > arr[k-1]){\n                sum += arr[k];\n                sum_arr.push(arr[k]);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  51,\n  45,\n  15\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpk8py0ow0.js:39:10)\n    at Object.<anonymous> (/tmp/tmpk8py0ow0.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 51, 45, 15 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]){\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n        }\n    }\n    for(var i = arr.length - 1; i >= 0; i--){\n        for(var j = arr.length - 1; j > i; j--){\n            if(arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]){\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        max_sum_arr[i] = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n        if(max_sum_arr[i] > max_sum){\n            max_sum = max_sum_arr[i];\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let max_sum_inc = 0;\n    let max_sum_dec = 0;\n    let max_sum_inc_arr = [];\n    let max_sum_dec_arr = [];\n    let max_sum_arr = [];\n    for(let i = 0; i < arr.length; i++){\n        max_sum_inc_arr.push(arr[i]);\n        max_sum_dec_arr.push(arr[i]);\n        max_sum_arr.push(arr[i]);\n        for(let j = 0; j < i; j++){\n            if(arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]){\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n            if(arr[i] < arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]){\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n        if(max_sum_inc_arr[i] > max_sum_inc){\n            max_sum_inc = max_sum_inc_arr[i];\n        }\n        if(max_sum_dec_arr[i] > max_sum_dec){\n            max_sum_dec = max_sum_dec_arr[i];\n        }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(max_sum_arr[i] < max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i]){\n            max_sum_arr[i] = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n        }\n        if(max_sum_arr[i] > max_sum){\n            max_sum = max_sum_arr[i];\n        }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmplvefh23c.js:46\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var temp_sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    for(i = 0; i < arr.length; i++){\n        temp_sum = 0;\n        for(j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                break;\n            }\n            temp_sum += arr[j];\n        }\n        for(k = j; k < arr.length; k++){\n            if(arr[k] < arr[k+1]){\n                break;\n            }\n            temp_sum += arr[k];\n        }\n        if(temp_sum > max_sum){\n            max_sum = temp_sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpijdwjpp4.js:34:10)\n    at Object.<anonymous> (/tmp/tmpijdwjpp4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = arr[0];\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpw5fkk3u5.js:22:10)\n    at Object.<anonymous> (/tmp/tmpw5fkk3u5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyi01nrho.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyi01nrho.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpud7k1wx2.js:19:10)\n    at Object.<anonymous> (/tmp/tmpud7k1wx2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += arr[i];\n    if(sum > max){\n      max = sum;\n    }\n    if(sum < 0){\n      sum = 0;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_qqulf4d.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_qqulf4d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_len = 0;\n    var max_sum_arr_len_i = 0;\n    var max_sum_arr_len_j = 0;\n    var max_sum_arr_len_k = 0;\n    var max_sum_arr_len_l = 0;\n    var max_sum_arr_len_m = 0;\n    var max_sum_arr_len_n = 0;\n    var max_sum_arr_len_o = 0;\n    var max_sum_arr_len_p = 0;\n    var max_sum_arr_len_q = 0;\n    var max_sum_arr_len_r = 0;\n    var max_sum_arr_len_s = 0;\n    var max_sum_arr_len_t = 0;\n    var max_sum_arr_len_u = 0;\n    var max_sum_arr_len_v = 0;\n    var max_sum_arr_len_w = 0;\n    var max_sum_arr_len_x = 0;\n    var max_sum_arr_len_y = 0;\n    var max_sum_arr_len_z = 0;\n    var max_sum_arr_len_aa = 0;\n    var max_sum_arr_len_ab = 0;\n    var max_sum_arr_len_ac = 0;\n    var max_sum_arr_len_ad = 0;\n    var max_sum_arr_len_ae = 0;\n    var max_sum_arr_len_af = 0;\n    var max_sum_arr_len_ag = 0;\n    var max_sum_arr_len_ah = 0;\n    var max_sum_arr_len_ai = 0;\n    var max_sum_arr_len_aj = 0;\n    var max_sum_arr_len_ak = 0;\n    var max_sum_arr_len_al = 0;\n    var max_sum_arr_len_am = 0;\n    var max_sum_arr_len_an = 0;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpraphz8pj.js:48\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += arr[i];\n    if(sum > max){\n      max = sum;\n    }\n    if(sum < 0){\n      sum = 0;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_qqulf4d.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_qqulf4d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        max_sum_left[i] = max_sum;\n    }\n    sum = 0;\n    max_sum = 0;\n    for(let i = arr.length - 1; i >= 0; i--){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        max_sum_right[i] = max_sum;\n    }\n    max_sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(max_sum_left[i] + max_sum_right[i] > max_sum){\n            max_sum = max_sum_left[i] + max_sum_right[i];\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp3nj9l3q4.js:43:10)\n    at Object.<anonymous> (/tmp/tmp3nj9l3q4.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = arr[0];\n    var sum = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        sum = Math.max(arr[i], sum + arr[i]);\n        max = Math.max(max, sum);\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpysneddww.js:17:10)\n    at Object.<anonymous> (/tmp/tmpysneddww.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var inc = [];\n    var dec = [];\n    var inc_sum = 0;\n    var dec_sum = 0;\n    var len = arr.length;\n    for(var i = 0; i < len; i++){\n        inc_sum = 0;\n        dec_sum = 0;\n        for(var j = i; j >= 0; j--){\n            if(arr[j] < arr[i]){\n                inc_sum += arr[j];\n            }\n        }\n        for(var k = i; k < len; k++){\n            if(arr[k] < arr[i]){\n                dec_sum += arr[k];\n            }\n        }\n        inc[i] = inc_sum;\n        dec[i] = dec_sum;\n    }\n    for(var i = 0; i < len; i++){\n        if(inc[i] + dec[i] > max_sum){\n            max_sum = inc[i] + dec[i];\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpejrhrlhh.js:38:10)\n    at Object.<anonymous> (/tmp/tmpejrhrlhh.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        let j = i;\n        while(arr[j] < arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        sum += arr[j];\n        while(arr[j] > arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        sum += arr[j];\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n245\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_zgwlqeq.js:29:10)\n    at Object.<anonymous> (/tmp/tmp_zgwlqeq.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 245,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] >= arr[j-1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            }\n            else{\n                break;\n            }\n        }\n        for(var k = j; k < arr.length; k++){\n            if(arr[k] <= arr[k-1]){\n                sum += arr[k];\n                sum_arr.push(arr[k]);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  51,\n  45,\n  33\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxg_h6b9s.js:39:10)\n    at Object.<anonymous> (/tmp/tmpxg_h6b9s.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 51, 45, 33 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n        max_sum_arr[i] = arr[i];\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]){\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n            if(arr[i] < arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]){\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n        if(max_sum_inc_arr[i] > max_sum_inc){\n            max_sum_inc = max_sum_inc_arr[i];\n        }\n        if(max_sum_dec_arr[i] > max_sum_dec){\n            max_sum_dec = max_sum_dec_arr[i];\n        }\n        if(max_sum_arr[i] > max_sum){\n            max_sum = max_sum_arr[i];\n        }\n    }\n    return Math.max(max_sum_inc, max_sum_dec, max_sum);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n167\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp198my19p.js:39:10)\n    at Object.<anonymous> (/tmp/tmp198my19p.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 167,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2v0fban2.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2v0fban2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_ending_here = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here = Math.max(max_sum_ending_here + arr[i], 0);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp69jgf9px.js:17:10)\n    at Object.<anonymous> (/tmp/tmp69jgf9px.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var inc = [];\n    var dec = [];\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        inc[i] = arr[i];\n        dec[i] = arr[i];\n    }\n    for(var i = 1; i < arr.length; i++){\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && inc[i] < inc[j] + arr[i]){\n                inc[i] = inc[j] + arr[i];\n            }\n        }\n    }\n    for(var i = arr.length - 2; i >= 0; i--){\n        for(var j = arr.length - 1; j > i; j--){\n            if(arr[i] > arr[j] && dec[i] < dec[j] + arr[i]){\n                dec[i] = dec[j] + arr[i];\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(max < inc[i] + dec[i] - arr[i]){\n            max = inc[i] + dec[i] - arr[i];\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var n = arr.length;\n    var max_sum_inc_arr = new Array(n);\n    var max_sum_dec_arr = new Array(n);\n    max_sum_inc_arr[0] = arr[0];\n    max_sum_dec_arr[n-1] = arr[n-1];\n    for(var i = 1; i < n; i++){\n        max_sum_inc_arr[i] = Math.max(max_sum_inc_arr[i-1] + arr[i], arr[i]);\n    }\n    for(var i = n-2; i >= 0; i--){\n        max_sum_dec_arr[i] = Math.max(max_sum_dec_arr[i+1] + arr[i], arr[i]);\n    }\n    for(var i = 0; i < n; i++){\n        max_sum = Math.max(max_sum, max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i]);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdy8los2i.js:28:10)\n    at Object.<anonymous> (/tmp/tmpdy8los2i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n            else{\n                sum += arr[j];\n                break;\n            }\n        }\n        for(var k = j; k < arr.length; k++){\n            if(arr[k] < arr[k+1]){\n                sum += arr[k];\n            }\n            else{\n                sum += arr[k];\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpg_08bshs.js:36:10)\n    at Object.<anonymous> (/tmp/tmpg_08bshs.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var n = arr.length;\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpjjh2ora2.js:34\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if(sum > max_sum){\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    console.log(max_sum_arr);\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "[\n    1, 15, 51, 45, 33,\n  100, 12, 18,  9\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpaz_2v9p6.js:26:10)\n    at Object.<anonymous> (/tmp/tmpaz_2v9p6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var inc = new Array(arr.length);\n    var dec = new Array(arr.length);\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        inc[i] = arr[i];\n        for(var j = 0; j < i; j++){\n            if(arr[j] < arr[i]){\n                inc[i] = Math.max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n    for(var i = arr.length - 1; i >= 0; i--){\n        dec[i] = arr[i];\n        for(var j = arr.length - 1; j > i; j--){\n            if(arr[j] < arr[i]){\n                dec[i] = Math.max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n\tvar max = 0;\n\tfor(var i = 0; i < arr.length; i++){\n\t\tvar sum = 0;\n\t\tfor(var j = i; j < arr.length; j++){\n\t\t\tsum += arr[j];\n\t\t\tif(sum > max){\n\t\t\t\tmax = sum;\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdcu5a345.js:21:10)\n    at Object.<anonymous> (/tmp/tmpdcu5a345.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmp59i93oob.js:33\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_len = 0;\n    var max_sum_dec_arr_len = 0;\n    var max_sum_arr_len = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n        max_sum_arr[i] = arr[i];\n    }\n    for(var i = 1; i < arr.length; i++){\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]){\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n        }\n    }\n    for(var i = arr.length - 2; i >= 0; i--){\n        for(var j = arr.length - 1; j > i; j--){\n            if(arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]){\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        max_sum_arr[i] = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(max_sum_inc_arr[i] > max_sum_inc){\n            max_sum_inc\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpmtwuoqz2.js:47\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let sum = 0;\n    let i = 0;\n    while(i < arr.length){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        i++;\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmptqs4po98.js:21:10)\n    at Object.<anonymous> (/tmp/tmptqs4po98.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc_arr[i] = arr[i];\n        max_sum_dec_arr[i] = arr[i];\n        max_sum_arr[i] = arr[i];\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i]){\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i];\n            }\n            if(arr[i] < arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i]){\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i];\n            }\n        }\n        if(max_sum_inc_arr[i] > max_sum_inc){\n            max_sum_inc = max_sum_inc_arr[i];\n        }\n        if(max_sum_dec_arr[i] > max_sum_dec){\n            max_sum_dec = max_sum_dec_arr[i];\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        max_sum_arr[i] = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i];\n        if(max_sum_arr[i] > max_sum){\n            max_sum = max_sum_arr[i];\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n167\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbvyxv2fz.js:42:10)\n    at Object.<anonymous> (/tmp/tmpbvyxv2fz.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 167,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc = max_sum_inc + arr[i];\n        max_sum_inc_arr.push(max_sum_inc);\n        if(max_sum_inc < 0){\n            max_sum_inc = 0;\n            max_sum_inc_arr = [];\n        }\n    }\n    for(var i = arr.length - 1; i >= 0; i--){\n        max_sum_dec = max_sum_dec + arr[i];\n        max_sum_dec_arr.push(max_sum_dec);\n        if(max_sum_dec < 0){\n            max_sum_dec = 0;\n            max_sum_dec_arr = [];\n        }\n    }\n    for(var i = 0; i < max_sum_inc_arr.length; i++){\n        for(var j = 0; j < max_sum_dec_arr.length; j++){\n            if(max_sum_inc_arr[i] + max_sum_dec_arr[j] > max_sum){\n                max_sum = max_sum_inc_arr[i] + max_sum_dec_arr[j];\n                max_sum_arr = max_sum_inc_arr.slice(0, i + 1).concat(max_sum_dec_arr.slice(j));\n            }\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  16,\n  67,\n  112,\n  145,\n  245,\n  257,\n  275,\n  284,\n  284\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp6pc51qk7.js:41:10)\n    at Object.<anonymous> (/tmp/tmp6pc51qk7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,  16,  67, 112,\n    145, 245, 257, 275,\n    284, 284\n  ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if(sum > max_sum){\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n  51,\n  45,\n  33,\n  100,\n  12,\n  18,\n  9\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplb5txjjr.js:25:10)\n    at Object.<anonymous> (/tmp/tmplb5txjjr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1, 15, 51, 45, 33,\n    100, 12, 18,  9\n  ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0;\n    var v\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmp3mmhfhq9.js:81\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmp59i93oob.js:33\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_index = 0;\n    var max_sum_dec_arr_index = 0;\n    var max_sum_arr_index = 0;\n    var max_sum_inc_arr_length = 0;\n    var max_sum_dec_arr_length = 0;\n    var max_sum_arr_length = 0;\n    var max_sum_inc_arr_last = 0;\n    var max_sum_dec_arr_last = 0;\n    var max_sum_arr_last = 0;\n    var max_sum_inc_arr_first = 0;\n    var max_sum_dec_arr_first = 0;\n    var max_sum_arr_first = 0;\n    var max_sum_inc_arr_first_index = 0;\n    var max_sum_dec_arr_first_index = 0;\n    var max_sum_arr_first_index = 0;\n    var max_sum_inc_arr_last_index = 0;\n    var max_sum_dec_arr_last_index = 0;\n    var max_sum_arr_last_index = 0;\n    var max_sum_inc_arr_last_index_temp = 0;\n    var max_sum_dec_arr_last_index_temp = 0;\n    var max_sum_arr_last_index_temp = 0;\n    var max_sum_inc_arr_first_index_temp = 0;\n    var max_sum_dec_arr_first_index_temp = 0;\n    var max_sum_arr_first_index_temp = 0;\n    var max_sum_inc_arr_last_temp = 0;\n    var max_sum_dec_arr_last_temp = 0;\n    var max_sum_arr_last_temp = 0;\n    var max_sum_inc_arr_first_temp = 0;\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpquka718c.js:48\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_rev = [];\n    var max_sum_dec_arr_rev = [];\n    var max_sum_arr_rev = [];\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc = max_sum_inc + arr[i];\n        max_sum_inc_arr.push(arr[i]);\n        if(max_sum_inc < 0){\n            max_sum_inc = 0;\n            max_sum_inc_arr = [];\n        }\n        if(max_sum < max_sum_inc){\n            max_sum = max_sum_inc;\n            max_sum_arr = max_sum_inc_arr;\n        }\n    }\n    for(var i = arr.length - 1; i >= 0; i--){\n        max_sum_dec = max_sum_dec + arr[i];\n        max_sum_dec_arr.push(arr[i]);\n        if(max_sum_dec < 0){\n            max_sum_dec = 0;\n            max_sum_dec_arr = [];\n        }\n        if(max_sum < max_sum_dec){\n            max_sum = max_sum_dec;\n            max_sum_arr = max_sum_dec_arr;\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc = max_sum_inc + arr[i];\n        max_sum_inc_arr_rev.push(arr[i]);\n        if(max_sum_inc < 0){\n            max_sum_inc = 0;\n            max_sum_inc_arr_rev = [];\n        }\n        if(max_sum < max_sum_inc){\n            max_sum = max_sum_inc;\n            max_sum_arr_rev = max_sum_inc\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmp9oswgyvf.js:56\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var ab = 0;\n    var ac = 0;\n    var ad = 0;\n    var ae = 0;\n    var af = 0;\n    var ag = 0;\n    var ah = 0;\n    var ai = 0;\n    var aj = 0;\n    var ak = 0;\n    var al = 0;\n    var am = 0;\n    var an = 0;\n    var ao = 0;\n    var ap = 0;\n    var aq = 0;\n    var ar = 0;\n    var as = 0;\n    var at = 0;\n    var au = 0;\n    var av = 0;\n    var aw = 0;\n    var ax = 0;\n    var ay = 0;\n    var az = 0;\n    var ba = 0;\n    var bb = 0;\n    var bc = 0;\n    var bd = 0;\n    var be = 0;\n    var bf = 0;\n    var bg = 0;\n    var bh = 0;\n    var bi = 0;\n    var bj = 0;\n    var bk = 0;\n    var bl = 0;\n    var bm = 0;\n    var bn = 0;\n    var bo = 0;\n    var bp = 0;\n    var bq = 0;\n    var br = 0;\n    var bs = 0;\n    var bt = 0;\n    var bu = 0;\n    var bv = 0;\n    var bw = 0;\n    var bx =\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpkmjuqcpl.js:73\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0;\n    var v\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmp3mmhfhq9.js:81\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max_sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmph9o31_1b.js:21:10)\n    at Object.<anonymous> (/tmp/tmph9o31_1b.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2v0fban2.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2v0fban2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = [];\n    var max_sum_arr_index_reverse = [];\n    var max_sum_arr_reverse = [];\n    var max_sum_reverse = 0;\n    var max_sum_arr_reverse_index = [];\n    var max_sum_arr_reverse_index_reverse = [];\n    var max_sum_arr_reverse_reverse = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        var sum_arr_index = [];\n        var sum_arr_index_reverse = [];\n        var sum_arr_reverse = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j-1] || j === i){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n                sum_arr_index.push(j);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n            max_sum_arr_index = sum_arr_index;\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        var sum_arr_index = [];\n        var sum_arr_index_reverse = [];\n        var sum_arr_reverse = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] < arr[j-1] || j === i){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n                sum_arr_index.push(j);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum_reverse){\n            max_sum_reverse = sum;\n            max_sum_arr_reverse = sum_arr;\n            max_sum_arr_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpmll2nn5p.js:64\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_so_far = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_so_far = Math.max(max_sum_so_far + arr[i], 0);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb5a0z_oh.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb5a0z_oh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2v0fban2.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2v0fban2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpud7k1wx2.js:19:10)\n    at Object.<anonymous> (/tmp/tmpud7k1wx2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = 0;\n    var max_sum_arr_length = 0;\n    var max_sum_arr_length_index = 0;\n    var max_sum_arr_length_length = 0;\n    var max_sum_arr_length_length_index = 0;\n    var max_sum_arr_length_length_length = 0;\n    var max_sum_arr_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length_length = 0;\n    var max_sum_arr_length_length_length_length_length_length_length_length_length_length_index = 0;\n    var max_sum_arr_length_length_length_length_length_length\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmpeszgaoi9.js:37\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n            }\n            else{\n                break;\n            }\n        }\n        for(var k = j; k < arr.length; k++){\n            if(arr[k] < arr[k+1]){\n                sum += arr[k];\n                sum_arr.push(arr[k]);\n            }\n            else{\n                break;\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr;\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  51,\n  45,\n  33\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmppiangy7z.js:39:10)\n    at Object.<anonymous> (/tmp/tmppiangy7z.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 51, 45, 33 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        else if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2hme2ku1.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2hme2ku1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let sum = 0;\n    let i = 0;\n    let j = arr.length - 1;\n    while(i < j){\n        if(arr[i] < arr[j]){\n            sum += arr[i];\n            i++;\n        }\n        else{\n            sum += arr[j];\n            j--;\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpb0blslyl.js:28:10)\n    at Object.<anonymous> (/tmp/tmpb0blslyl.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  let max_sum = 0;\n  let max_sum_left = [];\n  let max_sum_right = [];\n  let sum = 0;\n  for(let i = 0; i < arr.length; i++){\n    sum += arr[i];\n    max_sum_left[i] = sum;\n    if(sum < 0){\n      sum = 0;\n    }\n  }\n  sum = 0;\n  for(let i = arr.length - 1; i >= 0; i--){\n    sum += arr[i];\n    max_sum_right[i] = sum;\n    if(sum < 0){\n      sum = 0;\n    }\n  }\n  for(let i = 0; i < arr.length; i++){\n    max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n  }\n  return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpqfdiqtsw.js:33:10)\n    at Object.<anonymous> (/tmp/tmpqfdiqtsw.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc = Math.max(max_sum_inc + arr[i], 0);\n        max_sum_dec = Math.max(max_sum_dec + arr[i], 0);\n        max_sum = Math.max(max_sum, max_sum_inc, max_sum_dec);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxsxwv7l_.js:19:10)\n    at Object.<anonymous> (/tmp/tmpxsxwv7l_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "/tmp/tmp59i93oob.js:33\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let n = arr.length;\n    let sum_arr = new Array(n).fill(0);\n    let sum_arr_rev = new Array(n).fill(0);\n    let max_arr = new Array(n).fill(0);\n    sum_arr[0] = arr[0];\n    sum_arr_rev[n-1] = arr[n-1];\n    for(let i = 1; i < n; i++){\n        sum_arr[i] = Math.max(arr[i], sum_arr[i-1] + arr[i]);\n    }\n    for(let i = n-2; i >= 0; i--){\n        sum_arr_rev[i] = Math.max(arr[i], sum_arr_rev[i+1] + arr[i]);\n    }\n    for(let i = 0; i < n; i++){\n        max_arr[i] = sum_arr[i] + sum_arr_rev[i] - arr[i];\n    }\n    max_sum = Math.max(...max_arr);\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp8y24jkmk.js:28:10)\n    at Object.<anonymous> (/tmp/tmp8y24jkmk.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      if(arr[j] > arr[j+1]){\n        sum += arr[j];\n      }\n    }\n    if(sum > max){\n      max = sum;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgfhhpicf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpgfhhpicf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var j = i;\n        while(arr[j] < arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        while(arr[j] > arr[j+1]){\n            sum += arr[j];\n            j++;\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpzu0zqppe.js:27:10)\n    at Object.<anonymous> (/tmp/tmpzu0zqppe.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2_222myk.js:23:10)\n    at Object.<anonymous> (/tmp/tmp2_222myk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdviv9glr.js:23:10)\n    at Object.<anonymous> (/tmp/tmpdviv9glr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_ending_here = 0;\n    var max_so_far = 0;\n    for(var i=0; i<arr.length; i++){\n        max_ending_here = Math.max(arr[i], max_ending_here+arr[i]);\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    return max_so_far;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp32_z3fts.js:17:10)\n    at Object.<anonymous> (/tmp/tmp32_z3fts.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_so_far = 0;\n    var max_sum_ending_here = 0;\n    var max_sum_ending_here_reverse = 0;\n    var max_sum_so_far_reverse = 0;\n    var max_sum_reverse = 0;\n    var max_sum_ending_here_reverse = 0;\n    var max_sum_ending_here_reverse = 0;\n    var max_sum_so_far_reverse = 0;\n    var max_sum_reverse = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here += arr[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum_so_far < max_sum_ending_here){\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    for(var i = arr.length - 1; i >= 0; i--){\n        max_sum_ending_here_reverse += arr[i];\n        if(max_sum_ending_here_reverse < 0){\n            max_sum_ending_here_reverse = 0;\n        }\n        if(max_sum_so_far_reverse < max_sum_ending_here_reverse){\n            max_sum_so_far_reverse = max_sum_ending_here_reverse;\n        }\n    }\n    if(max_sum_so_far > max_sum_so_far_reverse){\n        max_sum = max_sum_so_far;\n    }\n    else{\n        max_sum = max_sum_so_far_reverse;\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpbvpvx9nc.js:45:10)\n    at Object.<anonymous> (/tmp/tmpbvpvx9nc.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_left = [];\n    var max_sum_right = [];\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        max_sum_left[i] = sum;\n    }\n    sum = 0;\n    for(var i = arr.length - 1; i >= 0; i--){\n        sum += arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        max_sum_right[i] = sum;\n    }\n    for(var i = 0; i < arr.length; i++){\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpp8qktjjx.js:33:10)\n    at Object.<anonymous> (/tmp/tmpp8qktjjx.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  let max = 0;\n  for(let i = 0; i < arr.length; i++){\n    let sum = 0;\n    for(let j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp96v718xh.js:21:10)\n    at Object.<anonymous> (/tmp/tmp96v718xh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var left = new Array(arr.length);\n    var right = new Array(arr.length);\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        left[i] = 1;\n        right[i] = 1;\n    }\n    for(var i = 1; i < arr.length; i++){\n        for(var j = 0; j < i; j++){\n            if(arr[i] > arr[j] && left[i] < left[j] + 1){\n                left[i] = left[j] + 1;\n            }\n        }\n    }\n    for(var i = arr.length - 2; i >= 0; i--){\n        for(var j = arr.length - 1; j > i; j--){\n            if(arr[i] > arr[j] && right[i] < right[j] + 1){\n                right[i] = right[j] + 1;\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(max < left[i] + right[i] - 1){\n            max = left[i] + right[i] - 1;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpsoei8kw6.js:37:10)\n    at Object.<anonymous> (/tmp/tmpsoei8kw6.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    for(var j = i; j < arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplhdqizl6.js:21:10)\n    at Object.<anonymous> (/tmp/tmplhdqizl6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyi01nrho.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyi01nrho.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var temp_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        temp_sum += arr[i];\n        if(temp_sum > max_sum){\n            max_sum = temp_sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpzbqop4vy.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzbqop4vy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_len = 0;\n    var max_sum_dec_arr_len = 0;\n    var max_sum_arr_len = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "/tmp/tmpt1xnwk21.js:76\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_ending_here = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here = max_sum_ending_here + arr[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum < max_sum_ending_here){\n            max_sum = max_sum_ending_here;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpji4rtyz_.js:22:10)\n    at Object.<anonymous> (/tmp/tmpji4rtyz_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max_sum = 0;\n  var max_sum_left = [];\n  var max_sum_right = [];\n  var max_sum_left_temp = 0;\n  var max_sum_right_temp = 0;\n  for(var i = 0; i < arr.length; i++){\n    max_sum_left_temp += arr[i];\n    max_sum_left[i] = max_sum_left_temp;\n  }\n  for(var i = arr.length - 1; i >= 0; i--){\n    max_sum_right_temp += arr[i];\n    max_sum_right[i] = max_sum_right_temp;\n  }\n  for(var i = 0; i < arr.length; i++){\n    if(max_sum_left[i] + max_sum_right[i] > max_sum){\n      max_sum = max_sum_left[i] + max_sum_right[i];\n    }\n  }\n  return max_sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n384\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp3pkx0ibj.js:28:10)\n    at Object.<anonymous> (/tmp/tmp3pkx0ibj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 384,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_ending_here = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here += arr[i];\n        if(max_sum_ending_here < 0){\n            max_sum_ending_here = 0;\n        }\n        if(max_sum < max_sum_ending_here){\n            max_sum = max_sum_ending_here;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpjawu0bbh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjawu0bbh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        let sum = 0;\n        for(let j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp2v0fban2.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2v0fban2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n\tvar max_sum = 0;\n\tvar max_sum_inc = 0;\n\tvar max_sum_dec = 0;\n\tvar sum_inc = 0;\n\tvar sum_dec = 0;\n\tfor(var i = 0; i < arr.length; i++){\n\t\tsum_inc += arr[i];\n\t\tif(sum_inc < 0){\n\t\t\tsum_inc = 0;\n\t\t}\n\t\tif(sum_inc > max_sum_inc){\n\t\t\tmax_sum_inc = sum_inc;\n\t\t}\n\t\tsum_dec += arr[arr.length - 1 - i];\n\t\tif(sum_dec < 0){\n\t\t\tsum_dec = 0;\n\t\t}\n\t\tif(sum_dec > max_sum_dec){\n\t\t\tmax_sum_dec = sum_dec;\n\t\t}\n\t}\n\tmax_sum = max_sum_inc + max_sum_dec;\n\treturn max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n568\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpg0e4sq8f.js:33:10)\n    at Object.<anonymous> (/tmp/tmpg0e4sq8f.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 568,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var inc = new Array(arr.length);\n    var dec = new Array(arr.length);\n    inc[0] = arr[0];\n    dec[arr.length-1] = arr[arr.length-1];\n    for(var i=1;i<arr.length;i++){\n        inc[i] = Math.max(inc[i-1],arr[i]);\n    }\n    for(var i=arr.length-2;i>=0;i--){\n        dec[i] = Math.max(dec[i+1],arr[i]);\n    }\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        max = Math.max(max,inc[i]+dec[i]-arr[i]);\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxmvxp9c2.js:25:10)\n    at Object.<anonymous> (/tmp/tmpxmvxp9c2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max){\n                max = sum;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp9pbtzw1n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9pbtzw1n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_ending_here = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum_ending_here = Math.max(arr[i], max_sum_ending_here + arr[i]);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp23lhjt6p.js:17:10)\n    at Object.<anonymous> (/tmp/tmp23lhjt6p.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    var i = 0;\n    var j = arr.length - 1;\n    while(i < j){\n        if(arr[i] < arr[j]){\n            sum += arr[i];\n            i++;\n        }\n        else{\n            sum += arr[j];\n            j--;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n184\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp4_qbtts2.js:25:10)\n    at Object.<anonymous> (/tmp/tmp4_qbtts2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 184,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var inc = new Array(arr.length);\n    var dec = new Array(arr.length);\n    inc[0] = arr[0];\n    dec[arr.length-1] = arr[arr.length-1];\n    for(var i=1;i<arr.length;i++){\n        inc[i] = Math.max(inc[i-1],arr[i]);\n    }\n    for(var i=arr.length-2;i>=0;i--){\n        dec[i] = Math.max(dec[i+1],arr[i]);\n    }\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        max = Math.max(max,inc[i]+dec[i]-arr[i]);\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n118\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp_aplmi08.js:24:10)\n    at Object.<anonymous> (/tmp/tmp_aplmi08.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 118,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyi01nrho.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyi01nrho.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum = sum + arr[i];\n        if(sum < 0){\n            sum = 0;\n        }\n        if(sum > max_sum){\n            max_sum = sum;\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpddop68iu.js:22:10)\n    at Object.<anonymous> (/tmp/tmpddop68iu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i=0; i<arr.length; i++){\n        var max_sum_inc = 0;\n        var max_sum_inc_arr = [];\n        for(var j=i; j<arr.length; j++){\n            if(arr[j] > arr[j-1]){\n                max_sum_inc += arr[j];\n                max_sum_inc_arr.push(arr[j]);\n            }\n            else{\n                break;\n            }\n        }\n        var max_sum_dec = 0;\n        var max_sum_dec_arr = [];\n        for(var k=i; k>=0; k--){\n            if(arr[k] > arr[k-1]){\n                max_sum_dec += arr[k];\n                max_sum_dec_arr.push(arr[k]);\n            }\n            else{\n                break;\n            }\n        }\n        if(max_sum_inc + max_sum_dec > max_sum){\n            max_sum = max_sum_inc + max_sum_dec;\n            max_sum_arr = max_sum_inc_arr.concat(max_sum_dec_arr);\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  100,\n  100\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpxtllqdxp.js:41:10)\n    at Object.<anonymous> (/tmp/tmpxtllqdxp.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 100, 100 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var max_sum_arr = [];\n    var sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        sum_arr.push(sum);\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr.slice();\n        }\n    }\n    sum = 0;\n    sum_arr = [];\n    for(var i = arr.length - 1; i >= 0; i--){\n        sum += arr[i];\n        sum_arr.push(sum);\n        if(sum > max_sum){\n            max_sum = sum;\n            max_sum_arr = sum_arr.slice();\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyjm0q17f.js:33:10)\n    at Object.<anonymous> (/tmp/tmpyjm0q17f.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let max_sum_inc = [];\n    let max_sum_dec = [];\n    for(let i = 0; i < arr.length; i++){\n        max_sum_inc[i] = arr[i];\n        max_sum_dec[i] = arr[i];\n        for(let j = 0; j < i; j++){\n            if(arr[j] < arr[i]){\n                max_sum_inc[i] = Math.max(max_sum_inc[i], max_sum_inc[j] + arr[i]);\n            }\n        }\n    }\n    for(let i = arr.length - 1; i >= 0; i--){\n        for(let j = arr.length - 1; j > i; j--){\n            if(arr[j] < arr[i]){\n                max_sum_dec[i] = Math.max(max_sum_dec[i], max_sum_dec[j] + arr[i]);\n            }\n        }\n    }\n    for(let i = 0; i < arr.length; i++){\n        max_sum = Math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    var max_sum_arr_rev_rev = [];\n    var max_sum_arr_rev_rev_rev = [];\n    var max_sum_arr_rev_rev_rev_rev = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n            max_sum_arr.push(max);\n        }\n    }\n    max = 0;\n    for(var i = arr.length-1; i >= 0; i--){\n        if(arr[i] > max){\n            max = arr[i];\n            max_sum_arr_rev.push(max);\n        }\n    }\n    max = 0;\n    for(var i = 0; i < max_sum_arr.length; i++){\n        if(max_sum_arr[i] > max){\n            max = max_sum_arr[i];\n            max_sum_arr_rev_rev.push(max);\n        }\n    }\n    max = 0;\n    for(var i = max_sum_arr_rev.length-1; i >= 0; i--){\n        if(max_sum_arr_rev[i] > max){\n            max = max_sum_arr_rev[i];\n            max_sum_arr_rev_rev_rev.push(max);\n        }\n    }\n    max = 0;\n    for(var i = 0; i < max_sum_arr_rev_rev.length; i++){\n        if(max_sum_arr_rev_rev[i] > max){\n            max = max_sum_arr_rev_rev[i];\n            max_sum_arr_rev_rev_rev_rev.push(max);\n        }\n    }\n    for(var i = 0; i < max_sum_arr_rev_rev_rev.length; i++){\n        max_sum += max_sum_arr_rev_rev_rev_rev[i\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "/tmp/tmpw_iumqqn.js:46\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_right = [];\n    let max_sum_right_left = [];\n    let max_sum_left_right_left = [];\n    let max_sum_right_left_right = [];\n    let max_sum_left_right_left_right = [];\n    let max_sum_right_left_right_left = [];\n    let max_sum_left_right_left_right_left = [];\n    let max_sum_right_left_right_left_right = [];\n    let max_sum_left_right_left_right_left_right = [];\n    let max_sum_right_left_right_left_right_left = [];\n    let max_sum_left_right_left_right_left_right_left = [];\n    let max_sum_right_left_right_left_right_left_right = [];\n    let max_sum_left_right_left_right_left_right_left_right = [];\n    let max_sum_right_left_right_left_right_left_right_left = [];\n    let max_sum_left_right_left_right_left_right_left_right_left = [];\n    let max_sum_right_left_right_left_right_left_right_left_right = [];\n    let max_sum_left_right_left_right_left_right_left_right_left_right = [];\n    let max_sum_right_left_right_left_right_left_right_left_right_left = [];\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left = [];\n    let max_sum_right_left_right_left_right_left_right_left_right_left_right = [];\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = [];\n    let max_sum_right_left_right_left_right_left_right_left_right_left_right_left =\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "/tmp/tmpxhq51hl3.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var sum = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var aa = 0;\n    var bb = 0;\n    var cc = 0;\n    var dd = 0;\n    var ee = 0;\n    var ff = 0;\n    var gg = 0;\n    var hh = 0;\n    var ii = 0;\n    var jj = 0;\n    var kk = 0;\n    var ll = 0;\n    var mm = 0;\n    var nn = 0;\n    var oo = 0;\n    var pp = 0;\n    var qq = 0;\n    var rr = 0;\n    var ss = 0;\n    var tt = 0;\n    var uu = 0;\n    var vv = 0;\n    var ww = 0;\n    var xx = 0;\n    var yy = 0;\n    var zz = 0;\n    var aaa = 0;\n    var bbb = 0;\n    var ccc = 0;\n    var ddd = 0;\n    var eee = 0;\n    var fff = 0;\n    var ggg = 0;\n    var hhh = 0;\n    var iii = 0;\n    var jjj = 0;\n    var kkk = 0;\n    var lll = 0;\n    var mmm = 0;\n    var nnn = 0;\n    var ooo = 0;\n    var ppp = 0;\n    var qqq = 0;\n    var rrr = 0;\n    var sss = 0;\n    var ttt = 0;\n    var uuu = 0;\n    var v\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "/tmp/tmp3mmhfhq9.js:81\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_inc = 0;\n    var max_sum_dec = 0;\n    var max_sum_inc_arr = [];\n    var max_sum_dec_arr = [];\n    var max_sum_arr = [];\n    var max_sum_inc_arr_index = 0;\n    var max_sum_dec_arr_index = 0;\n    var max_sum_arr_index = 0;\n\n    for(var i = 0; i < arr.length; i++){\n        max_sum_inc += arr[i];\n        max_sum_inc_arr.push(arr[i]);\n        if(max_sum_inc > max_sum){\n            max_sum = max_sum_inc;\n            max_sum_arr = max_sum_inc_arr;\n            max_sum_arr_index = max_sum_inc_arr_index;\n        }\n        if(arr[i] > arr[i+1]){\n            max_sum_inc = 0;\n            max_sum_inc_arr = [];\n            max_sum_inc_arr_index = i+1;\n        }\n    }\n    for(var j = arr.length-1; j >= 0; j--){\n        max_sum_dec += arr[j];\n        max_sum_dec_arr.push(arr[j]);\n        if(max_sum_dec > max_sum){\n            max_sum = max_sum_dec;\n            max_sum_arr = max_sum_dec_arr;\n            max_sum_arr_index = max_sum_dec_arr_index;\n        }\n        if(arr[j] > arr[j-1]){\n            max_sum_dec = 0;\n            max_sum_dec_arr = [];\n            max_sum_dec_arr_index = j-1;\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  33,\n  100\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmp1p9ii4qj.js:49:10)\n    at Object.<anonymous> (/tmp/tmp1p9ii4qj.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 33, 100 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        max_sum += arr[i];\n        if(max_sum < 0){\n            max_sum = 0;\n        }\n        if(max < max_sum){\n            max = max_sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpq_17w4i1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpq_17w4i1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_index = 0;\n    var max_sum_arr_index_end = 0;\n    var max_sum_arr_index_start = 0;\n    var max_sum_arr_index_end_start = 0;\n    var max_sum_arr_index_end_end = 0;\n    var max_sum_arr_index_start_start = 0;\n    var max_sum_arr_index_start_end = 0;\n    var max_sum_arr_index_start_start_start = 0;\n    var max_sum_arr_index_start_start_end = 0;\n    var max_sum_arr_index_start_end_start = 0;\n    var max_sum_arr_index_start_end_end = 0;\n    var max_sum_arr_index_end_start_start = 0;\n    var max_sum_arr_index_end_start_end = 0;\n    var max_sum_arr_index_end_end_start = 0;\n    var max_sum_arr_index_end_end_end = 0;\n    var max_sum_arr_index_start_start_start_start = 0;\n    var max_sum_arr_index_start_start_start_end = 0;\n    var max_sum_arr_index_start_start_end_start = 0;\n    var max_sum_arr_index_start_start_end_end = 0;\n    var max_sum_arr_index_start_end_start_start = 0;\n    var max_sum_arr_index_start_end_start_end = 0;\n    var max_sum_arr_index_start_end_end_start = 0;\n    var max_sum_arr_index_start_end_end_end = 0;\n    var max_sum_arr_index_end_start_start_start = 0;\n    var max_sum_arr_index_end_start_start_end = 0;\n    var max_sum_arr_index_end_start_end_start = 0\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "/tmp/tmpmqp6mrst.js:41\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i = 0; i < arr.length; i++){\n    var sum = 0;\n    var j = i;\n    while(arr[j] < arr[j+1] && j < arr.length){\n      sum += arr[j];\n      j++;\n    }\n    while(arr[j] > arr[j+1] && j < arr.length){\n      sum += arr[j];\n      j++;\n    }\n    if(sum > max){\n      max = sum;\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n133\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpu8w1qms4.js:27:10)\n    at Object.<anonymous> (/tmp/tmpu8w1qms4.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 133,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n  var max = 0;\n  for(var i=0; i<arr.length; i++){\n    var sum = 0;\n    for(var j=i; j<arr.length; j++){\n      sum += arr[j];\n      if(sum > max){\n        max = sum;\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgfkunsop.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgfkunsop.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            if(sum > max_sum){\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpgn27ktos.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgn27ktos.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n                sum_arr.push(arr[j]);\n                if(sum > max_sum){\n                    max_sum = sum;\n                    max_sum_arr = sum_arr;\n                }\n            }\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  51,\n  45,\n  100,\n  18\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpnjklc9hr.js:27:10)\n    at Object.<anonymous> (/tmp/tmpnjklc9hr.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 51, 45, 100, 18 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if(sum > max_sum){\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n  51,\n  45,\n  33,\n  100,\n  12,\n  18,\n  9\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplb5txjjr.js:25:10)\n    at Object.<anonymous> (/tmp/tmplb5txjjr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1, 15, 51, 45, 33,\n    100, 12, 18,  9\n  ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_start = 0;\n    var max_sum_end = 0;\n    var sum = 0;\n    var sum_start = 0;\n    var sum_end = 0;\n    var increasing = true;\n    for(var i = 0; i < arr.length; i++){\n        if(increasing){\n            if(arr[i] > arr[i+1]){\n                increasing = false;\n                sum_end = i;\n            }\n        }\n        else{\n            if(arr[i] < arr[i+1]){\n                increasing = true;\n                sum_start = i+1;\n                sum = 0;\n                for(var j = sum_start; j <= sum_end; j++){\n                    sum += arr[j];\n                }\n                if(sum > max_sum){\n                    max_sum = sum;\n                    max_sum_start = sum_start;\n                    max_sum_end = sum_end;\n                }\n            }\n        }\n    }\n    return [max_sum, max_sum_start, max_sum_end];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  0\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpecuv8o5r.js:41:10)\n    at Object.<anonymous> (/tmp/tmpecuv8o5r.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0 ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        for(var j = i; j < arr.length; j++){\n            if(arr[j] > arr[j+1]){\n                sum += arr[j];\n            }\n        }\n        if(sum > max){\n            max = sum;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n214\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpdviv9glr.js:23:10)\n    at Object.<anonymous> (/tmp/tmpdviv9glr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 214,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > max){\n            max = sum;\n        }\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n284\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpyi01nrho.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyi01nrho.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 284,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max = 0;\n    var max_sum = 0;\n    var max_sum_arr = [];\n    var max_sum_arr_rev = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n            max_sum_arr.push(arr[i]);\n        }\n    }\n    max = 0;\n    for(var i = arr.length - 1; i >= 0; i--){\n        if(arr[i] > max){\n            max = arr[i];\n            max_sum_arr_rev.push(arr[i]);\n        }\n    }\n    for(var i = 0; i < max_sum_arr.length; i++){\n        max_sum += max_sum_arr[i];\n    }\n    for(var i = 0; i < max_sum_arr_rev.length; i++){\n        max_sum += max_sum_arr_rev[i];\n    }\n    return max_sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123880,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n294\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmpuwdnsgtm.js:34:10)\n    at Object.<anonymous> (/tmp/tmpuwdnsgtm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 294,\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr){\n    var max_sum = 0;\n    var max_sum_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n        var sum_arr = [];\n        for(var j = i; j < arr.length; j++){\n            sum += arr[j];\n            sum_arr.push(arr[j]);\n            if(sum > max_sum){\n                max_sum = sum;\n                max_sum_arr = sum_arr;\n            }\n        }\n    }\n    return max_sum_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
      "timestamp": 1666123879,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n  51,\n  45,\n  33,\n  100,\n  12,\n  18,\n  9\n]\n\nshould loosely deep-equal\n\n194\n    at test (/tmp/tmplb5txjjr.js:25:10)\n    at Object.<anonymous> (/tmp/tmplb5txjjr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1, 15, 51, 45, 33,\n    100, 12, 18,  9\n  ],\n  expected: 194,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
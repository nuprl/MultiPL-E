{
  "name": "mbpp_62_smallest_num",
  "language": "js",
  "prompt": "//Write a jsthon function to find smallest number in an array.\nfunction smallest_num(xs){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_62_smallest_num.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = smallest_num;\n  assert.deepEqual(candidate([10, 20, 1, 45, 99]),1);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n  assert.deepEqual(candidate([45, 46, 50, 60]),45);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}\n",
    "    var min = xs[0];\n    for(var i=1;i<xs.length;i++){\n        if(xs[i]<min){\n            min = xs[i];\n        }\n    }\n    return min;\n}",
    "    return Math.min.apply(null, xs);\n}\n",
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}\n",
    "    return Math.min.apply(null, xs);\n}",
    "    var min = xs[0];\n    for(var i = 1; i < xs.length; i++){\n        if(xs[i] < min){\n            min = xs[i];\n        }\n    }\n    return min;\n}\n",
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}",
    "    var min = xs[0];\n    for(var i = 0; i < xs.length; i++){\n        if(xs[i] < min){\n            min = xs[i];\n        }\n    }\n    return min;\n}",
    "    return Math.min.apply(null, xs);\n}",
    "    return Math.min.apply(null, xs);\n}\n",
    "    var min = xs[0];\n    for(var i = 1; i < xs.length; i++){\n        if(xs[i] < min){\n            min = xs[i];\n        }\n    }\n    return min;\n}\n",
    "    return Math.min.apply(null, xs);\n}",
    "    var min = xs[0];\n    for(var i=1; i<xs.length; i++){\n        if(xs[i] < min){\n            min = xs[i];\n        }\n    }\n    return min;\n}\n",
    "    return Math.min.apply(null, xs);\n}\n"
  ]
}
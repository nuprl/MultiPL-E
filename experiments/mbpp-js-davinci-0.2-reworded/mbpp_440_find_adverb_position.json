{
  "name": "mbpp_440_find_adverb_position",
  "language": "js",
  "prompt": "//Write a function to find the first adverb and their positions in a given sentence.\nfunction find_adverb_position(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_adverb_position;\n  assert.deepEqual(candidate(\"clearly!! we can see the sky\"),[0, 7, \"clearly\"]);\n  assert.deepEqual(candidate(\"seriously!! there are many roses\"),[0, 9, \"seriously\"]);\n  assert.deepEqual(candidate(\"unfortunately!! sita is going to home\"),[0, 13, \"unfortunately\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var words = text.split(\" \");\n    var adverb_position = [];\n    for(var i=0;i<words.length;i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i+1);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_list_position.push(i);\n        }\n    }\n    adverb_position.push(adverb_list);\n    adverb_position.push(adverb_list_position);\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(i);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_position_list = [];\n    var adverb_list_string = \"\";\n    var adverb_position_list_string = \"\";\n    var adverb_list_string_final = \"\";\n    var adverb_position_list_string_final = \"\";\n    var adverb_list_string_final_final = \"\";\n    var adverb_position_list_string_final_final = \"\";\n    var text_split = text.split(\" \");\n    for(var i = 0; i < text_split.length; i++){\n        if(text_split[i].endsWith(\"ly\")){\n            adverb_list.push(text_split[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_list_string += adverb_list[i] + \" \";\n    }\n    for(var i = 0; i < adverb_position.length; i++){\n        adverb_position_list_string += adverb_position[i] + \" \";\n    }\n    adverb_list_string_final = adverb_list_string.trim();\n    adverb_position_list_string_final = adverb_position_list_string.trim();\n    adverb_list_string_final_final = adverb_list_string_final.replace(/ /g, \",\");\n    adverb_position_list_string_final_final = adverb_position_list_string_final.replace(/ /g, \",\");\n    console.log(\"The adverbs are: \" + adverb_list_string_final_final);\n    console.log(\"The positions of the adverbs are: \" + adverb_position_list_string_final_final);\n}\nfind_adverb_position(\"The curtains are drawn, the sky is grey.\");\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_found = false;\n    var adverb_position_found = false;\n    var adverb_position_index = 0;\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var ad",
    "    var words = text.split(\" \");\n    var adverb_position = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb = /\\w+(ly)/g;\n    var adverb_array = text.match(adverb);\n    var adverb_position = [];\n    for(var i=0; i<adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var adverb_position_array = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    adverb_position_array.push(adverb);\n    adverb_position_array.push(adverb_position);\n    return adverb_position_array;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return adverbs + \" \" + adverb_positions;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverb_position = [];\n    var adverb_list = find_adverb(text);\n    for(var i=0; i<adverb_list.length; i++){\n        adverb_position.push(text.indexOf(adverb_list[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i=0; i<adverb_array.length; i++){\n        var position = text.indexOf(adverb_array[i]);\n        adverb_position.push(position);\n    }\n    return adverb_position;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    if(adverb_match){\n        for(var i = 0; i < adverb_match.length; i++){\n            adverb_list.push(adverb_match[i]);\n            adverb_position.push(text.indexOf(adverb_match[i]));\n        }\n        return \"Adverb(s): \" + adverb_list + \"\\nPosition(s): \" + adverb_position;\n    }\n    else{\n        return \"No adverbs found!\";\n    }\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i=0; i<adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "\tvar adverb_position = [];\n\tvar adverb_array = text.match(/\\w+ly/g);\n\tif(adverb_array){\n\t\tfor(var i = 0; i < adverb_array.length; i++){\n\t\t\tadverb_position.push(text.indexOf(adverb_array[i]));\n\t\t}\n\t}\n\treturn adverb_position;\n}\n"
  ]
}
{
  "name": "mbpp_440_find_adverb_position",
  "language": "js",
  "prompt": "//Write a function to find the first adverb and their positions in a given sentence.\nfunction find_adverb_position(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_adverb_position;\n  assert.deepEqual(candidate(\"clearly!! we can see the sky\"),[0, 7, \"clearly\"]);\n  assert.deepEqual(candidate(\"seriously!! there are many roses\"),[0, 9, \"seriously\"]);\n  assert.deepEqual(candidate(\"unfortunately!! sita is going to home\"),[0, 13, \"unfortunately\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var words = text.split(\" \");\n    var adverb_position = [];\n    for(var i=0;i<words.length;i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i+1);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_list_position.push(i);\n        }\n    }\n    adverb_position.push(adverb_list);\n    adverb_position.push(adverb_list_position);\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(i);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_position_list = [];\n    var adverb_list_string = \"\";\n    var adverb_position_list_string = \"\";\n    var adverb_list_string_final = \"\";\n    var adverb_position_list_string_final = \"\";\n    var adverb_list_string_final_final = \"\";\n    var adverb_position_list_string_final_final = \"\";\n    var text_split = text.split(\" \");\n    for(var i = 0; i < text_split.length; i++){\n        if(text_split[i].endsWith(\"ly\")){\n            adverb_list.push(text_split[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_list_string += adverb_list[i] + \" \";\n    }\n    for(var i = 0; i < adverb_position.length; i++){\n        adverb_position_list_string += adverb_position[i] + \" \";\n    }\n    adverb_list_string_final = adverb_list_string.trim();\n    adverb_position_list_string_final = adverb_position_list_string.trim();\n    adverb_list_string_final_final = adverb_list_string_final.replace(/ /g, \",\");\n    adverb_position_list_string_final_final = adverb_position_list_string_final.replace(/ /g, \",\");\n    console.log(\"The adverbs are: \" + adverb_list_string_final_final);\n    console.log(\"The positions of the adverbs are: \" + adverb_position_list_string_final_final);\n}\nfind_adverb_position(\"The curtains are drawn, the sky is grey.\");\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_found = false;\n    var adverb_position_found = false;\n    var adverb_position_index = 0;\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_found = false;\n    var adverb_found = false;\n    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var ad",
    "    var words = text.split(\" \");\n    var adverb_position = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb = /\\w+(ly)/g;\n    var adverb_array = text.match(adverb);\n    var adverb_position = [];\n    for(var i=0; i<adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var adverb_position_array = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    adverb_position_array.push(adverb);\n    adverb_position_array.push(adverb_position);\n    return adverb_position_array;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return adverbs + \" \" + adverb_positions;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverb_position = [];\n    var adverb_list = find_adverb(text);\n    for(var i=0; i<adverb_list.length; i++){\n        adverb_position.push(text.indexOf(adverb_list[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i=0; i<adverb_array.length; i++){\n        var position = text.indexOf(adverb_array[i]);\n        adverb_position.push(position);\n    }\n    return adverb_position;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    if(adverb_match){\n        for(var i = 0; i < adverb_match.length; i++){\n            adverb_list.push(adverb_match[i]);\n            adverb_position.push(text.indexOf(adverb_match[i]));\n        }\n        return \"Adverb(s): \" + adverb_list + \"\\nPosition(s): \" + adverb_position;\n    }\n    else{\n        return \"No adverbs found!\";\n    }\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i=0; i<adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "\tvar adverb_position = [];\n\tvar adverb_array = text.match(/\\w+ly/g);\n\tif(adverb_array){\n\t\tfor(var i = 0; i < adverb_array.length; i++){\n\t\t\tadverb_position.push(text.indexOf(adverb_array[i]));\n\t\t}\n\t}\n\treturn adverb_position;\n}\n",
    "    var adverb = [];\n    var position = [];\n    var text_array = text.split(\" \");\n    for(var i=0;i<text_array.length;i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb,position];\n}\nvar text = \"She ran hurriedly towards the stadium.\";\nvar result = find_adverb_position(text);",
    "    var adverb = new Array();\n    var adverb_pos = new Array();\n    var words = text.split(\" \");\n    for(var i=0;i<words.length;i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_pos.push(i+1);\n        }\n    }\n    console.log(\"Adverbs: \"+adverb);\n    console.log(\"Adverb Positions: \"+adverb_pos);\n}\n",
    "    var words = text.split(\" \");\n    var adverb = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb.push(i);\n        }\n    }\n    return adverb;\n}\nvar text = \"She ran hurriedly towards the stadium.\";",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return \"Adverbs: \" + adverb + \"\\n\" + \"Positions: \" + position;\n}",
    "    var adverb_position = [];\n    var adverb = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    return \"The adverb is \" + adverb + \" and the position is \" + adverb_position;\n}",
    "    let adverb = [];\n    let position = [];\n    let words = text.split(\" \");\n    for(let i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = 0;\n    var adverb_position_index = 0;\n    var adverb_position_list = [];\n    var adverb_position_list_index = 0;\n    var adverb_position_list_length = 0;\n    var adverb_position_list_length_index = 0;\n    var adverb_position_list_length_index_index = 0;\n    var adverb_position_list_length_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index_index_index_index_index_index_index = 0;\n    var adverb_position_list_length_index_index_index_index_index_index_index_index",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    return \"The adverb is \" + adverb + \" and their positions are \" + adverb_position;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var adverb_list_position_1 = [];\n    var adverb_list_position_2 = [];\n    var adverb_list_position_3 = [];\n    var adverb_list_position_4 = [];\n    var adverb_list_position_5 = [];\n    var adverb_list_position_6 = [];\n    var adverb_list_position_7 = [];\n    var adverb_list_position_8 = [];\n    var adverb_list_position_9 = [];\n    var adverb_list_position_10 = [];\n    var adverb_list_position_11 = [];\n    var adverb_list_position_12 = [];\n    var adverb_list_position_13 = [];\n    var adverb_list_position_14 = [];\n    var adverb_list_position_15 = [];\n    var adverb_list_position_16 = [];\n    var adverb_list_position_17 = [];\n    var adverb_list_position_18 = [];\n    var adverb_list_position_19 = [];\n    var adverb_list_position_20 = [];\n    var adverb_list_position_21 = [];\n    var adverb_list_position_22 = [];\n    var adverb_list_position_23 = [];\n    var adverb_list_position_24 = [];\n    var adverb_list_position_25 = [];\n    var adverb_list_position_26 = [];\n    var adverb_list_position_27 = [];\n    var adverb_list_position_28 = [];\n    var adverb_list_position_29 = [];\n    var adverb_list_position_30 = [];\n    var adverb_list_position_31 = [];\n    var adverb_list_position_32 = [];\n    var adverb_list_position_33 = [];\n    var adverb_list_position_34 = [];\n    var adverb_list_position_35 = [];\n    var adverb_list_position_36 = [];\n    var adverb_list_position_37 = [];\n   ",
    "    var adverb = /\\w+ly/g;\n    var result = text.match(adverb);\n    return result;\n}",
    "    var adverb = /\\w+ly/g;\n    var result = text.match(adverb);\n    return result;\n}",
    "    var adverb = [];\n    var adverb_position = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    console.log(adverb);\n    console.log(adverb_position);\n}\nfind_adverb_position(\"She worked diligently\");\n",
    "    var adverb = /\\w+ly/g;\n    var adverb_position = [];\n    var adverb_array = text.match(adverb);\n    for(var i=0; i<adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    if(adverb_array == null){\n        return \"There is no adverb in the sentence.\";\n    }\n    else{\n        for(var i = 0; i < adverb_array.length; i++){\n            adverb_position.push(text.indexOf(adverb_array[i]));\n        }\n        return adverb_position;\n    }\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    if(adverb_match){\n        for(var i = 0; i < adverb_match.length; i++){\n            adverb_list.push(adverb_match[i]);\n        }\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        var adverb_position_regex = new RegExp(adverb_list[i], \"g\");\n        var adverb_position_match = text.match(adverb_position_regex);\n        if(adverb_position_match){\n            for(var j = 0; j < adverb_position_match.length; j++){\n                adverb_position.push(text.indexOf(adverb_position_match[j]));\n            }\n        }\n    }\n    return adverb_list + \" \" + adverb_position;\n}",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i=0; i<adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_pos = text.match(/\\w+ly/g).index;\n    return adverb + \" \" + adverb_pos;\n}",
    "\tvar adverb = text.match(/\\w+ly/g);\n\tvar adverb_position = [];\n\tfor(var i=0;i<adverb.length;i++){\n\t\tadverb_position.push(text.indexOf(adverb[i]));\n\t}\n\treturn adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverbs.push(i);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverb = [];\n    var adverb_pos = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_pos.push(i+1);\n        }\n    }\n    return [adverb, adverb_pos];\n}\n",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}",
    "    var adverb_position = [];\n    var adverb_array = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    if(adverb_match){\n        for(var i = 0; i < adverb_match.length; i++){\n            adverb_array.push(adverb_match[i]);\n        }\n        for(var i = 0; i < adverb_array.length; i++){\n            adverb_position.push(text.indexOf(adverb_array[i]));\n        }\n        return adverb_position;\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var words = text.split(\" \");\n    var adverbs = [];\n    var positions = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            positions.push(i);\n        }\n    }\n    return [adverbs, positions];\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = 0;\n    var adverb_found = false;\n    for(var i=0; i<text.length; i++){\n        if(text[i] == ' '){\n            if(adverb_found){\n                adverb_position.push(adverb_index);\n                adverb_list.push(text.substring(adverb_index, i));\n                adverb_found = false;\n            }\n        }\n        else if(text[i] == 'ly'){\n            adverb_found = true;\n            adverb_index = i-1;\n        }\n    }\n    if(adverb_found){\n        adverb_position.push(adverb_index);\n        adverb_list.push(text.substring(adverb_index, text.length));\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = [];\n    for(var i=0;i<adverb.length;i++){\n        position.push(text.indexOf(adverb[i]));\n    }\n    return adverb+\" \"+position;\n}",
    "    var words = text.split(\" \");\n    var adverb_position = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_list = [];\n    var adverb_pos = [];\n    var adverb_pos_list = [];\n    var adverb_pos_list_final = [];\n    var adverb_list_final = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_pos.push(i);\n        }\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_pos_list.push(i + 1);\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_pos_list_final.push(adverb_pos_list[i] + \":\" + adverb_pos[i]);\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_list_final.push(adverb_list[i] + \":\" + adverb_pos_list_final[i]);\n    }\n    return adverb_list_final;\n}\n",
    "    var adverb = /\\w+ly/g;\n    var result = text.match(adverb);\n    console.log(result);\n}\nfind_adverb_position(\"She works silently\");\n",
    "    var adverbs = new Lexer().lex(text);\n    var adverb_positions = [];\n    adverbs.forEach(function(adverb){\n        if(adverb.tag === 'RB'){\n            adverb_positions.push(adverb.text + \" : \" + adverb.position);\n        }\n    });\n    return adverb_positions;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = text.search(/\\w+ly/g);\n    return \"Adverb: \" + adverb + \" Position: \" + position;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    return \"Adverbs: \" + adverbs + \"\\n\" + \"Position: \" + adverb_position;\n}\n",
    "    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_position_list = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_position.push(i);\n        }\n    }\n    adverb_position_list.push(adverb_list);\n    adverb_position_list.push(adverb_position);\n    return adverb_position_list;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return adverb + \" \" + adverb_position;\n}\nvar text = \"She ran hurriedly towards the stadium.\";",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb_position = [];\n    var adverb = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    return \"Adverbs: \" + adverb + \"<br>\" + \"Positions: \" + adverb_position;\n}\nvar text = \"She ran hurriedly towards the stadium.\";\ndocument.write(find_adverb_position(text));\n",
    "    var adverb_position = [];\n    var adverb_list = find_adverb(text);\n    for(var i=0;i<adverb_list.length;i++){\n        adverb_position.push(text.indexOf(adverb_list[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_positions = [];\n    var adverb_list = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_positions.push(i);\n            adverb_list.push(words[i]);\n        }\n    }\n    return [adverb_positions, adverb_list];\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = [];\n    for(var i=0; i<adverb.length; i++){\n        position.push(text.indexOf(adverb[i]));\n    }\n    return adverb + \" \" + position;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb_list.push(words[i]);\n        }\n    }\n    return [adverb_position, adverb_list];\n}\n",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i=0;i<adverb_array.length;i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    let adverb_position = [];\n    let adverb_list = [];\n    let adverb_list_position = [];\n    let adverb_list_position_string = \"\";\n    let adverb_list_string = \"\";\n    let adverb_list_string_position = \"\";\n    let adverb_list_string_position_string = \"\";\n    let adverb_list_string_string = \"\";\n    let adverb_list_string_string_position = \"\";\n    let adverb_list_string_string_position_string = \"\";\n    let adverb_list_string_string_string = \"\";\n    let adverb_list_string_string_string_position = \"\";\n    let adverb_list_string_string_string_position_string = \"\";\n    let adverb_list_string_string_string_string = \"\";\n    let adverb_list_string_string_string_string_position = \"\";\n    let adverb_list_string_string_string_string_position_string = \"\";\n    let adverb_list_string_string_string_string_string = \"\";\n    let adverb_list_string_string_string_string_string_position = \"\";\n    let adverb_list_string_string_string_string_string_position_string = \"\";\n    let adverb_list_string_string_string_string_string_string = \"\";\n    let adverb_list_string_string_string_string_string_string_position = \"\";\n    let adverb_list_string_string_string_string_string_string_position_string = \"\";\n    let adverb_list_string_string_string_string_string_string_string = \"\";\n    let adverb_list_string_string_string_string_string_string_string_position = \"\";\n    let adverb_list_string_string_string_string_string_string_string_position_string = \"\";\n    let adverb_list_string_string_string_string_string_string_string_string = \"\";\n    let adverb_list_string_string_string_string_string_string_string_string",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    let adverbs = [];\n    let words = text.split(\" \");\n    for(let i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = [];\n    for(var i = 0; i < adverb.length; i++){\n        position.push(text.indexOf(adverb[i]));\n    }\n    return adverb + \" \" + position;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = [];\n    for(var i=0;i<adverb.length;i++){\n        position.push(text.indexOf(adverb[i]));\n    }\n    return adverb+\" \"+position;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = 0;\n    var adverb_found = false;\n    var adverb_array = text.split(\" \");\n    for(var i = 0; i < adverb_array.length; i++){\n        if(adverb_array[i].endsWith(\"ly\")){\n            adverb_found = true;\n            adverb_list[adverb_index] = adverb_array[i];\n            adverb_position[adverb_index] = i+1;\n            adverb_index++;\n        }\n    }\n    if(adverb_found){\n        console.log(\"Adverbs found in the given sentence are: \" + adverb_list);\n        console.log(\"Positions of adverbs in the given sentence are: \" + adverb_position);\n    }\n    else{\n        console.log(\"No adverbs found in the given sentence.\");\n    }\n}\n",
    "    var adverbs = new Lexer().lex(text);\n    var taggedWords = new POSTagger().tag(adverbs);\n    var adverb_position = [];\n    for(i in taggedWords){\n        var taggedWord = taggedWords[i];\n        var word = taggedWord[0];\n        var tag = taggedWord[1];\n        if(tag == \"RB\"){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_list_final_position = [];\n    var adverb_list_final_position_final = [];\n    var adverb_list_final_final = [];\n    var adverb_list_final_final_position = [];\n    var adverb_list_final_final_position_final = [];\n    var adverb_list_final_final_final = [];\n    var adverb_list_final_final_final_position = [];\n    var adverb_list_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final = [];\n    var adverb_list_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_final",
    "    var adverbs = new Lexer().lex(text);\n    var adverb_positions = [];\n    var adverb_position = {};\n    adverbs.forEach(function(adverb){\n        if(adverb[1] === \"RB\"){\n            adverb_position.index = adverbs.indexOf(adverb);\n            adverb_position.adverb = adverb[0];\n            adverb_positions.push(adverb_position);\n            adverb_position = {};\n        }\n    });\n    return adverb_positions;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = [];\n    var adverb_position = [];\n    var adverb_list = text.match(/\\w+ly/g);\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_index.push(text.indexOf(adverb_list[i]));\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_position.push(adverb_list[i] + \" \" + adverb_index[i]);\n    }\n    return adverb_position;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var words = text.split(\" \");\n    var adverbs = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_position_list = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_position.push(i);\n        }\n    }\n    adverb_position_list.push(adverb_list);\n    adverb_position_list.push(adverb_position);\n    return adverb_position_list;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+(ly)/g;\n    var adverb_match = text.match(adverb_regex);\n    if(adverb_match){\n        for(var i=0; i<adverb_match.length; i++){\n            adverb_list.push(adverb_match[i]);\n            adverb_position.push(text.indexOf(adverb_match[i]));\n        }\n        return {\n            adverb_list: adverb_list,\n            adverb_position: adverb_position\n        };\n    }\n    else{\n        return \"No adverb found\";\n    }\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = [];\n    for(var i = 0; i < adverb.length; i++){\n        position.push(text.indexOf(adverb[i]));\n    }\n    return [adverb, position];\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_pos = text.match(/\\w+ly/g).index;\n    console.log(adverb);\n    console.log(adverb_pos);\n}\nfind_adverb_position(\"She works quickly because she wants to finish her work early\");\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverbs.push(text_array[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return adverbs, adverb_positions;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    let adverb = text.match(/\\w+ly/g);\n    let adverb_position = [];\n    for(let i=0;i<adverb.length;i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_position_index = [];\n    var adverb_position_text = [];\n    var adverb_position_text_index = [];\n    var adverb_position_text_index_final = [];\n    var adverb_position_text_final = [];\n    var adverb_position_final = [];\n    var adverb_position_final_index = [];\n    var adverb_position_final_index_final = [];\n    var adverb_position_final_final = [];\n    var adverb_position_final_final_index = [];\n    var adverb_position_final_final_index_final = [];\n    var adverb_position_final_final_final = [];\n    var adverb_position_final_final_final_index = [];\n    var adverb_position_final_final_final_index_final = [];\n    var adverb_position_final_final_final_final = [];\n    var adverb_position_final_final_final_final_index = [];\n    var adverb_position_final_final_final_final_index_final = [];\n    var adverb_position_final_final_final_final_final = [];\n    var adverb_position_final_final_final_final_final_index = [];\n    var adverb_position_final_final_final_final_final_index_final = [];\n    var adverb_position_final_final_final_final_final_final = [];\n    var adverb_position_final_final_final_final_final_final_index = [];\n    var adverb_position_final_final_final_final_final_final_index_final = [];\n    var adverb_position_final_final_final_final_final_final_final = [];\n    var adverb_position_final_final_final_final_final_final_final_index = [];\n    var adverb_position_final_final_final_final_final_final_final_index_final = [];\n    var adverb_position_final_final_final_final_final_final_final_final = [];\n    var adverb_position_final_final_final_final_",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    if(adverb_match){\n        for(var i=0;i<adverb_match.length;i++){\n            adverb_list.push(adverb_match[i]);\n            adverb_position.push(text.indexOf(adverb_match[i]));\n        }\n        return {\n            adverb_list: adverb_list,\n            adverb_position: adverb_position\n        };\n    }\n    else{\n        return null;\n    }\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i=0;i<words.length;i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_list_position = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_position_final = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var ad",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb = [];\n    var position = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverb_position = [];\n    var adverb = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb.push(words[i]);\n        }\n    }\n    return \"Adverb: \" + adverb + \" Position: \" + adverb_position;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverb_positions = [];\n    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_positions.push(i);\n            adverbs.push(words[i]);\n        }\n    }\n    return [adverb_positions, adverbs];\n}\n",
    "    var words = text.split(\" \");\n    var adverb_positions = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_positions.push(i);\n        }\n    }\n    return adverb_positions;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var text_list = text.split(\" \");\n    for(var i = 0; i < text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb_list.push(text_list[i]);\n        }\n    }\n    return [adverb_position, adverb_list];\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = [];\n    var text = text.split(\" \");\n    for(var i = 0; i < text.length; i++){\n        if(text[i].endsWith(\"ly\")){\n            adverb.push(text[i]);\n            adverb.push(i);\n        }\n    }\n    return adverb;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverbs.push(i);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    console.log(adverb);\n    console.log(position);\n}\nfind_adverb_position(\"She worked diligently\");\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = text.match(adverb_regex);\n    for(var i = 0; i < adverb_match.length; i++){\n        adverb_list.push(adverb_match[i]);\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_position.push(text.indexOf(adverb_list[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb = /\\w+ly/g;\n    var result = text.match(adverb);\n    return result;\n}\n",
    "    var adverb = [];\n    var pos = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            pos.push(i);\n        }\n    }\n    return adverb + \" \" + pos;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb_list.push(words[i]);\n        }\n    }\n    return [adverb_list, adverb_position];\n}\n\nvar text = \"She ran hurriedly towards the stadium.\";\nvar result = find_adverb_position(text);",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i=0;i<adverb.length;i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}",
    "    var adverb = [];\n    var position = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i);\n        }\n    }\n    adverb_position.push(adverb);\n    adverb_position.push(position);\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb = [];\n    var text = text.split(\" \");\n    for(var i = 0; i < text.length; i++){\n        if(text[i].endsWith(\"ly\")){\n            adverb.push(text[i]);\n        }\n    }\n    return adverb;\n}\nvar text = \"She ran hurriedly towards the stadium.\";",
    "    var adverb = /\\w+ly/g;\n    var result = text.match(adverb);\n    return result;\n}",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = 0;\n    var adverb_pos = 0;\n    var text_array = text.split(\" \");\n    for (var i = 0; i < text_array.length; i++) {\n        if (text_array[i].endsWith(\"ly\")) {\n            adverb_list[adverb_index] = text_array[i];\n            adverb_position[adverb_index] = i;\n            adverb_index++;\n        }\n    }\n    if (adverb_index == 0) {\n        console.log(\"There is no adverb in the sentence.\");\n    } else {\n        console.log(\"The adverb(s) in the sentence are: \" + adverb_list);\n        console.log(\"The position(s) of the adverb(s) in the sentence are: \" + adverb_position);\n    }\n}\nfind_adverb_position(\"He ran quickly. He was running slowly. He was running fast.\");\n",
    "    var adverb = /\\w+(ly)/g;\n    var adverb_list = text.match(adverb);\n    var adverb_position = [];\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_position.push(text.indexOf(adverb_list[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var adverb_list_position_final = [];\n    var adverb_list_final = [];\n    var adverb_list_final_position = [];\n    var adverb_list_final_position_final = [];\n    var adverb_list_final_final = [];\n    var adverb_list_final_final_position = [];\n    var adverb_list_final_final_position_final = [];\n    var adverb_list_final_final_final = [];\n    var adverb_list_final_final_final_position = [];\n    var adverb_list_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final = [];\n    var adverb_list_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_final_final_position_final = [];\n    var adverb_list_final_final_final_final_final_final_final_final = [];\n    var adverb_list_final_final_final_final_final_final_final_final_position = [];\n    var adverb_list_final_final_final_final_final_final",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}",
    "    var adverb = /\\w+ly/g;\n    var adverb_array = text.match(adverb);\n    var adverb_position = [];\n    for(var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var words = text.split(\" \");\n    var adverbs = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_position_list = [];\n    var adverb_list = text.match(/\\w+ly/g);\n    for(var i=0; i<adverb_list.length; i++){\n        adverb_position = text.indexOf(adverb_list[i]);\n        adverb_position_list.push(adverb_position);\n    }\n    return adverb_position_list;\n}",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i=0;i<adverb.length;i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    return \"Adverbs: \" + adverb + \"\\n\" + \"Positions: \" + adverb_position;\n}\n",
    "    var adverb = /\\w+ly/g;\n    var adverb_array = text.match(adverb);\n    var adverb_position = [];\n    for(var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = new Lexer().lex(text);\n    var taggedWords = new POSTagger().tag(adverbs);\n    var adverb_position = [];\n    for(i in taggedWords){\n        var taggedWord = taggedWords[i];\n        var word = taggedWord[0];\n        var tag = taggedWord[1];\n        if(tag === \"RB\"){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_list.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return \"Adverbs: \" + adverb_list + \"\\n\" + \"Positions: \" + adverb_position;\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb_position = [];\n    var adverb = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb.push(words[i]);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\nvar text = \"She sells seashells by the seashore.\";",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverb_position = [];\n    var adverb = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb.push(words[i]);\n        }\n    }\n    return [adverb_position, adverb];\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_index = [];\n    var adverb_list_index = [];\n    var adverb_list_index_position = [];\n    var adverb_list_index_position_final = [];\n    var adverb_list_index_position_final_final = [];\n    var adverb_list_index_position_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final = [];\n    var adverb_list_index_position_final_final_final_final_final_final_final_",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [\"quickly\", \"slowly\", \"calmly\", \"passionately\", \"softly\", \"noisily\"];\n    var text_array = text.split(\" \");\n    var adverb_position = [];\n    for(var i = 0; i < text_array.length; i++){\n        if(adverbs.indexOf(text_array[i]) !== -1){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb = /\\w+ly/g;\n    var result = text.match(adverb);\n    return result;\n}",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return [adverb, position];\n}\n",
    "    var adverb = [];\n    var position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            position.push(i+1);\n        }\n    }\n    return adverb + \" \" + position;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = new Lexer().lex(text);\n    var taggedWords = new POSTagger().tag(adverbs);\n    var adverb_position = [];\n    for(i in taggedWords){\n        var taggedWord = taggedWords[i];\n        var word = taggedWord[0];\n        var tag = taggedWord[1];\n        if(tag === \"RB\"){\n            adverb_position.push(i);\n        }\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverb = new RegExp(\"\\\\b(\\\\w+ly)\\\\b\", \"g\");\n    var adverb_array = text.match(adverb);\n    var adverb_position = [];\n    for(var i=0; i<adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = find_adverb(text);\n    for(var i=0; i<adverb_list.length; i++){\n        var adverb = adverb_list[i];\n        var position = text.indexOf(adverb);\n        adverb_position.push(position);\n    }\n    return adverb_position;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_position_list = [];\n    var adverb_position_list_final = [];\n    var adverb_list_final = [];\n    var text_split = text.split(\" \");\n    for(var i = 0; i < text_split.length; i++){\n        if(text_split[i].endsWith(\"ly\")){\n            adverb_position.push(i);\n            adverb_list.push(text_split[i]);\n        }\n    }\n    for(var i = 0; i < adverb_position.length; i++){\n        adverb_position_list.push(adverb_position[i] + 1);\n    }\n    for(var i = 0; i < adverb_position_list.length; i++){\n        adverb_position_list_final.push(adverb_position_list[i]);\n    }\n    for(var i = 0; i < adverb_list.length; i++){\n        adverb_list_final.push(adverb_list[i]);\n    }\n    console.log(adverb_position_list_final);\n    console.log(adverb_list_final);\n}\nfind_adverb_position(\"She worked diligently\");\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var text_array = text.split(\" \");\n    for(var i = 0; i < text_array.length; i++){\n        if(text_array[i].endsWith(\"ly\")){\n            adverb.push(text_array[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i=0; i<words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    console.log(\"Adverbs: \" + adverbs);\n    console.log(\"Adverb Positions: \" + adverb_positions);\n}\nfind_adverb_position(\"She ran hurriedly towards the stadium.\");\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i+1);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = [];\n    for(var i = 0; i < adverb.length; i++){\n        position.push(text.indexOf(adverb[i]));\n    }\n    return adverb + \" \" + position;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return [adverbs, adverb_positions];\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverbs.push(i);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i=0; i<adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}\n",
    "    var adverb = text.match(/\\w+ly/g);\n    var adverb_position = [];\n    for(var i = 0; i < adverb.length; i++){\n        adverb_position.push(text.indexOf(adverb[i]));\n    }\n    return adverb_position;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_array = text.match(/\\w+ly/g);\n    for(var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var text = text.split(\" \");\n    var result = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i].endsWith(\"ly\")){\n            result.push(text[i]);\n            result.push(i);\n            break;\n        }\n    }\n    return result;\n}",
    "    var adverb = /\\w+ly/g;\n    var adverb_position = [];\n    var adverb_array = text.match(adverb);\n    for(var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}\n",
    "    var words = text.split(\" \");\n    var adverb = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb.push(i);\n        }\n    }\n    return adverb;\n}\nvar text = \"She worked diligently on her homework\";",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = text.match(/\\w+ly/g);\n    if(adverb_list){\n        for(var i = 0; i < adverb_list.length; i++){\n            adverb_position.push(text.indexOf(adverb_list[i]));\n        }\n    }\n    return adverb_position;\n}\n",
    "  var adverbs = [];\n  var words = text.split(\" \");\n  for(var i = 0; i < words.length; i++){\n    if(words[i].endsWith(\"ly\")){\n      adverbs.push(words[i]);\n    }\n  }\n  return adverbs;\n}\n",
    "    var adverb_list = [];\n    var adverb_position = [];\n    var adverb_list_position = [];\n    var text_list = text.split(\" \");\n    for(var i=0; i<text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_position.push(i);\n        }\n    }\n    adverb_list_position.push(adverb_list);\n    adverb_list_position.push(adverb_position);\n    return adverb_list_position;\n}",
    "    var adverb_list = [];\n    var adverb_position = [];\n    var text_list = text.split(\" \");\n    for(var i=0; i<text_list.length; i++){\n        if(text_list[i].endsWith(\"ly\")){\n            adverb_list.push(text_list[i]);\n            adverb_position.push(i+1);\n        }\n    }\n    console.log(\"Adverbs: \" + adverb_list);\n    console.log(\"Positions: \" + adverb_position);\n}\nfind_adverb_position(\"She ran hurriedly towards the stadium.\");\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb_match = adverb_regex.exec(text);\n    while(adverb_match != null){\n        adverb_list.push(adverb_match[0]);\n        adverb_position.push(adverb_match.index);\n        adverb_match = adverb_regex.exec(text);\n    }\n    return [adverb_list, adverb_position];\n}\n",
    "    var adverbs = [];\n    var adverb_positions = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n            adverb_positions.push(i);\n        }\n    }\n    return adverbs + \" \" + adverb_positions;\n}",
    "    var adverbs = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverbs.push(words[i]);\n        }\n    }\n    return adverbs;\n}\n",
    "    var adverb_position = [];\n    var adverb_list = [];\n    var adverb_list_position = [];\n    var adverb_position_list = [];\n    var adverb_position_list_position = [];\n    var adverb_position_list_position_list = [];\n    var adverb_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list_position_list_position_list_position = [];\n    var adverb_position_list_position_list_position_list_position_list_position_list_position_list_position_list_position_list_position_list = [];\n    var adverb_position_list_position_list_position_list_position_list_position_",
    "    var adverb = text.match(/\\w+ly/g);\n    var position = text.search(/\\w+ly/g);\n    console.log(adverb);\n    console.log(position);\n}\nfind_adverb_position(\"She works quickly because she wants to finish her work as soon as possible\");\n",
    "    var adverb_position = [];\n    var adverb_array = [];\n    var adverb_regex = /\\w+ly/g;\n    var adverb = text.match(adverb_regex);\n    for (var i = 0; i < adverb.length; i++){\n        adverb_array.push(adverb[i]);\n    }\n    for (var i = 0; i < adverb_array.length; i++){\n        adverb_position.push(text.indexOf(adverb_array[i]));\n    }\n    return adverb_position;\n}",
    "    var words = text.split(\" \");\n    var adverb_positions = [];\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb_positions.push(i);\n        }\n    }\n    return adverb_positions;\n}\n",
    "    var adverb = [];\n    var adverb_position = [];\n    var words = text.split(\" \");\n    for(var i = 0; i < words.length; i++){\n        if(words[i].endsWith(\"ly\")){\n            adverb.push(words[i]);\n            adverb_position.push(i);\n        }\n    }\n    return [adverb, adverb_position];\n}"
  ]
}
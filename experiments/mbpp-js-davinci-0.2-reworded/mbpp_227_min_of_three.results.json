{
  "name": "mbpp_227_min_of_three",
  "language": "js",
  "prompt": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    }\n    else if (b < a && b < c) {\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        console.log(a);\n    }\n    else if(b<a && b<c){\n        console.log(b);\n    }\n    else{\n        console.log(c);\n    }\n}\n\nmin_of_three(1,2,3);\nmin_of_three(2,1,3);\nmin_of_three(3,2,1);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "1\n1\n1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmphl8z5j9e.js:23:10)\n    at Object.<anonymous> (/tmp/tmphl8z5j9e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b < c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    } else if (b < a && b < c){\n        return b;\n    } else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b < c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    } else if (b < a && b < c) {\n        return b;\n    } else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    } else if (b < a && b < c) {\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else if(c < a && c < b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else if(c < a && c < b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else if(c < a && c < b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else if(c < a && c < b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a<b && a<c){\n        return a;\n    }\n    else if(b<a && b<c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    } else if(b < a && b < c){\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    } else if (b < a && b < c) {\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b < c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c){\n        return a;\n    }\n    else if (b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    } else if (b < a && b < c) {\n        return b;\n    } else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if (min > b) {\n        min = b;\n    }\n    if (min > c) {\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    var min = a;\n    if(b < min){\n        min = b;\n    }\n    if(c < min){\n        min = c;\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    return Math.min(a, b, c);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if (a < b && a < c) {\n        return a;\n    } else if (b < a && b < c) {\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n\tif(a < b && a < c){\n\t\treturn a;\n\t}else if(b < a && b < c){\n\t\treturn b;\n\t}else{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }\n    else if(b < a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find minimum of three numbers.\nfunction min_of_three(a, b, c){\n    if(a < b && a < c){\n        return a;\n    }else if(b < a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_of_three;\n  assert.deepEqual(candidate(10, 20, 0),0);\n  assert.deepEqual(candidate(19, 15, 18),15);\n  assert.deepEqual(candidate(-10, -20, -30),-30);\n}\n\ntest();",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_69_is_sublist",
  "language": "js",
  "prompt": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4vckego9.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4vckego9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    for(var i = 0; i < s.length; i++){\n        if(l[i] !== s[i]){\n            sublist = false;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmppn2_lpy2.js:18:10)\n    at Object.<anonymous> (/tmp/tmppn2_lpy2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    if(l.length === s.length)\n        return l.every((v,i)=> v === s[i]);\n    for(let i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            if(l.slice(i, i+s.length).every((v,j)=> v === s[j]))\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist == true){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplhxh72cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmplhxh72cz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i+j] == s[j])\n                j++;\n            if(j == s.length)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    for(i = 0; i < l.length; i++){\n        if(l[i] == s[j]){\n            for(k = i, j = 0; k < l.length && j < s.length; k++, j++){\n                if(l[k] != s[j]){\n                    break;\n                }\n            }\n            if(j == s.length){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    if(flag == 1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length - s.length + 1; i++){\n        var j = 0;\n        while(j < s.length && l[i + j] == s[j]){\n            j++;\n        }\n        if(j == s.length){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpatekfto0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpatekfto0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if (list.indexOf(sublist) != -1) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptgaxr38g.js:16:10)\n    at Object.<anonymous> (/tmp/tmptgaxr38g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdka1n5fy.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdka1n5fy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] === s[j]){\n            j++;\n        }else{\n            j = 0;\n        }\n        i++;\n    }\n    return j === s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoiy9lqpc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiy9lqpc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++){\n        if(l[i] === s[j]){\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j === s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpatekfto0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpatekfto0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist)\n                break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while (i < l.length && j < s.length) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n        i++;\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] !== s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i=0; i<l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j=0; j<s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist)\n                break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i=0, j=0; i<l.length && j<s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    for(var i = 0; i < l.length - s.length + 1; i++){\n        var sub_arr = l.slice(i, i+s.length);\n        if(arrays_equal(sub_arr, s))\n            return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "/tmp/tmpf3utdnds.js:7\n        if(arrays_equal(sub_arr, s))\n        ^\n\nReferenceError: arrays_equal is not defined\n    at is_sublist (/tmp/tmpf3utdnds.js:7:9)\n    at test (/tmp/tmpf3utdnds.js:18:20)\n    at Object.<anonymous> (/tmp/tmpf3utdnds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    if(l.length < s.length){\n        return sublist;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i + j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpatekfto0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpatekfto0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoiy9lqpc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiy9lqpc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if (list.indexOf(sublist) != -1) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptgaxr38g.js:16:10)\n    at Object.<anonymous> (/tmp/tmptgaxr38g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] !== s[j]){\n                    sublist = false;\n                }\n            }\n            if(sublist){\n                return sublist;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplhxh72cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmplhxh72cz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if (list.indexOf(sublist) != -1) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptgaxr38g.js:16:10)\n    at Object.<anonymous> (/tmp/tmptgaxr38g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            j = 0;\n            k++;\n            i = k;\n        }\n    }\n    if(j == s.length){\n        flag = 1;\n    }\n    if(flag == 1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgbjv2xl3.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgbjv2xl3.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    var i = 0;\n    var j = 0;\n    while(i < l.length){\n        if(l[i] == s[j]){\n            j++;\n            if(j == s.length){\n                sublist = true;\n                break;\n            }\n        }else{\n            j = 0;\n        }\n        i++;\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 0;\n            for(j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]) break;\n            }\n            if(j == s.length) return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++)\n        if(l[i] == s[j])\n            j++;\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpea5mlta1.js:15:10)\n    at Object.<anonymous> (/tmp/tmpea5mlta1.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    for(var i = 0; i <= l.length - s.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i+j] == s[j])\n                j++;\n            if(j == s.length)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    if(l.length < s.length){\n        return sublist;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i + j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i=0, j=0; i<l.length && j<s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 0;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i=0, j=0; i<l.length && j<s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpx6mpdkzu.js:25:10)\n    at Object.<anonymous> (/tmp/tmpx6mpdkzu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if (sublist) {\n            break;\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3k8c6rz4.js:14:10)\n    at Object.<anonymous> (/tmp/tmp3k8c6rz4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var sub_array = l.slice(i, i + s.length);\n            if(sub_array.join() == s.join()) return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++)\n        if(l[i] == s[j])\n            j++;\n    return (j == s.length);\n}\n\nvar list = [2,4,3,5,7];\nvar sublist = [4,3];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9oab3zz6.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9oab3zz6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length) return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                }\n            }\n            if(sublist){\n                return sublist;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    for (var i = 0; i < s.length; i++){\n        if (l.indexOf(s[i]) == -1){\n            sublist = false;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp24ywqq4q.js:17:10)\n    at Object.<anonymous> (/tmp/tmp24ywqq4q.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4vckego9.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4vckego9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++){\n        if(l[i] === s[j]){\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j === s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgbjv2xl3.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgbjv2xl3.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 1;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    for(let i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            let j = 1;\n            while(j < s.length && l[i+j] == s[j]){\n                j++;\n            }\n            if(j == s.length)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n            if (sublist) {\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpx6mpdkzu.js:25:10)\n    at Object.<anonymous> (/tmp/tmpx6mpdkzu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if (list.indexOf(sublist) != -1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpg69k0uh9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpg69k0uh9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    if(l.length < s.length){\n        return sublist;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i + j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    var count = 0;\n    var len1 = l.length;\n    var len2 = s.length;\n    if (len1 == 0) {\n        return null;\n    }\n    if (len2 == 0) {\n        return null;\n    }\n    while (i < len1 && j < len2) {\n        if (l[i] == s[j]) {\n            i++;\n            j++;\n            flag = 1;\n        }\n        else {\n            j = 0;\n            flag = 0;\n            i = ++k;\n        }\n    }\n    if (flag == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) !== -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjultvkyj.js:14:10)\n    at Object.<anonymous> (/tmp/tmpjultvkyj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if (list.indexOf(sublist) != -1) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptgaxr38g.js:16:10)\n    at Object.<anonymous> (/tmp/tmptgaxr38g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if (sublist) {\n            break;\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdka1n5fy.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdka1n5fy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    var len_l = l.length;\n    var len_s = s.length;\n    if(len_s > len_l)\n        return false;\n    while(i < len_l && j < len_s){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == len_s)\n        return true;\n    else\n        return false;\n}\n\nvar l = [2, 3, 4, 5, 6];\nvar s = [4, 5];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    if(l.length < s.length){\n        sublist = false;\n    }\n    else if(l.length === s.length){\n        sublist = true;\n        for(var i = 0; i < l.length; i++){\n            if(l[i] !== s[i]){\n                sublist = false;\n            }\n        }\n    }\n    else{\n        for(var i = 0; i < l.length; i++){\n            if(l[i] === s[0]){\n                sublist = true;\n                for(var j = 0; j < s.length; j++){\n                    if(l[i+j] !== s[j]){\n                        sublist = false;\n                    }\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i+j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if (sublist) {\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var n = l.length;\n    var m = s.length;\n    while(i < n && j < m){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == m){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfp6tdczj.js:28:10)\n    at Object.<anonymous> (/tmp/tmpfp6tdczj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while (i < l.length && j < s.length) {\n        if (l[i] == s[j]) {\n            i++;\n            j++;\n        } else {\n            i++;\n        }\n    }\n    if (j == s.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2_vbzx9s.js:24:10)\n    at Object.<anonymous> (/tmp/tmp2_vbzx9s.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] !== s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist)\n                break;\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoiy9lqpc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiy9lqpc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1nyzwmdk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1nyzwmdk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist == true){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 0;\n            while(j < s.length && l[i + j] == s[j]){\n                j++;\n            }\n            if(j == s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n            if (sublist) {\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }else{\n            j = 0;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if(l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            return sublist;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgbjv2xl3.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgbjv2xl3.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 0;\n            while(j < s.length && l[i+j] == s[j])\n                j++;\n            if(j == s.length)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0; i < l.length; i++){\n        for(j = 0; j < s.length; j++){\n            if(l[i] == s[j]){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwfxyqp2n.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwfxyqp2n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) break;\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    for (var i = 0; i < s.length; i++) {\n        if (l[i] != s[i]) {\n            sublist = false;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpioxni6_a.js:18:10)\n    at Object.<anonymous> (/tmp/tmpioxni6_a.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo9d_ogmq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpo9d_ogmq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                return true;\n            }\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) !== -1){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7dgh5_i1.js:16:10)\n    at Object.<anonymous> (/tmp/tmp7dgh5_i1.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n            if (sublist) {\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) break;\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdka1n5fy.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdka1n5fy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdka1n5fy.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdka1n5fy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            j = 0;\n            k++;\n            i = k;\n        }\n    }\n    if(j == s.length){\n        flag = 1;\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp26wz3ysm.js:27:10)\n    at Object.<anonymous> (/tmp/tmp26wz3ysm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var l_len = l.length;\n    var s_len = s.length;\n    while(i < l_len && j < s_len){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }else{\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == s_len){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpatekfto0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpatekfto0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] !== s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo9d_ogmq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpo9d_ogmq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] !== s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist) break;\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++)\n        if(l[i] == s[j])\n            j++;\n    return (j == s.length);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmprjrh50_j.js:15:10)\n    at Object.<anonymous> (/tmp/tmprjrh50_j.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    for(var i = 0; i < s.length; i++){\n        if(l[i] != s[i]){\n            sublist = false;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuq9kfvb6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpuq9kfvb6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist)\n            break;\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfbf00oor.js:24:10)\n    at Object.<anonymous> (/tmp/tmpfbf00oor.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp26wz3ysm.js:27:10)\n    at Object.<anonymous> (/tmp/tmp26wz3ysm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdka1n5fy.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdka1n5fy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if (s.length == 0) return true;\n    if (l.length == 0) return false;\n    if (l[0] == s[0]) return is_sublist(l.slice(1), s.slice(1));\n    return is_sublist(l.slice(1), s);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq22wh4ns.js:13:10)\n    at Object.<anonymous> (/tmp/tmpq22wh4ns.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                break;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgbjv2xl3.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgbjv2xl3.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var len1 = l.length;\n    var len2 = s.length;\n    while(i < len1 && j < len2){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == len2){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmptyc_15e4.js:28:10)\n    at Object.<anonymous> (/tmp/tmptyc_15e4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo9d_ogmq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpo9d_ogmq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (var j = 0; j < s.length; j++) {\n                if (l[i+j] != s[j]) {\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if (sublist) {\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3k8c6rz4.js:14:10)\n    at Object.<anonymous> (/tmp/tmp3k8c6rz4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i + j] !== s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }else{\n            j = 0;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            j = 0;\n            k++;\n            i = k;\n        }\n    }\n    if(j == s.length){\n        flag = 1;\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    var i = 0;\n    var j = 0;\n    while(i < l.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n        if(j == s.length){\n            sublist = true;\n            break;\n        }\n        i++;\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var j = 0;\n            while(j < s.length && l[i + j] == s[j]){\n                j++;\n            }\n            if(j == s.length) return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for(i = 0, j = 0; i < l.length && j < s.length; i++){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    if(l.length < s.length){\n        sublist = false;\n    }\n    else{\n        for(var i = 0; i < l.length; i++){\n            if(l[i] == s[0]){\n                for(var j = 0; j < s.length; j++){\n                    if(l[i+j] != s[j]){\n                        sublist = false;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpu5r7xpij.js:29:10)\n    at Object.<anonymous> (/tmp/tmpu5r7xpij.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    if(l.length === s.length)\n        return l.join() === s.join();\n    for(let i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            let sublist = l.slice(i, i+s.length);\n            if(sublist.join() === s.join())\n                return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n            if(sublist){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length)\n        return false;\n    if(l.length === s.length)\n        return l.every((e, i) => e === s[i]);\n    for(let i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            let j = 1;\n            for(; j < s.length; j++){\n                if(l[i + j] !== s[j])\n                    break;\n            }\n            if(j === s.length)\n                return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    for(var i = 0; i < s.length; i++){\n        if(l[i] != s[i]){\n            sublist = false;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuq9kfvb6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpuq9kfvb6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i, j;\n    for (i = 0, j = 0; i < l.length && j < s.length; i++) {\n        if (l[i] == s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == s.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdka1n5fy.js:26:10)\n    at Object.<anonymous> (/tmp/tmpdka1n5fy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = true;\n    for (var i = 0; i < s.length; i++) {\n        if (l[i] !== s[i]) {\n            sublist = false;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqr261av5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqr261av5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist) return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] != s[j]){\n                    sublist = false;\n                    break;\n                }\n                sublist = true;\n            }\n        }\n    }\n    return sublist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var flag = 0;\n  for(i = 0; i < l.length; i++){\n    if(l[i] == s[j]){\n      for(k = i, j = 0; k < l.length && j < s.length; k++, j++){\n        if(l[k] != s[j]){\n          break;\n        }\n      }\n      if(j == s.length){\n        flag = 1;\n      }\n    }\n  }\n  if(flag == 1){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length){\n        return false;\n    }\n    for(var i = 0; i < l.length - s.length + 1; i++){\n        var sub_array = l.slice(i, i+s.length);\n        if(arrays_equal(sub_array, s)){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "/tmp/tmp9trpfbok.js:8\n        if(arrays_equal(sub_array, s)){\n        ^\n\nReferenceError: arrays_equal is not defined\n    at is_sublist (/tmp/tmp9trpfbok.js:8:9)\n    at test (/tmp/tmp9trpfbok.js:20:20)\n    at Object.<anonymous> (/tmp/tmp9trpfbok.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    if(list.indexOf(sublist) != -1){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplhxh72cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmplhxh72cz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpljz0i39b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpljz0i39b.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        else{\n            j = 0;\n        }\n        i++;\n    }\n    return j == s.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    var len_l = l.length, len_s = s.length;\n    while(i < len_l && j < len_s){\n        if(l[i] == s[j]){\n            i++;\n            j++;\n        }\n        else{\n            i++;\n        }\n    }\n    if(j == len_s){\n        return true;\n    }\n    return false;\n}\n\nvar l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar s = [2, 3, 4];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpc8gz6i85.js:27:10)\n    at Object.<anonymous> (/tmp/tmpc8gz6i85.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    if(l.length < s.length) return false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] == s[0]){\n            var k = 1;\n            for(var j = i + 1; j < l.length; j++){\n                if(l[j] == s[k]){\n                    k++;\n                }\n                if(k == s.length){\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpr5h70pwr.js:24:10)\n    at Object.<anonymous> (/tmp/tmpr5h70pwr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    for(i = 0; i < l.length; i++){\n        if(l[i] == s[j]){\n            for(k = i, j = 0; k < l.length && j < s.length; k++, j++){\n                if(l[k] != s[j]){\n                    break;\n                }\n            }\n            if(j == s.length){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    for (i = 0; i < l.length; i++) {\n        if (l[i] == s[j]) {\n            for (k = i, j = 0; k < l.length && j < s.length; k++, j++) {\n                if (l[k] != s[j]) {\n                    break;\n                }\n            }\n            if (j == s.length) {\n                flag = 1;\n                break;\n            }\n        }\n    }\n    if (flag == 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0, j = 0;\n    while(i < l.length && j < s.length){\n        if(l[i] == s[j]){\n            j++;\n        }\n        i++;\n    }\n    return j == s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoiy9lqpc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoiy9lqpc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = JSON.stringify(s);\n    var list = JSON.stringify(l);\n    return list.indexOf(sublist) != -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmqlcr894.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmqlcr894.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    for(i = 0; i < l.length; i++){\n        if(l[i] == s[j]){\n            for(k = i, j = 0; k < l.length && j < s.length; k++, j++){\n                if(l[k] != s[j]){\n                    break;\n                }\n            }\n            if(j == s.length){\n                flag = 1;\n            }\n        }\n    }\n    if(flag == 1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist(l, s){\n    var sublist = false;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] === s[0]){\n            sublist = true;\n            for(var j = 0; j < s.length; j++){\n                if(l[i+j] !== s[j]){\n                    sublist = false;\n                    break;\n                }\n            }\n        }\n        if(sublist){\n            break;\n        }\n    }\n    return sublist;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
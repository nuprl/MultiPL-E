{
  "name": "mbpp_794_text_starta_endb",
  "language": "js",
  "prompt": "//Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.\nfunction text_starta_endb(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_794_text_starta_endb.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_starta_endb;\n  assert.deepEqual(candidate(\"aabbbb\"),true);\n  assert.deepEqual(candidate(\"aabAbbbc\"),false);\n  assert.deepEqual(candidate(\"accddbbjjj\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return /^a.*b$/.test(text);\n}\n",
    "    var regex = /a.+b/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var regex = /a\\w*b/;\n    return regex.test(text);\n}\n",
    "    var regex = /^a.*b$/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.+b/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var regex = /a\\w*b/;\n    return regex.test(text);\n}",
    "    var regex = /a.+b/;\n    if(regex.test(text)){\n        console.log(\"true\");\n    }\n    else{\n        console.log(\"false\");\n    }\n}\n",
    "    var regex = /^a.*b$/;\n    return regex.test(text);\n}\n",
    "    return /a.+b$/.test(text);\n}\n",
    "    var regex = /^a.*b$/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.+b$/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.*b$/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    var regex = /a.+b/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var pattern = /a\\w*b/;\n    return pattern.test(text);\n}\n",
    "    var regex = /a.+b/;\n    return regex.test(text);\n}\n",
    "    var regex = /^a.*b$/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    return /^a.*b$/.test(text);\n}\n",
    "    var regex = /a\\w*b/;\n    return regex.test(text);\n}\n",
    "    var regex = /a.*b/;\n    return regex.test(text);\n}\n"
  ]
}